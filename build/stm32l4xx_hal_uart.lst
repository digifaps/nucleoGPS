ARM GAS  /tmp/cc3QCLpR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	UART_EndTxTransfer:
  25              	.LFB176:
  26              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @file    stm32l4xx_hal_uart.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   [..]
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
ARM GAS  /tmp/cc3QCLpR.s 			page 2


  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ##### Callback registration #####
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ==================================
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
ARM GAS  /tmp/cc3QCLpR.s 			page 3


  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and a pointer to the user callback function.
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     weak (surcharged) function.
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and the Callback ID.
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @endverbatim
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @attention
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * All rights reserved.</center></h2>
ARM GAS  /tmp/cc3QCLpR.s 			page 4


 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #include "stm32l4xx_hal.h"
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup STM32L4xx_HAL_Driver
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8| \
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_FIFOEN ))                      /*!< UART or USART C
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8 )) /*!< UART or
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT| \
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR3_TXFTCFG | USART_CR3_RXFTCFG ))  /*!< UART or USART 
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT))  /*!< UA
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  /tmp/cc3QCLpR.s 			page 5


 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** ===============================================================================
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in asynchronous mode.
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Baud Rate
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Word Length
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Stop Bit
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Hardware flow control
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Over Sampling Method
ARM GAS  /tmp/cc3QCLpR.s 			page 6


 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) One-Bit Sampling Method
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) data logical level inversion
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX and TX pins swap
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX overrun detection disabling
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA disabling on RX error
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) MSB first on communication line
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) auto Baud rate detection
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     are available in reference manual).
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   following table.
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Table 1. UART frame format.
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/cc3QCLpR.s 			page 7


 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 8


 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART instance */
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
ARM GAS  /tmp/cc3QCLpR.s 			page 9


 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart             UART handle.
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the LIN UART instance */
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
ARM GAS  /tmp/cc3QCLpR.s 			page 10


 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart        UART handle.
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
ARM GAS  /tmp/cc3QCLpR.s 			page 11


 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the wake up method parameter */
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
ARM GAS  /tmp/cc3QCLpR.s 			page 12


 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 13


 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/cc3QCLpR.s 			page 14


 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (pCallback == NULL)
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
ARM GAS  /tmp/cc3QCLpR.s 			page 15


 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
ARM GAS  /tmp/cc3QCLpR.s 			page 16


 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
ARM GAS  /tmp/cc3QCLpR.s 			page 17


 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/cc3QCLpR.s 			page 18


 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### IO operation functions #####
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and Half duplex data transfers.
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) There are two mode of transfer:
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            after finishing transfer.
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            using DMA mode.
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Blocking mode API's are :
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive()
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 19


1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort()
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         Errors are handled as follows :
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 provided through pData.
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *pdata16bits;
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/cc3QCLpR.s 			page 20


1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = NULL;
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = pData;
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = NULL;
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (pdata8bits == NULL)
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata16bits++;
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata8bits++;
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/cc3QCLpR.s 			page 21


1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 available through pData.
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *pdata16bits;
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask;
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = NULL;
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
ARM GAS  /tmp/cc3QCLpR.s 			page 22


1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = pData;
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = NULL;
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* as long as data have to be received */
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (pdata8bits == NULL)
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata16bits++;
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata8bits++;
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount--;
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 provided through pData.
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
ARM GAS  /tmp/cc3QCLpR.s 			page 23


1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the Tx ISR function pointer according to the data word length */
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = UART_TxISR_16BIT;
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = UART_TxISR_8BIT;
ARM GAS  /tmp/cc3QCLpR.s 			page 24


1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the Transmit Data Register Empty interrupt */
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 available through pData.
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR       = NULL;
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Configure Rx interrupt processing*/
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
ARM GAS  /tmp/cc3QCLpR.s 			page 25


1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT_FIFOEN;
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT_FIFOEN;
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT;
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT;
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 26


1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 provided through pData.
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA error callback */
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA abort callback */
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Set error code to DMA */
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_ERROR;
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
ARM GAS  /tmp/cc3QCLpR.s 			page 27


1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the parity bit (MSB position).
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 available through pData.
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize = Size;
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA error callback */
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferErrorCallback = UART_DMAError;
ARM GAS  /tmp/cc3QCLpR.s 			page 28


1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA abort callback */
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the DMA channel */
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuff
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Set error code to DMA */
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_ERROR;
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
ARM GAS  /tmp/cc3QCLpR.s 			page 29


1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
ARM GAS  /tmp/cc3QCLpR.s 			page 30


1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
ARM GAS  /tmp/cc3QCLpR.s 			page 31


1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFN
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
ARM GAS  /tmp/cc3QCLpR.s 			page 32


1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
ARM GAS  /tmp/cc3QCLpR.s 			page 33


1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
ARM GAS  /tmp/cc3QCLpR.s 			page 34


1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 35


1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE | USA
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      before any call to DMA Abort functions */
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/cc3QCLpR.s 			page 36


1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (abortcplt == 1U)
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
ARM GAS  /tmp/cc3QCLpR.s 			page 37


2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear ISR function pointers */
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR = NULL;
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset errorCode */
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Discard the received data */
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort complete callback */
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
ARM GAS  /tmp/cc3QCLpR.s 			page 38


2085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
2088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount = 0U;
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear TxISR function pointers */
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = NULL;
2118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
2136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear TxISR function pointers */
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
ARM GAS  /tmp/cc3QCLpR.s 			page 39


2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
2169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
2183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
ARM GAS  /tmp/cc3QCLpR.s 			page 40


2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount = 0U;
2212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Discard the received data */
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RxISR function pointer */
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
ARM GAS  /tmp/cc3QCLpR.s 			page 41


2256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorflags;
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorcode;
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If no error occurs */
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (errorflags == 0U)
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != 0U)
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
2288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->RxISR != NULL)
2291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR(huart);
2293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If some errors occur */
2299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != 0U)
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != 0U)
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
2311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
ARM GAS  /tmp/cc3QCLpR.s 			page 42


2313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
2337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
2351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != 0U)
2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
ARM GAS  /tmp/cc3QCLpR.s 			page 43


2370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (huart->RxISR != NULL)
2371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->RxISR(huart);
2373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           - Receiver Timeout error in Reception
2378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           - Overrun error in Reception
2379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           - any error occurs in DMA mode reception
2380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       */
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       errorcode = huart->ErrorCode;
2382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
2383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
2384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
2398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Abort DMA RX */
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             {
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             }
2408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           else
2410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
2411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Call user error callback */
2412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /*Call registered error callback*/
2414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
2423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Call user error callback */
2425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /*Call registered error callback*/
ARM GAS  /tmp/cc3QCLpR.s 			page 44


2427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error is notified to user through user error callback */
2438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered error callback*/
2440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   } /* End if some error occurs */
2451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
2454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->WakeupCallback(huart);
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
2473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
2474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
2475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != 0U)
2477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
2478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxISR != NULL)
2481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR(huart);
2483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
ARM GAS  /tmp/cc3QCLpR.s 			page 45


2484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
2489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
2504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
2510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
2517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/cc3QCLpR.s 			page 46


2541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART error callback.
2585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 47


2598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief   UART control functions
2649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
2650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
2651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
ARM GAS  /tmp/cc3QCLpR.s 			page 48


2655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
2669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
2686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Locked */
2702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_LOCK(huart);
2703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the USART RTOEN bit */
2707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
ARM GAS  /tmp/cc3QCLpR.s 			page 49


2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_OK;
2715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_BUSY;
2719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
2724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Locked */
2740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_LOCK(huart);
2741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear the USART RTOEN bit */
2745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
2750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_OK;
2753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_BUSY;
2757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
2762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/cc3QCLpR.s 			page 50


2769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 51


2826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status.
2843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Transmit break characters.
2865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
2871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Send break characters */
2878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
2879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
ARM GAS  /tmp/cc3QCLpR.s 			page 52


2883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
2894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
2895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
2896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
2898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
2899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides functions allowing to :
2900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle state.
2901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle error code
2902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
2904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Return the UART handle state.
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL state
2912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp1;
2916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp2;
2917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp1 = huart->gState;
2918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
2919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval UART Error Code
2928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
2932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
ARM GAS  /tmp/cc3QCLpR.s 			page 53


2940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval none
2949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init the UART Callback settings */
2954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
2965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
2966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg;
2979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t brrtemp;
2980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
2981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
2984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t pclk;
2985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
2987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
ARM GAS  /tmp/cc3QCLpR.s 			page 54


2997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
3002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
3003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
3005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
3009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
3010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
3011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
3012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
3013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
3014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
3015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
3017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
3019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
3022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * to huart->Init.StopBits value */
3023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
3024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
3027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
3028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
3029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
3030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
3031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
3032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
3034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
3036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
3038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
3041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
3042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
3043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
3044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
3048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check LPUART instance */
3050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
3051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Retrieve frequency clock */
3053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
ARM GAS  /tmp/cc3QCLpR.s 			page 55


3054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (HAL_RCC_GetPCLK1Freq() / UART_GET_DIV_FACTOR(huart->Init.ClockPrescal
3058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = HAL_RCC_GetPCLK1Freq();
3060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)HSI_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
3065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (uint32_t)HSI_VALUE;
3067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (HAL_RCC_GetSysClockFreq() / UART_GET_DIV_FACTOR(huart->Init.ClockPres
3072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = HAL_RCC_GetSysClockFreq();
3074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)LSE_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
3079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (uint32_t)LSE_VALUE;
3081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
3084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* if proper clock source reported */
3089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (lpuart_ker_ck_pres != 0U)
3090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
3093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
3094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         switch (clocksource)
3100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_PCLK1:
3102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             pclk = HAL_RCC_GetPCLK1Freq();
3103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPres
3105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate));
3107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
3109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_HSI:
3110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
ARM GAS  /tmp/cc3QCLpR.s 			page 56


3111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
3112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate));
3114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
3116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_SYSCLK:
3117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             pclk = HAL_RCC_GetSysClockFreq();
3118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPres
3120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate));
3122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
3124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_LSE:
3125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate, huart->Init.Cloc
3127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate));
3129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
3131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           default:
3132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ret = HAL_ERROR;
3133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
3134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* It is forbidden to write values lower than 0x300 in the LPUART_BRR register */
3137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
3138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
3140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
3142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
3144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       } /*   if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) || (lpuart_ker_ck_pres > (4096
3146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     } /* if (lpuart_ker_ck_pres != 0) */
3147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
3149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
3150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPresc
3157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
3159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
3163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPresc
3165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
3167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
ARM GAS  /tmp/cc3QCLpR.s 			page 57


3168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate, huart->Init.Clock
3172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
3174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPresc
3180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
3182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart->
3187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
3189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
3192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
3200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
3201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
3202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ret = HAL_ERROR;
3206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
3211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPres
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
3218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
3222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPres
3224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
ARM GAS  /tmp/cc3QCLpR.s 			page 58


3225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
3226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
3231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
3233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPres
3239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
3241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart-
3246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
3248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
3251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = usartdiv;
3259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ret = HAL_ERROR;
3263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
3269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
3270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear ISR function pointers */
3273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
3274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
3275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return ret;
3277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  /tmp/cc3QCLpR.s 			page 59


3282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
3291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
3294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
3298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
3301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure data inversion */
3304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
3305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
3308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
3312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
3315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
3319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
3322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
3326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
3329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
3333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
3337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
ARM GAS  /tmp/cc3QCLpR.s 			page 60


3339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
3342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
3347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
3350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Check the UART Idle State.
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
3361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
3366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tickstart = HAL_GetTick();
3367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
3370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
3376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until REACK flag is set */
3383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
3387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART State */
3391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 61


3396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
3397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart     UART handle.
3402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Tickstart Tick start value
3405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout   Timeout duration
3406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
3412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check for the Timeout */
3415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
3418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEI
3422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
3424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
3428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
3433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
3436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
3438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
3441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           
3442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
3443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TX
3445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
3447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
3451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
3452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
ARM GAS  /tmp/cc3QCLpR.s 			page 62


3453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           
3454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Process Unlocked */
3455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           __HAL_UNLOCK(huart);
3456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           
3457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
3458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
3463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  27              		.loc 1 3472 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
3473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
3476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
3477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  33              		.loc 1 3479 0
  34 0000 0268     		ldr	r2, [r0]
  35 0002 1368     		ldr	r3, [r2]
  36 0004 23F0C003 		bic	r3, r3, #192
  37 0008 1360     		str	r3, [r2]
3480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  38              		.loc 1 3483 0
  39 000a 2023     		movs	r3, #32
  40 000c 4367     		str	r3, [r0, #116]
  41 000e 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE176:
  45              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  46              		.align	1
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu fpv4-sp-d16
  52              	UART_EndRxTransfer:
  53              	.LFB177:
3484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
ARM GAS  /tmp/cc3QCLpR.s 			page 63


3485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  54              		.loc 1 3493 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LVL1:
3494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
3498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  60              		.loc 1 3499 0
  61 0000 0268     		ldr	r2, [r0]
  62 0002 1368     		ldr	r3, [r2]
  63 0004 23F49073 		bic	r3, r3, #288
  64 0008 1360     		str	r3, [r2]
3500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  65              		.loc 1 3500 0
  66 000a 0268     		ldr	r2, [r0]
  67 000c 9368     		ldr	r3, [r2, #8]
  68 000e 23F00103 		bic	r3, r3, #1
  69 0012 9360     		str	r3, [r2, #8]
3501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  70              		.loc 1 3504 0
  71 0014 2023     		movs	r3, #32
  72 0016 8367     		str	r3, [r0, #120]
3505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
  73              		.loc 1 3507 0
  74 0018 0023     		movs	r3, #0
  75 001a 0366     		str	r3, [r0, #96]
  76 001c 7047     		bx	lr
  77              		.cfi_endproc
  78              	.LFE177:
  80              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
  81              		.align	1
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	UART_TxISR_8BIT:
  88              	.LFB188:
3508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
ARM GAS  /tmp/cc3QCLpR.s 			page 64


3509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Circular mode */
3533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
ARM GAS  /tmp/cc3QCLpR.s 			page 65


3566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
3595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
3613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
ARM GAS  /tmp/cc3QCLpR.s 			page 66


3623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
3626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
3627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
3630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
3638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
3648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
3669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
ARM GAS  /tmp/cc3QCLpR.s 			page 67


3680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
3696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
3704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
ARM GAS  /tmp/cc3QCLpR.s 			page 68


3737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
3752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
3760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
3766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
ARM GAS  /tmp/cc3QCLpR.s 			page 69


3794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
3836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 70


3851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  89              		.loc 1 3859 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94              	.LVL2:
3860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
  95              		.loc 1 3861 0
  96 0000 436F     		ldr	r3, [r0, #116]
  97 0002 212B     		cmp	r3, #33
  98 0004 00D0     		beq	.L6
  99              	.L3:
 100 0006 7047     		bx	lr
 101              	.L6:
3862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 102              		.loc 1 3863 0
 103 0008 B0F85230 		ldrh	r3, [r0, #82]
 104 000c 9BB2     		uxth	r3, r3
 105 000e 73B1     		cbz	r3, .L7
3864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
3870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 106              		.loc 1 3877 0
 107 0010 0368     		ldr	r3, [r0]
 108 0012 C26C     		ldr	r2, [r0, #76]
 109 0014 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 110 0016 1A85     		strh	r2, [r3, #40]	@ movhi
3878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 111              		.loc 1 3878 0
 112 0018 C36C     		ldr	r3, [r0, #76]
 113 001a 0133     		adds	r3, r3, #1
 114 001c C364     		str	r3, [r0, #76]
3879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 115              		.loc 1 3879 0
 116 001e B0F85230 		ldrh	r3, [r0, #82]
ARM GAS  /tmp/cc3QCLpR.s 			page 71


 117 0022 9BB2     		uxth	r3, r3
 118 0024 013B     		subs	r3, r3, #1
 119 0026 9BB2     		uxth	r3, r3
 120 0028 A0F85230 		strh	r3, [r0, #82]	@ movhi
3880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 121              		.loc 1 3882 0
 122 002c EBE7     		b	.L3
 123              	.L7:
3869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 124              		.loc 1 3869 0
 125 002e 0268     		ldr	r2, [r0]
 126 0030 1368     		ldr	r3, [r2]
 127 0032 23F08003 		bic	r3, r3, #128
 128 0036 1360     		str	r3, [r2]
3873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 129              		.loc 1 3873 0
 130 0038 0268     		ldr	r2, [r0]
 131 003a 1368     		ldr	r3, [r2]
 132 003c 43F04003 		orr	r3, r3, #64
 133 0040 1360     		str	r3, [r2]
 134 0042 7047     		bx	lr
 135              		.cfi_endproc
 136              	.LFE188:
 138              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 139              		.align	1
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv4-sp-d16
 145              	UART_TxISR_16BIT:
 146              	.LFB189:
3883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 147              		.loc 1 3892 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152              	.LVL3:
3893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
3894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 153              		.loc 1 3896 0
 154 0000 436F     		ldr	r3, [r0, #116]
 155 0002 212B     		cmp	r3, #33
 156 0004 00D0     		beq	.L11
ARM GAS  /tmp/cc3QCLpR.s 			page 72


 157              	.L8:
 158 0006 7047     		bx	lr
 159              	.L11:
3897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 160              		.loc 1 3898 0
 161 0008 B0F85230 		ldrh	r3, [r0, #82]
 162 000c 9BB2     		uxth	r3, r3
 163 000e 83B1     		cbz	r3, .L12
3899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
3905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
 164              		.loc 1 3912 0
 165 0010 C36C     		ldr	r3, [r0, #76]
 166              	.LVL4:
3913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 167              		.loc 1 3913 0
 168 0012 0268     		ldr	r2, [r0]
 169 0014 1B88     		ldrh	r3, [r3]
 170              	.LVL5:
 171 0016 C3F30803 		ubfx	r3, r3, #0, #9
 172 001a 1385     		strh	r3, [r2, #40]	@ movhi
 173              	.LVL6:
3914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 174              		.loc 1 3914 0
 175 001c C36C     		ldr	r3, [r0, #76]
 176 001e 0233     		adds	r3, r3, #2
 177 0020 C364     		str	r3, [r0, #76]
3915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 178              		.loc 1 3915 0
 179 0022 B0F85230 		ldrh	r3, [r0, #82]
 180 0026 9BB2     		uxth	r3, r3
 181 0028 013B     		subs	r3, r3, #1
 182 002a 9BB2     		uxth	r3, r3
 183 002c A0F85230 		strh	r3, [r0, #82]	@ movhi
3916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 184              		.loc 1 3918 0
 185 0030 E9E7     		b	.L8
 186              	.L12:
3904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 187              		.loc 1 3904 0
 188 0032 0268     		ldr	r2, [r0]
 189 0034 1368     		ldr	r3, [r2]
 190 0036 23F08003 		bic	r3, r3, #128
ARM GAS  /tmp/cc3QCLpR.s 			page 73


 191 003a 1360     		str	r3, [r2]
3908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 192              		.loc 1 3908 0
 193 003c 0268     		ldr	r2, [r0]
 194 003e 1368     		ldr	r3, [r2]
 195 0040 43F04003 		orr	r3, r3, #64
 196 0044 1360     		str	r3, [r2]
 197 0046 7047     		bx	lr
 198              		.cfi_endproc
 199              	.LFE189:
 201              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 202              		.align	1
 203              		.weak	HAL_UART_MspInit
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu fpv4-sp-d16
 209              	HAL_UART_MspInit:
 210              	.LFB135:
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 211              		.loc 1 671 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 216              	.LVL7:
 217 0000 7047     		bx	lr
 218              		.cfi_endproc
 219              	.LFE135:
 221              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 222              		.align	1
 223              		.weak	HAL_UART_MspDeInit
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu fpv4-sp-d16
 229              	HAL_UART_MspDeInit:
 230              	.LFB136:
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 231              		.loc 1 686 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236              	.LVL8:
 237 0000 7047     		bx	lr
 238              		.cfi_endproc
 239              	.LFE136:
 241              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 242              		.align	1
 243              		.global	HAL_UART_DeInit
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv4-sp-d16
 249              	HAL_UART_DeInit:
 250              	.LFB134:
ARM GAS  /tmp/cc3QCLpR.s 			page 74


 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 251              		.loc 1 626 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              	.LVL9:
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 256              		.loc 1 628 0
 257 0000 C0B1     		cbz	r0, .L17
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 258              		.loc 1 626 0
 259 0002 38B5     		push	{r3, r4, r5, lr}
 260              	.LCFI0:
 261              		.cfi_def_cfa_offset 16
 262              		.cfi_offset 3, -16
 263              		.cfi_offset 4, -12
 264              		.cfi_offset 5, -8
 265              		.cfi_offset 14, -4
 266 0004 0446     		mov	r4, r0
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 267              		.loc 1 636 0
 268 0006 2423     		movs	r3, #36
 269 0008 4367     		str	r3, [r0, #116]
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 270              		.loc 1 638 0
 271 000a 0268     		ldr	r2, [r0]
 272 000c 1368     		ldr	r3, [r2]
 273 000e 23F00103 		bic	r3, r3, #1
 274 0012 1360     		str	r3, [r2]
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 275              		.loc 1 640 0
 276 0014 0368     		ldr	r3, [r0]
 277 0016 0025     		movs	r5, #0
 278 0018 1D60     		str	r5, [r3]
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 279              		.loc 1 641 0
 280 001a 0368     		ldr	r3, [r0]
 281 001c 5D60     		str	r5, [r3, #4]
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 282              		.loc 1 642 0
 283 001e 0368     		ldr	r3, [r0]
 284 0020 9D60     		str	r5, [r3, #8]
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 285              		.loc 1 653 0
 286 0022 FFF7FEFF 		bl	HAL_UART_MspDeInit
 287              	.LVL10:
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 288              		.loc 1 656 0
 289 0026 E567     		str	r5, [r4, #124]
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 290              		.loc 1 657 0
 291 0028 6567     		str	r5, [r4, #116]
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 292              		.loc 1 658 0
 293 002a A567     		str	r5, [r4, #120]
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 294              		.loc 1 660 0
ARM GAS  /tmp/cc3QCLpR.s 			page 75


 295 002c 84F87050 		strb	r5, [r4, #112]
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 296              		.loc 1 662 0
 297 0030 2846     		mov	r0, r5
 298 0032 38BD     		pop	{r3, r4, r5, pc}
 299              	.LVL11:
 300              	.L17:
 301              	.LCFI1:
 302              		.cfi_def_cfa_offset 0
 303              		.cfi_restore 3
 304              		.cfi_restore 4
 305              		.cfi_restore 5
 306              		.cfi_restore 14
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 307              		.loc 1 630 0
 308 0034 0120     		movs	r0, #1
 309              	.LVL12:
 310 0036 7047     		bx	lr
 311              		.cfi_endproc
 312              	.LFE134:
 314              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 315              		.align	1
 316              		.global	HAL_UART_Transmit_IT
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu fpv4-sp-d16
 322              	HAL_UART_Transmit_IT:
 323              	.LFB139:
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 324              		.loc 1 1223 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 329              	.LVL13:
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 330              		.loc 1 1225 0
 331 0000 436F     		ldr	r3, [r0, #116]
 332 0002 202B     		cmp	r3, #32
 333 0004 01D0     		beq	.L30
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 334              		.loc 1 1299 0
 335 0006 0220     		movs	r0, #2
 336              	.LVL14:
 337 0008 7047     		bx	lr
 338              	.LVL15:
 339              	.L30:
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 340              		.loc 1 1227 0
 341 000a 39B3     		cbz	r1, .L27
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 342              		.loc 1 1227 0 is_stmt 0 discriminator 1
 343 000c 42B3     		cbz	r2, .L28
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 344              		.loc 1 1232 0 is_stmt 1
 345 000e 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
ARM GAS  /tmp/cc3QCLpR.s 			page 76


 346 0012 012B     		cmp	r3, #1
 347 0014 26D0     		beq	.L29
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 348              		.loc 1 1232 0 is_stmt 0 discriminator 2
 349 0016 0123     		movs	r3, #1
 350 0018 80F87030 		strb	r3, [r0, #112]
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 351              		.loc 1 1234 0 is_stmt 1 discriminator 2
 352 001c C164     		str	r1, [r0, #76]
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 353              		.loc 1 1235 0 discriminator 2
 354 001e A0F85020 		strh	r2, [r0, #80]	@ movhi
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
 355              		.loc 1 1236 0 discriminator 2
 356 0022 A0F85220 		strh	r2, [r0, #82]	@ movhi
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 357              		.loc 1 1237 0 discriminator 2
 358 0026 0023     		movs	r3, #0
 359 0028 4366     		str	r3, [r0, #100]
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 360              		.loc 1 1239 0 discriminator 2
 361 002a C367     		str	r3, [r0, #124]
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 362              		.loc 1 1240 0 discriminator 2
 363 002c 2123     		movs	r3, #33
 364 002e 4367     		str	r3, [r0, #116]
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 365              		.loc 1 1280 0 discriminator 2
 366 0030 8368     		ldr	r3, [r0, #8]
 367 0032 B3F5805F 		cmp	r3, #4096
 368 0036 0BD0     		beq	.L31
 369              	.L24:
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 370              		.loc 1 1286 0
 371 0038 0B4B     		ldr	r3, .L32
 372 003a 4366     		str	r3, [r0, #100]
 373              	.L25:
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 374              		.loc 1 1289 0
 375 003c 0023     		movs	r3, #0
 376 003e 80F87030 		strb	r3, [r0, #112]
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 377              		.loc 1 1292 0
 378 0042 0168     		ldr	r1, [r0]
 379              	.LVL16:
 380 0044 0A68     		ldr	r2, [r1]
 381              	.LVL17:
 382 0046 42F08002 		orr	r2, r2, #128
 383 004a 0A60     		str	r2, [r1]
 384              	.LVL18:
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 385              		.loc 1 1295 0
 386 004c 1846     		mov	r0, r3
 387              	.LVL19:
 388 004e 7047     		bx	lr
 389              	.LVL20:
 390              	.L31:
ARM GAS  /tmp/cc3QCLpR.s 			page 77


1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 391              		.loc 1 1280 0 discriminator 1
 392 0050 0369     		ldr	r3, [r0, #16]
 393 0052 002B     		cmp	r3, #0
 394 0054 F0D1     		bne	.L24
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 395              		.loc 1 1282 0
 396 0056 054B     		ldr	r3, .L32+4
 397 0058 4366     		str	r3, [r0, #100]
 398 005a EFE7     		b	.L25
 399              	.L27:
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 400              		.loc 1 1229 0
 401 005c 0120     		movs	r0, #1
 402              	.LVL21:
 403 005e 7047     		bx	lr
 404              	.LVL22:
 405              	.L28:
 406 0060 0120     		movs	r0, #1
 407              	.LVL23:
 408 0062 7047     		bx	lr
 409              	.LVL24:
 410              	.L29:
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 411              		.loc 1 1232 0
 412 0064 0220     		movs	r0, #2
 413              	.LVL25:
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 414              		.loc 1 1301 0
 415 0066 7047     		bx	lr
 416              	.L33:
 417              		.align	2
 418              	.L32:
 419 0068 00000000 		.word	UART_TxISR_8BIT
 420 006c 00000000 		.word	UART_TxISR_16BIT
 421              		.cfi_endproc
 422              	.LFE139:
 424              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 425              		.align	1
 426              		.global	HAL_UART_Receive_IT
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 430              		.fpu fpv4-sp-d16
 432              	HAL_UART_Receive_IT:
 433              	.LFB140:
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 434              		.loc 1 1314 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 439              	.LVL26:
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 440              		.loc 1 1316 0
 441 0000 836F     		ldr	r3, [r0, #120]
 442 0002 202B     		cmp	r3, #32
ARM GAS  /tmp/cc3QCLpR.s 			page 78


 443 0004 01D0     		beq	.L49
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 444              		.loc 1 1397 0
 445 0006 0220     		movs	r0, #2
 446              	.LVL27:
 447 0008 7047     		bx	lr
 448              	.LVL28:
 449              	.L49:
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 450              		.loc 1 1318 0
 451 000a 0029     		cmp	r1, #0
 452 000c 58D0     		beq	.L46
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 453              		.loc 1 1318 0 is_stmt 0 discriminator 1
 454 000e 002A     		cmp	r2, #0
 455 0010 58D0     		beq	.L47
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 456              		.loc 1 1323 0 is_stmt 1
 457 0012 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 458 0016 012B     		cmp	r3, #1
 459 0018 56D0     		beq	.L48
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 460              		.loc 1 1323 0 is_stmt 0 discriminator 2
 461 001a 0123     		movs	r3, #1
 462 001c 80F87030 		strb	r3, [r0, #112]
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 463              		.loc 1 1325 0 is_stmt 1 discriminator 2
 464 0020 4165     		str	r1, [r0, #84]
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 465              		.loc 1 1326 0 discriminator 2
 466 0022 A0F85820 		strh	r2, [r0, #88]	@ movhi
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR       = NULL;
 467              		.loc 1 1327 0 discriminator 2
 468 0026 A0F85A20 		strh	r2, [r0, #90]	@ movhi
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 469              		.loc 1 1328 0 discriminator 2
 470 002a 0023     		movs	r3, #0
 471 002c 0366     		str	r3, [r0, #96]
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 472              		.loc 1 1331 0 discriminator 2
 473 002e 8368     		ldr	r3, [r0, #8]
 474 0030 B3F5805F 		cmp	r3, #4096
 475 0034 06D0     		beq	.L50
 476 0036 A3B9     		cbnz	r3, .L39
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 477              		.loc 1 1331 0 is_stmt 0 discriminator 5
 478 0038 0369     		ldr	r3, [r0, #16]
 479 003a 73B9     		cbnz	r3, .L40
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 480              		.loc 1 1331 0 discriminator 7
 481 003c FF23     		movs	r3, #255
 482 003e A0F85C30 		strh	r3, [r0, #92]	@ movhi
 483 0042 14E0     		b	.L38
 484              	.L50:
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 485              		.loc 1 1331 0 discriminator 1
 486 0044 0369     		ldr	r3, [r0, #16]
ARM GAS  /tmp/cc3QCLpR.s 			page 79


 487 0046 23B9     		cbnz	r3, .L37
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 488              		.loc 1 1331 0 discriminator 3
 489 0048 40F2FF13 		movw	r3, #511
 490 004c A0F85C30 		strh	r3, [r0, #92]	@ movhi
 491 0050 0DE0     		b	.L38
 492              	.L37:
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 493              		.loc 1 1331 0 discriminator 4
 494 0052 FF23     		movs	r3, #255
 495 0054 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 496 0058 09E0     		b	.L38
 497              	.L40:
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 498              		.loc 1 1331 0 discriminator 8
 499 005a 7F23     		movs	r3, #127
 500 005c A0F85C30 		strh	r3, [r0, #92]	@ movhi
 501 0060 05E0     		b	.L38
 502              	.L39:
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 503              		.loc 1 1331 0 discriminator 6
 504 0062 B3F1805F 		cmp	r3, #268435456
 505 0066 1BD0     		beq	.L51
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 506              		.loc 1 1331 0 discriminator 10
 507 0068 0023     		movs	r3, #0
 508 006a A0F85C30 		strh	r3, [r0, #92]	@ movhi
 509              	.L38:
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 510              		.loc 1 1333 0 is_stmt 1
 511 006e 0023     		movs	r3, #0
 512 0070 C367     		str	r3, [r0, #124]
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 513              		.loc 1 1334 0
 514 0072 2223     		movs	r3, #34
 515 0074 8367     		str	r3, [r0, #120]
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 516              		.loc 1 1337 0
 517 0076 0268     		ldr	r2, [r0]
 518              	.LVL29:
 519 0078 9368     		ldr	r3, [r2, #8]
 520 007a 43F00103 		orr	r3, r3, #1
 521 007e 9360     		str	r3, [r2, #8]
 522              	.LVL30:
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 523              		.loc 1 1378 0
 524 0080 8368     		ldr	r3, [r0, #8]
 525 0082 B3F5805F 		cmp	r3, #4096
 526 0086 15D0     		beq	.L52
 527              	.L43:
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 528              		.loc 1 1384 0
 529 0088 104B     		ldr	r3, .L53
 530 008a 0366     		str	r3, [r0, #96]
 531              	.L44:
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 532              		.loc 1 1387 0
ARM GAS  /tmp/cc3QCLpR.s 			page 80


 533 008c 0023     		movs	r3, #0
 534 008e 80F87030 		strb	r3, [r0, #112]
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 535              		.loc 1 1390 0
 536 0092 0168     		ldr	r1, [r0]
 537              	.LVL31:
 538 0094 0A68     		ldr	r2, [r1]
 539 0096 42F49072 		orr	r2, r2, #288
 540 009a 0A60     		str	r2, [r1]
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 541              		.loc 1 1393 0
 542 009c 1846     		mov	r0, r3
 543              	.LVL32:
 544 009e 7047     		bx	lr
 545              	.LVL33:
 546              	.L51:
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 547              		.loc 1 1331 0 discriminator 9
 548 00a0 0369     		ldr	r3, [r0, #16]
 549 00a2 1BB9     		cbnz	r3, .L42
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 550              		.loc 1 1331 0 is_stmt 0 discriminator 11
 551 00a4 7F23     		movs	r3, #127
 552 00a6 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 553 00aa E0E7     		b	.L38
 554              	.L42:
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 555              		.loc 1 1331 0 discriminator 12
 556 00ac 3F23     		movs	r3, #63
 557 00ae A0F85C30 		strh	r3, [r0, #92]	@ movhi
 558 00b2 DCE7     		b	.L38
 559              	.LVL34:
 560              	.L52:
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 561              		.loc 1 1378 0 is_stmt 1 discriminator 1
 562 00b4 0369     		ldr	r3, [r0, #16]
 563 00b6 002B     		cmp	r3, #0
 564 00b8 E6D1     		bne	.L43
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 565              		.loc 1 1380 0
 566 00ba 054B     		ldr	r3, .L53+4
 567 00bc 0366     		str	r3, [r0, #96]
 568 00be E5E7     		b	.L44
 569              	.LVL35:
 570              	.L46:
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 571              		.loc 1 1320 0
 572 00c0 0120     		movs	r0, #1
 573              	.LVL36:
 574 00c2 7047     		bx	lr
 575              	.LVL37:
 576              	.L47:
 577 00c4 0120     		movs	r0, #1
 578              	.LVL38:
 579 00c6 7047     		bx	lr
 580              	.LVL39:
 581              	.L48:
ARM GAS  /tmp/cc3QCLpR.s 			page 81


1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 582              		.loc 1 1323 0
 583 00c8 0220     		movs	r0, #2
 584              	.LVL40:
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 585              		.loc 1 1399 0
 586 00ca 7047     		bx	lr
 587              	.L54:
 588              		.align	2
 589              	.L53:
 590 00cc 00000000 		.word	UART_RxISR_8BIT
 591 00d0 00000000 		.word	UART_RxISR_16BIT
 592              		.cfi_endproc
 593              	.LFE140:
 595              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 596              		.align	1
 597              		.global	HAL_UART_Transmit_DMA
 598              		.syntax unified
 599              		.thumb
 600              		.thumb_func
 601              		.fpu fpv4-sp-d16
 603              	HAL_UART_Transmit_DMA:
 604              	.LFB141:
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 605              		.loc 1 1412 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              	.LVL41:
 610 0000 10B5     		push	{r4, lr}
 611              	.LCFI2:
 612              		.cfi_def_cfa_offset 8
 613              		.cfi_offset 4, -8
 614              		.cfi_offset 14, -4
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 615              		.loc 1 1414 0
 616 0002 446F     		ldr	r4, [r0, #116]
 617 0004 202C     		cmp	r4, #32
 618 0006 01D0     		beq	.L63
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 619              		.loc 1 1471 0
 620 0008 0220     		movs	r0, #2
 621              	.LVL42:
 622 000a 10BD     		pop	{r4, pc}
 623              	.LVL43:
 624              	.L63:
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 625              		.loc 1 1416 0
 626 000c 0029     		cmp	r1, #0
 627 000e 3CD0     		beq	.L59
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 628              		.loc 1 1416 0 is_stmt 0 discriminator 1
 629 0010 002A     		cmp	r2, #0
 630 0012 3CD0     		beq	.L60
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 631              		.loc 1 1421 0 is_stmt 1
 632 0014 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
ARM GAS  /tmp/cc3QCLpR.s 			page 82


 633 0018 012B     		cmp	r3, #1
 634 001a 3AD0     		beq	.L61
 635 001c 1346     		mov	r3, r2
 636 001e 0446     		mov	r4, r0
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 637              		.loc 1 1421 0 is_stmt 0 discriminator 2
 638 0020 0122     		movs	r2, #1
 639              	.LVL44:
 640 0022 80F87020 		strb	r2, [r0, #112]
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 641              		.loc 1 1423 0 is_stmt 1 discriminator 2
 642 0026 C164     		str	r1, [r0, #76]
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 643              		.loc 1 1424 0 discriminator 2
 644 0028 A0F85030 		strh	r3, [r0, #80]	@ movhi
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 645              		.loc 1 1425 0 discriminator 2
 646 002c A0F85230 		strh	r3, [r0, #82]	@ movhi
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 647              		.loc 1 1427 0 discriminator 2
 648 0030 0022     		movs	r2, #0
 649 0032 C267     		str	r2, [r0, #124]
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 650              		.loc 1 1428 0 discriminator 2
 651 0034 2122     		movs	r2, #33
 652 0036 4267     		str	r2, [r0, #116]
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 653              		.loc 1 1430 0 discriminator 2
 654 0038 826E     		ldr	r2, [r0, #104]
 655 003a 8AB1     		cbz	r2, .L57
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 656              		.loc 1 1433 0
 657 003c 1649     		ldr	r1, .L65
 658              	.LVL45:
 659 003e D162     		str	r1, [r2, #44]
 660              	.LVL46:
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 661              		.loc 1 1436 0
 662 0040 826E     		ldr	r2, [r0, #104]
 663 0042 1649     		ldr	r1, .L65+4
 664 0044 1163     		str	r1, [r2, #48]
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 665              		.loc 1 1439 0
 666 0046 826E     		ldr	r2, [r0, #104]
 667 0048 1549     		ldr	r1, .L65+8
 668 004a 5163     		str	r1, [r2, #52]
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 669              		.loc 1 1442 0
 670 004c 826E     		ldr	r2, [r0, #104]
 671 004e 0021     		movs	r1, #0
 672 0050 9163     		str	r1, [r2, #56]
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 673              		.loc 1 1445 0
 674 0052 0268     		ldr	r2, [r0]
 675 0054 2832     		adds	r2, r2, #40
 676 0056 C16C     		ldr	r1, [r0, #76]
 677 0058 806E     		ldr	r0, [r0, #104]
ARM GAS  /tmp/cc3QCLpR.s 			page 83


 678              	.LVL47:
 679 005a FFF7FEFF 		bl	HAL_DMA_Start_IT
 680              	.LVL48:
 681 005e 58B9     		cbnz	r0, .L64
 682              	.L57:
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 683              		.loc 1 1459 0
 684 0060 2368     		ldr	r3, [r4]
 685 0062 4022     		movs	r2, #64
 686 0064 1A62     		str	r2, [r3, #32]
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 687              		.loc 1 1461 0
 688 0066 0020     		movs	r0, #0
 689 0068 84F87000 		strb	r0, [r4, #112]
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 690              		.loc 1 1465 0
 691 006c 2268     		ldr	r2, [r4]
 692 006e 9368     		ldr	r3, [r2, #8]
 693 0070 43F08003 		orr	r3, r3, #128
 694 0074 9360     		str	r3, [r2, #8]
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 695              		.loc 1 1467 0
 696 0076 10BD     		pop	{r4, pc}
 697              	.LVL49:
 698              	.L64:
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 699              		.loc 1 1448 0
 700 0078 1023     		movs	r3, #16
 701 007a E367     		str	r3, [r4, #124]
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 702              		.loc 1 1450 0
 703 007c 0023     		movs	r3, #0
 704 007e 84F87030 		strb	r3, [r4, #112]
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 705              		.loc 1 1453 0
 706 0082 2023     		movs	r3, #32
 707 0084 6367     		str	r3, [r4, #116]
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 708              		.loc 1 1455 0
 709 0086 0120     		movs	r0, #1
 710 0088 10BD     		pop	{r4, pc}
 711              	.LVL50:
 712              	.L59:
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 713              		.loc 1 1418 0
 714 008a 0120     		movs	r0, #1
 715              	.LVL51:
 716 008c 10BD     		pop	{r4, pc}
 717              	.LVL52:
 718              	.L60:
 719 008e 0120     		movs	r0, #1
 720              	.LVL53:
 721 0090 10BD     		pop	{r4, pc}
 722              	.LVL54:
 723              	.L61:
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 724              		.loc 1 1421 0
ARM GAS  /tmp/cc3QCLpR.s 			page 84


 725 0092 0220     		movs	r0, #2
 726              	.LVL55:
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 727              		.loc 1 1473 0
 728 0094 10BD     		pop	{r4, pc}
 729              	.L66:
 730 0096 00BF     		.align	2
 731              	.L65:
 732 0098 00000000 		.word	UART_DMATransmitCplt
 733 009c 00000000 		.word	UART_DMATxHalfCplt
 734 00a0 00000000 		.word	UART_DMAError
 735              		.cfi_endproc
 736              	.LFE141:
 738              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 739              		.align	1
 740              		.global	HAL_UART_Receive_DMA
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 744              		.fpu fpv4-sp-d16
 746              	HAL_UART_Receive_DMA:
 747              	.LFB142:
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 748              		.loc 1 1488 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              	.LVL56:
 753 0000 10B5     		push	{r4, lr}
 754              	.LCFI3:
 755              		.cfi_def_cfa_offset 8
 756              		.cfi_offset 4, -8
 757              		.cfi_offset 14, -4
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 758              		.loc 1 1490 0
 759 0002 846F     		ldr	r4, [r0, #120]
 760 0004 202C     		cmp	r4, #32
 761 0006 01D0     		beq	.L75
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 762              		.loc 1 1549 0
 763 0008 0220     		movs	r0, #2
 764              	.LVL57:
 765 000a 10BD     		pop	{r4, pc}
 766              	.LVL58:
 767              	.L75:
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 768              		.loc 1 1492 0
 769 000c 0029     		cmp	r1, #0
 770 000e 41D0     		beq	.L71
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 771              		.loc 1 1492 0 is_stmt 0 discriminator 1
 772 0010 002A     		cmp	r2, #0
 773 0012 41D0     		beq	.L72
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 774              		.loc 1 1497 0 is_stmt 1
 775 0014 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 776 0018 012B     		cmp	r3, #1
ARM GAS  /tmp/cc3QCLpR.s 			page 85


 777 001a 3FD0     		beq	.L73
 778 001c 1346     		mov	r3, r2
 779 001e 0446     		mov	r4, r0
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 780              		.loc 1 1497 0 is_stmt 0 discriminator 2
 781 0020 0122     		movs	r2, #1
 782              	.LVL59:
 783 0022 80F87020 		strb	r2, [r0, #112]
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize = Size;
 784              		.loc 1 1499 0 is_stmt 1 discriminator 2
 785 0026 4165     		str	r1, [r0, #84]
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 786              		.loc 1 1500 0 discriminator 2
 787 0028 A0F85830 		strh	r3, [r0, #88]	@ movhi
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 788              		.loc 1 1502 0 discriminator 2
 789 002c 0022     		movs	r2, #0
 790 002e C267     		str	r2, [r0, #124]
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 791              		.loc 1 1503 0 discriminator 2
 792 0030 2222     		movs	r2, #34
 793 0032 8267     		str	r2, [r0, #120]
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 794              		.loc 1 1505 0 discriminator 2
 795 0034 C26E     		ldr	r2, [r0, #108]
 796 0036 8AB1     		cbz	r2, .L69
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 797              		.loc 1 1508 0
 798 0038 1949     		ldr	r1, .L77
 799              	.LVL60:
 800 003a D162     		str	r1, [r2, #44]
 801              	.LVL61:
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 802              		.loc 1 1511 0
 803 003c C26E     		ldr	r2, [r0, #108]
 804 003e 1949     		ldr	r1, .L77+4
 805 0040 1163     		str	r1, [r2, #48]
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 806              		.loc 1 1514 0
 807 0042 C26E     		ldr	r2, [r0, #108]
 808 0044 1849     		ldr	r1, .L77+8
 809 0046 5163     		str	r1, [r2, #52]
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 810              		.loc 1 1517 0
 811 0048 C26E     		ldr	r2, [r0, #108]
 812 004a 0021     		movs	r1, #0
 813 004c 9163     		str	r1, [r2, #56]
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 814              		.loc 1 1520 0
 815 004e 0168     		ldr	r1, [r0]
 816 0050 426D     		ldr	r2, [r0, #84]
 817 0052 2431     		adds	r1, r1, #36
 818 0054 C06E     		ldr	r0, [r0, #108]
 819              	.LVL62:
 820 0056 FFF7FEFF 		bl	HAL_DMA_Start_IT
 821              	.LVL63:
 822 005a 90B9     		cbnz	r0, .L76
ARM GAS  /tmp/cc3QCLpR.s 			page 86


 823              	.L69:
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 824              		.loc 1 1533 0
 825 005c 0020     		movs	r0, #0
 826 005e 84F87000 		strb	r0, [r4, #112]
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 827              		.loc 1 1536 0
 828 0062 2268     		ldr	r2, [r4]
 829 0064 1368     		ldr	r3, [r2]
 830 0066 43F48073 		orr	r3, r3, #256
 831 006a 1360     		str	r3, [r2]
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 832              		.loc 1 1539 0
 833 006c 2268     		ldr	r2, [r4]
 834 006e 9368     		ldr	r3, [r2, #8]
 835 0070 43F00103 		orr	r3, r3, #1
 836 0074 9360     		str	r3, [r2, #8]
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 837              		.loc 1 1543 0
 838 0076 2268     		ldr	r2, [r4]
 839 0078 9368     		ldr	r3, [r2, #8]
 840 007a 43F04003 		orr	r3, r3, #64
 841 007e 9360     		str	r3, [r2, #8]
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 842              		.loc 1 1545 0
 843 0080 10BD     		pop	{r4, pc}
 844              	.LVL64:
 845              	.L76:
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 846              		.loc 1 1523 0
 847 0082 1023     		movs	r3, #16
 848 0084 E367     		str	r3, [r4, #124]
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 849              		.loc 1 1525 0
 850 0086 0023     		movs	r3, #0
 851 0088 84F87030 		strb	r3, [r4, #112]
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 852              		.loc 1 1528 0
 853 008c 2023     		movs	r3, #32
 854 008e 6367     		str	r3, [r4, #116]
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 855              		.loc 1 1530 0
 856 0090 0120     		movs	r0, #1
 857 0092 10BD     		pop	{r4, pc}
 858              	.LVL65:
 859              	.L71:
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 860              		.loc 1 1494 0
 861 0094 0120     		movs	r0, #1
 862              	.LVL66:
 863 0096 10BD     		pop	{r4, pc}
 864              	.LVL67:
 865              	.L72:
 866 0098 0120     		movs	r0, #1
 867              	.LVL68:
 868 009a 10BD     		pop	{r4, pc}
 869              	.LVL69:
ARM GAS  /tmp/cc3QCLpR.s 			page 87


 870              	.L73:
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 871              		.loc 1 1497 0
 872 009c 0220     		movs	r0, #2
 873              	.LVL70:
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 874              		.loc 1 1551 0
 875 009e 10BD     		pop	{r4, pc}
 876              	.L78:
 877              		.align	2
 878              	.L77:
 879 00a0 00000000 		.word	UART_DMAReceiveCplt
 880 00a4 00000000 		.word	UART_DMARxHalfCplt
 881 00a8 00000000 		.word	UART_DMAError
 882              		.cfi_endproc
 883              	.LFE142:
 885              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 886              		.align	1
 887              		.global	HAL_UART_DMAPause
 888              		.syntax unified
 889              		.thumb
 890              		.thumb_func
 891              		.fpu fpv4-sp-d16
 893              	HAL_UART_DMAPause:
 894              	.LFB143:
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 895              		.loc 1 1559 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899              		@ link register save eliminated.
 900              	.LVL71:
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 901              		.loc 1 1560 0
 902 0000 416F     		ldr	r1, [r0, #116]
 903              	.LVL72:
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 904              		.loc 1 1561 0
 905 0002 826F     		ldr	r2, [r0, #120]
 906              	.LVL73:
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 907              		.loc 1 1563 0
 908 0004 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 909 0008 012B     		cmp	r3, #1
 910 000a 2CD0     		beq	.L83
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 911              		.loc 1 1559 0 discriminator 2
 912 000c 10B4     		push	{r4}
 913              	.LCFI4:
 914              		.cfi_def_cfa_offset 4
 915              		.cfi_offset 4, -4
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 916              		.loc 1 1563 0 discriminator 2
 917 000e 0123     		movs	r3, #1
 918 0010 80F87030 		strb	r3, [r0, #112]
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 919              		.loc 1 1565 0 discriminator 2
ARM GAS  /tmp/cc3QCLpR.s 			page 88


 920 0014 0368     		ldr	r3, [r0]
 921 0016 9C68     		ldr	r4, [r3, #8]
 922 0018 14F0800F 		tst	r4, #128
 923 001c 01D0     		beq	.L81
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 924              		.loc 1 1565 0 is_stmt 0 discriminator 1
 925 001e 2129     		cmp	r1, #33
 926 0020 0DD0     		beq	.L88
 927              	.LVL74:
 928              	.L81:
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 929              		.loc 1 1571 0 is_stmt 1
 930 0022 0368     		ldr	r3, [r0]
 931 0024 9968     		ldr	r1, [r3, #8]
 932 0026 11F0400F 		tst	r1, #64
 933 002a 01D0     		beq	.L82
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 934              		.loc 1 1571 0 is_stmt 0 discriminator 1
 935 002c 222A     		cmp	r2, #34
 936 002e 0BD0     		beq	.L89
 937              	.LVL75:
 938              	.L82:
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 939              		.loc 1 1582 0 is_stmt 1
 940 0030 0023     		movs	r3, #0
 941 0032 80F87030 		strb	r3, [r0, #112]
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 942              		.loc 1 1584 0
 943 0036 1846     		mov	r0, r3
 944              	.LVL76:
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 945              		.loc 1 1585 0
 946 0038 5DF8044B 		ldr	r4, [sp], #4
 947              	.LCFI5:
 948              		.cfi_remember_state
 949              		.cfi_restore 4
 950              		.cfi_def_cfa_offset 0
 951 003c 7047     		bx	lr
 952              	.LVL77:
 953              	.L88:
 954              	.LCFI6:
 955              		.cfi_restore_state
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 956              		.loc 1 1569 0
 957 003e 9968     		ldr	r1, [r3, #8]
 958              	.LVL78:
 959 0040 21F08001 		bic	r1, r1, #128
 960 0044 9960     		str	r1, [r3, #8]
 961 0046 ECE7     		b	.L81
 962              	.L89:
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 963              		.loc 1 1575 0
 964 0048 1A68     		ldr	r2, [r3]
 965              	.LVL79:
 966 004a 22F48072 		bic	r2, r2, #256
 967 004e 1A60     		str	r2, [r3]
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 89


 968              		.loc 1 1576 0
 969 0050 0268     		ldr	r2, [r0]
 970 0052 9368     		ldr	r3, [r2, #8]
 971 0054 23F00103 		bic	r3, r3, #1
 972 0058 9360     		str	r3, [r2, #8]
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 973              		.loc 1 1579 0
 974 005a 0268     		ldr	r2, [r0]
 975 005c 9368     		ldr	r3, [r2, #8]
 976 005e 23F04003 		bic	r3, r3, #64
 977 0062 9360     		str	r3, [r2, #8]
 978 0064 E4E7     		b	.L82
 979              	.LVL80:
 980              	.L83:
 981              	.LCFI7:
 982              		.cfi_def_cfa_offset 0
 983              		.cfi_restore 4
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 984              		.loc 1 1563 0
 985 0066 0220     		movs	r0, #2
 986              	.LVL81:
 987 0068 7047     		bx	lr
 988              		.cfi_endproc
 989              	.LFE143:
 991              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 992              		.align	1
 993              		.global	HAL_UART_DMAResume
 994              		.syntax unified
 995              		.thumb
 996              		.thumb_func
 997              		.fpu fpv4-sp-d16
 999              	HAL_UART_DMAResume:
 1000              	.LFB144:
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1001              		.loc 1 1593 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005              		@ link register save eliminated.
 1006              	.LVL82:
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1007              		.loc 1 1594 0
 1008 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 1009 0004 012B     		cmp	r3, #1
 1010 0006 26D0     		beq	.L94
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1011              		.loc 1 1594 0 is_stmt 0 discriminator 2
 1012 0008 0123     		movs	r3, #1
 1013 000a 80F87030 		strb	r3, [r0, #112]
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1014              		.loc 1 1596 0 is_stmt 1 discriminator 2
 1015 000e 436F     		ldr	r3, [r0, #116]
 1016 0010 212B     		cmp	r3, #33
 1017 0012 07D0     		beq	.L95
 1018              	.L92:
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1019              		.loc 1 1601 0
ARM GAS  /tmp/cc3QCLpR.s 			page 90


 1020 0014 836F     		ldr	r3, [r0, #120]
 1021 0016 222B     		cmp	r3, #34
 1022 0018 0AD0     		beq	.L96
 1023              	.L93:
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1024              		.loc 1 1614 0
 1025 001a 0023     		movs	r3, #0
 1026 001c 80F87030 		strb	r3, [r0, #112]
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1027              		.loc 1 1616 0
 1028 0020 1846     		mov	r0, r3
 1029              	.LVL83:
 1030 0022 7047     		bx	lr
 1031              	.LVL84:
 1032              	.L95:
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1033              		.loc 1 1599 0
 1034 0024 0268     		ldr	r2, [r0]
 1035 0026 9368     		ldr	r3, [r2, #8]
 1036 0028 43F08003 		orr	r3, r3, #128
 1037 002c 9360     		str	r3, [r2, #8]
 1038 002e F1E7     		b	.L92
 1039              	.L96:
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1040              		.loc 1 1604 0
 1041 0030 0368     		ldr	r3, [r0]
 1042 0032 0822     		movs	r2, #8
 1043 0034 1A62     		str	r2, [r3, #32]
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1044              		.loc 1 1607 0
 1045 0036 0268     		ldr	r2, [r0]
 1046 0038 1368     		ldr	r3, [r2]
 1047 003a 43F48073 		orr	r3, r3, #256
 1048 003e 1360     		str	r3, [r2]
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1049              		.loc 1 1608 0
 1050 0040 0268     		ldr	r2, [r0]
 1051 0042 9368     		ldr	r3, [r2, #8]
 1052 0044 43F00103 		orr	r3, r3, #1
 1053 0048 9360     		str	r3, [r2, #8]
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1054              		.loc 1 1611 0
 1055 004a 0268     		ldr	r2, [r0]
 1056 004c 9368     		ldr	r3, [r2, #8]
 1057 004e 43F04003 		orr	r3, r3, #64
 1058 0052 9360     		str	r3, [r2, #8]
 1059 0054 E1E7     		b	.L93
 1060              	.L94:
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1061              		.loc 1 1594 0
 1062 0056 0220     		movs	r0, #2
 1063              	.LVL85:
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1064              		.loc 1 1617 0
 1065 0058 7047     		bx	lr
 1066              		.cfi_endproc
 1067              	.LFE144:
ARM GAS  /tmp/cc3QCLpR.s 			page 91


 1069              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1070              		.align	1
 1071              		.global	HAL_UART_DMAStop
 1072              		.syntax unified
 1073              		.thumb
 1074              		.thumb_func
 1075              		.fpu fpv4-sp-d16
 1077              	HAL_UART_DMAStop:
 1078              	.LFB145:
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1079              		.loc 1 1625 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083              	.LVL86:
 1084 0000 38B5     		push	{r3, r4, r5, lr}
 1085              	.LCFI8:
 1086              		.cfi_def_cfa_offset 16
 1087              		.cfi_offset 3, -16
 1088              		.cfi_offset 4, -12
 1089              		.cfi_offset 5, -8
 1090              		.cfi_offset 14, -4
 1091 0002 0446     		mov	r4, r0
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1092              		.loc 1 1633 0
 1093 0004 416F     		ldr	r1, [r0, #116]
 1094              	.LVL87:
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1095              		.loc 1 1634 0
 1096 0006 856F     		ldr	r5, [r0, #120]
 1097              	.LVL88:
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1098              		.loc 1 1637 0
 1099 0008 0368     		ldr	r3, [r0]
 1100 000a 9A68     		ldr	r2, [r3, #8]
 1101 000c 12F0800F 		tst	r2, #128
 1102 0010 01D0     		beq	.L98
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1103              		.loc 1 1637 0 is_stmt 0 discriminator 1
 1104 0012 2129     		cmp	r1, #33
 1105 0014 08D0     		beq	.L105
 1106              	.LVL89:
 1107              	.L98:
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1108              		.loc 1 1661 0 is_stmt 1
 1109 0016 2368     		ldr	r3, [r4]
 1110 0018 9A68     		ldr	r2, [r3, #8]
 1111 001a 12F0400F 		tst	r2, #64
 1112 001e 30D0     		beq	.L102
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1113              		.loc 1 1661 0 is_stmt 0 discriminator 1
 1114 0020 222D     		cmp	r5, #34
 1115 0022 17D0     		beq	.L106
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1116              		.loc 1 1684 0 is_stmt 1
 1117 0024 0020     		movs	r0, #0
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 92


 1118              		.loc 1 1685 0
 1119 0026 38BD     		pop	{r3, r4, r5, pc}
 1120              	.LVL90:
 1121              	.L105:
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1122              		.loc 1 1640 0
 1123 0028 9A68     		ldr	r2, [r3, #8]
 1124 002a 22F08002 		bic	r2, r2, #128
 1125 002e 9A60     		str	r2, [r3, #8]
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1126              		.loc 1 1643 0
 1127 0030 806E     		ldr	r0, [r0, #104]
 1128              	.LVL91:
 1129 0032 10B1     		cbz	r0, .L99
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 1130              		.loc 1 1645 0
 1131 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1132              	.LVL92:
 1133 0038 18B9     		cbnz	r0, .L107
 1134              	.L99:
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1135              		.loc 1 1657 0
 1136 003a 2046     		mov	r0, r4
 1137 003c FFF7FEFF 		bl	UART_EndTxTransfer
 1138              	.LVL93:
 1139 0040 E9E7     		b	.L98
 1140              	.L107:
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 1141              		.loc 1 1647 0
 1142 0042 A06E     		ldr	r0, [r4, #104]
 1143 0044 FFF7FEFF 		bl	HAL_DMA_GetError
 1144              	.LVL94:
 1145 0048 2028     		cmp	r0, #32
 1146 004a F6D1     		bne	.L99
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1147              		.loc 1 1650 0
 1148 004c 1023     		movs	r3, #16
 1149 004e E367     		str	r3, [r4, #124]
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 1150              		.loc 1 1652 0
 1151 0050 0320     		movs	r0, #3
 1152 0052 38BD     		pop	{r3, r4, r5, pc}
 1153              	.LVL95:
 1154              	.L106:
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1155              		.loc 1 1664 0
 1156 0054 9A68     		ldr	r2, [r3, #8]
 1157 0056 22F04002 		bic	r2, r2, #64
 1158 005a 9A60     		str	r2, [r3, #8]
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1159              		.loc 1 1667 0
 1160 005c E06E     		ldr	r0, [r4, #108]
 1161 005e 10B1     		cbz	r0, .L101
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 1162              		.loc 1 1669 0
 1163 0060 FFF7FEFF 		bl	HAL_DMA_Abort
 1164              	.LVL96:
ARM GAS  /tmp/cc3QCLpR.s 			page 93


 1165 0064 20B9     		cbnz	r0, .L108
 1166              	.L101:
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1167              		.loc 1 1681 0
 1168 0066 2046     		mov	r0, r4
 1169 0068 FFF7FEFF 		bl	UART_EndRxTransfer
 1170              	.LVL97:
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1171              		.loc 1 1684 0
 1172 006c 0020     		movs	r0, #0
 1173 006e 38BD     		pop	{r3, r4, r5, pc}
 1174              	.LVL98:
 1175              	.L108:
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 1176              		.loc 1 1671 0
 1177 0070 E06E     		ldr	r0, [r4, #108]
 1178 0072 FFF7FEFF 		bl	HAL_DMA_GetError
 1179              	.LVL99:
 1180 0076 2028     		cmp	r0, #32
 1181 0078 F5D1     		bne	.L101
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1182              		.loc 1 1674 0
 1183 007a 1023     		movs	r3, #16
 1184 007c E367     		str	r3, [r4, #124]
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 1185              		.loc 1 1676 0
 1186 007e 0320     		movs	r0, #3
 1187 0080 38BD     		pop	{r3, r4, r5, pc}
 1188              	.LVL100:
 1189              	.L102:
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1190              		.loc 1 1684 0
 1191 0082 0020     		movs	r0, #0
 1192 0084 38BD     		pop	{r3, r4, r5, pc}
 1193              		.cfi_endproc
 1194              	.LFE145:
 1196              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1197              		.align	1
 1198              		.global	HAL_UART_Abort
 1199              		.syntax unified
 1200              		.thumb
 1201              		.thumb_func
 1202              		.fpu fpv4-sp-d16
 1204              	HAL_UART_Abort:
 1205              	.LFB146:
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1206              		.loc 1 1700 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 0
 1209              		@ frame_needed = 0, uses_anonymous_args = 0
 1210              	.LVL101:
 1211 0000 10B5     		push	{r4, lr}
 1212              	.LCFI9:
 1213              		.cfi_def_cfa_offset 8
 1214              		.cfi_offset 4, -8
 1215              		.cfi_offset 14, -4
 1216 0002 0446     		mov	r4, r0
ARM GAS  /tmp/cc3QCLpR.s 			page 94


1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1217              		.loc 1 1707 0
 1218 0004 0268     		ldr	r2, [r0]
 1219 0006 1368     		ldr	r3, [r2]
 1220 0008 23F4F073 		bic	r3, r3, #480
 1221 000c 1360     		str	r3, [r2]
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 1222              		.loc 1 1708 0
 1223 000e 0268     		ldr	r2, [r0]
 1224 0010 9368     		ldr	r3, [r2, #8]
 1225 0012 23F00103 		bic	r3, r3, #1
 1226 0016 9360     		str	r3, [r2, #8]
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1227              		.loc 1 1712 0
 1228 0018 0368     		ldr	r3, [r0]
 1229 001a 9A68     		ldr	r2, [r3, #8]
 1230 001c 12F0800F 		tst	r2, #128
 1231 0020 0BD0     		beq	.L110
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1232              		.loc 1 1714 0
 1233 0022 9A68     		ldr	r2, [r3, #8]
 1234 0024 22F08002 		bic	r2, r2, #128
 1235 0028 9A60     		str	r2, [r3, #8]
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1236              		.loc 1 1717 0
 1237 002a 836E     		ldr	r3, [r0, #104]
 1238 002c 2BB1     		cbz	r3, .L110
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1239              		.loc 1 1721 0
 1240 002e 0022     		movs	r2, #0
 1241 0030 9A63     		str	r2, [r3, #56]
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 1242              		.loc 1 1723 0
 1243 0032 806E     		ldr	r0, [r0, #104]
 1244              	.LVL102:
 1245 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1246              	.LVL103:
 1247 0038 18BB     		cbnz	r0, .L114
 1248              	.L110:
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1249              		.loc 1 1737 0
 1250 003a 2368     		ldr	r3, [r4]
 1251 003c 9A68     		ldr	r2, [r3, #8]
 1252 003e 12F0400F 		tst	r2, #64
 1253 0042 0BD0     		beq	.L112
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1254              		.loc 1 1739 0
 1255 0044 9A68     		ldr	r2, [r3, #8]
 1256 0046 22F04002 		bic	r2, r2, #64
 1257 004a 9A60     		str	r2, [r3, #8]
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1258              		.loc 1 1742 0
 1259 004c E36E     		ldr	r3, [r4, #108]
 1260 004e 2BB1     		cbz	r3, .L112
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1261              		.loc 1 1746 0
 1262 0050 0022     		movs	r2, #0
ARM GAS  /tmp/cc3QCLpR.s 			page 95


 1263 0052 9A63     		str	r2, [r3, #56]
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 1264              		.loc 1 1748 0
 1265 0054 E06E     		ldr	r0, [r4, #108]
 1266 0056 FFF7FEFF 		bl	HAL_DMA_Abort
 1267              	.LVL104:
 1268 005a D8B9     		cbnz	r0, .L115
 1269              	.L112:
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1270              		.loc 1 1762 0
 1271 005c 0020     		movs	r0, #0
 1272 005e A4F85200 		strh	r0, [r4, #82]	@ movhi
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1273              		.loc 1 1763 0
 1274 0062 A4F85A00 		strh	r0, [r4, #90]	@ movhi
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1275              		.loc 1 1766 0
 1276 0066 2368     		ldr	r3, [r4]
 1277 0068 0F22     		movs	r2, #15
 1278 006a 1A62     		str	r2, [r3, #32]
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1279              		.loc 1 1777 0
 1280 006c 2268     		ldr	r2, [r4]
 1281 006e 138B     		ldrh	r3, [r2, #24]
 1282 0070 9BB2     		uxth	r3, r3
 1283 0072 43F00803 		orr	r3, r3, #8
 1284 0076 1383     		strh	r3, [r2, #24]	@ movhi
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1285              		.loc 1 1780 0
 1286 0078 2023     		movs	r3, #32
 1287 007a 6367     		str	r3, [r4, #116]
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1288              		.loc 1 1781 0
 1289 007c A367     		str	r3, [r4, #120]
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1290              		.loc 1 1783 0
 1291 007e E067     		str	r0, [r4, #124]
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1292              		.loc 1 1786 0
 1293 0080 10BD     		pop	{r4, pc}
 1294              	.LVL105:
 1295              	.L114:
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 1296              		.loc 1 1725 0
 1297 0082 A06E     		ldr	r0, [r4, #104]
 1298 0084 FFF7FEFF 		bl	HAL_DMA_GetError
 1299              	.LVL106:
 1300 0088 2028     		cmp	r0, #32
 1301 008a D6D1     		bne	.L110
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1302              		.loc 1 1728 0
 1303 008c 1023     		movs	r3, #16
 1304 008e E367     		str	r3, [r4, #124]
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 1305              		.loc 1 1730 0
 1306 0090 0320     		movs	r0, #3
 1307 0092 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cc3QCLpR.s 			page 96


 1308              	.LVL107:
 1309              	.L115:
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 1310              		.loc 1 1750 0
 1311 0094 E06E     		ldr	r0, [r4, #108]
 1312 0096 FFF7FEFF 		bl	HAL_DMA_GetError
 1313              	.LVL108:
 1314 009a 2028     		cmp	r0, #32
 1315 009c DED1     		bne	.L112
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1316              		.loc 1 1753 0
 1317 009e 1023     		movs	r3, #16
 1318 00a0 E367     		str	r3, [r4, #124]
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 1319              		.loc 1 1755 0
 1320 00a2 0320     		movs	r0, #3
 1321 00a4 10BD     		pop	{r4, pc}
 1322              		.cfi_endproc
 1323              	.LFE146:
 1325              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1326              		.align	1
 1327              		.global	HAL_UART_AbortTransmit
 1328              		.syntax unified
 1329              		.thumb
 1330              		.thumb_func
 1331              		.fpu fpv4-sp-d16
 1333              	HAL_UART_AbortTransmit:
 1334              	.LFB147:
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1335              		.loc 1 1801 0
 1336              		.cfi_startproc
 1337              		@ args = 0, pretend = 0, frame = 0
 1338              		@ frame_needed = 0, uses_anonymous_args = 0
 1339              	.LVL109:
 1340 0000 10B5     		push	{r4, lr}
 1341              	.LCFI10:
 1342              		.cfi_def_cfa_offset 8
 1343              		.cfi_offset 4, -8
 1344              		.cfi_offset 14, -4
 1345 0002 0446     		mov	r4, r0
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 1346              		.loc 1 1808 0
 1347 0004 0268     		ldr	r2, [r0]
 1348 0006 1368     		ldr	r3, [r2]
 1349 0008 23F0C003 		bic	r3, r3, #192
 1350 000c 1360     		str	r3, [r2]
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1351              		.loc 1 1812 0
 1352 000e 0368     		ldr	r3, [r0]
 1353 0010 9A68     		ldr	r2, [r3, #8]
 1354 0012 12F0800F 		tst	r2, #128
 1355 0016 0BD0     		beq	.L117
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1356              		.loc 1 1814 0
 1357 0018 9A68     		ldr	r2, [r3, #8]
 1358 001a 22F08002 		bic	r2, r2, #128
 1359 001e 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/cc3QCLpR.s 			page 97


1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1360              		.loc 1 1817 0
 1361 0020 836E     		ldr	r3, [r0, #104]
 1362 0022 2BB1     		cbz	r3, .L117
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1363              		.loc 1 1821 0
 1364 0024 0022     		movs	r2, #0
 1365 0026 9A63     		str	r2, [r3, #56]
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 1366              		.loc 1 1823 0
 1367 0028 806E     		ldr	r0, [r0, #104]
 1368              	.LVL110:
 1369 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1370              	.LVL111:
 1371 002e 28B9     		cbnz	r0, .L120
 1372              	.L117:
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1373              		.loc 1 1837 0
 1374 0030 0020     		movs	r0, #0
 1375 0032 A4F85200 		strh	r0, [r4, #82]	@ movhi
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1376              		.loc 1 1848 0
 1377 0036 2023     		movs	r3, #32
 1378 0038 6367     		str	r3, [r4, #116]
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1379              		.loc 1 1851 0
 1380 003a 10BD     		pop	{r4, pc}
 1381              	.LVL112:
 1382              	.L120:
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 1383              		.loc 1 1825 0
 1384 003c A06E     		ldr	r0, [r4, #104]
 1385 003e FFF7FEFF 		bl	HAL_DMA_GetError
 1386              	.LVL113:
 1387 0042 2028     		cmp	r0, #32
 1388 0044 F4D1     		bne	.L117
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1389              		.loc 1 1828 0
 1390 0046 1023     		movs	r3, #16
 1391 0048 E367     		str	r3, [r4, #124]
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 1392              		.loc 1 1830 0
 1393 004a 0320     		movs	r0, #3
 1394 004c 10BD     		pop	{r4, pc}
 1395              		.cfi_endproc
 1396              	.LFE147:
 1398              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1399              		.align	1
 1400              		.global	HAL_UART_AbortReceive
 1401              		.syntax unified
 1402              		.thumb
 1403              		.thumb_func
 1404              		.fpu fpv4-sp-d16
 1406              	HAL_UART_AbortReceive:
 1407              	.LFB148:
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1408              		.loc 1 1866 0
ARM GAS  /tmp/cc3QCLpR.s 			page 98


 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 0
 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 1412              	.LVL114:
 1413 0000 10B5     		push	{r4, lr}
 1414              	.LCFI11:
 1415              		.cfi_def_cfa_offset 8
 1416              		.cfi_offset 4, -8
 1417              		.cfi_offset 14, -4
 1418 0002 0446     		mov	r4, r0
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1419              		.loc 1 1873 0
 1420 0004 0268     		ldr	r2, [r0]
 1421 0006 1368     		ldr	r3, [r2]
 1422 0008 23F49073 		bic	r3, r3, #288
 1423 000c 1360     		str	r3, [r2]
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 1424              		.loc 1 1874 0
 1425 000e 0268     		ldr	r2, [r0]
 1426 0010 9368     		ldr	r3, [r2, #8]
 1427 0012 23F00103 		bic	r3, r3, #1
 1428 0016 9360     		str	r3, [r2, #8]
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1429              		.loc 1 1878 0
 1430 0018 0368     		ldr	r3, [r0]
 1431 001a 9A68     		ldr	r2, [r3, #8]
 1432 001c 12F0400F 		tst	r2, #64
 1433 0020 0BD0     		beq	.L122
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1434              		.loc 1 1880 0
 1435 0022 9A68     		ldr	r2, [r3, #8]
 1436 0024 22F04002 		bic	r2, r2, #64
 1437 0028 9A60     		str	r2, [r3, #8]
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1438              		.loc 1 1883 0
 1439 002a C36E     		ldr	r3, [r0, #108]
 1440 002c 2BB1     		cbz	r3, .L122
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1441              		.loc 1 1887 0
 1442 002e 0022     		movs	r2, #0
 1443 0030 9A63     		str	r2, [r3, #56]
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 1444              		.loc 1 1889 0
 1445 0032 C06E     		ldr	r0, [r0, #108]
 1446              	.LVL115:
 1447 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1448              	.LVL116:
 1449 0038 70B9     		cbnz	r0, .L125
 1450              	.L122:
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1451              		.loc 1 1903 0
 1452 003a 0020     		movs	r0, #0
 1453 003c A4F85A00 		strh	r0, [r4, #90]	@ movhi
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1454              		.loc 1 1906 0
 1455 0040 2368     		ldr	r3, [r4]
 1456 0042 0F22     		movs	r2, #15
ARM GAS  /tmp/cc3QCLpR.s 			page 99


 1457 0044 1A62     		str	r2, [r3, #32]
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1458              		.loc 1 1909 0
 1459 0046 2268     		ldr	r2, [r4]
 1460 0048 138B     		ldrh	r3, [r2, #24]
 1461 004a 9BB2     		uxth	r3, r3
 1462 004c 43F00803 		orr	r3, r3, #8
 1463 0050 1383     		strh	r3, [r2, #24]	@ movhi
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1464              		.loc 1 1912 0
 1465 0052 2023     		movs	r3, #32
 1466 0054 A367     		str	r3, [r4, #120]
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1467              		.loc 1 1915 0
 1468 0056 10BD     		pop	{r4, pc}
 1469              	.LVL117:
 1470              	.L125:
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 1471              		.loc 1 1891 0
 1472 0058 E06E     		ldr	r0, [r4, #108]
 1473 005a FFF7FEFF 		bl	HAL_DMA_GetError
 1474              	.LVL118:
 1475 005e 2028     		cmp	r0, #32
 1476 0060 EBD1     		bne	.L122
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1477              		.loc 1 1894 0
 1478 0062 1023     		movs	r3, #16
 1479 0064 E367     		str	r3, [r4, #124]
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 1480              		.loc 1 1896 0
 1481 0066 0320     		movs	r0, #3
 1482 0068 10BD     		pop	{r4, pc}
 1483              		.cfi_endproc
 1484              	.LFE148:
 1486              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1487              		.align	1
 1488              		.weak	HAL_UART_TxCpltCallback
 1489              		.syntax unified
 1490              		.thumb
 1491              		.thumb_func
 1492              		.fpu fpv4-sp-d16
 1494              	HAL_UART_TxCpltCallback:
 1495              	.LFB153:
2529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1496              		.loc 1 2529 0
 1497              		.cfi_startproc
 1498              		@ args = 0, pretend = 0, frame = 0
 1499              		@ frame_needed = 0, uses_anonymous_args = 0
 1500              		@ link register save eliminated.
 1501              	.LVL119:
 1502 0000 7047     		bx	lr
 1503              		.cfi_endproc
 1504              	.LFE153:
 1506              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1507              		.align	1
 1508              		.syntax unified
 1509              		.thumb
ARM GAS  /tmp/cc3QCLpR.s 			page 100


 1510              		.thumb_func
 1511              		.fpu fpv4-sp-d16
 1513              	UART_DMATransmitCplt:
 1514              	.LFB178:
3517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1515              		.loc 1 3517 0
 1516              		.cfi_startproc
 1517              		@ args = 0, pretend = 0, frame = 0
 1518              		@ frame_needed = 0, uses_anonymous_args = 0
 1519              	.LVL120:
3517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1520              		.loc 1 3517 0
 1521 0000 08B5     		push	{r3, lr}
 1522              	.LCFI12:
 1523              		.cfi_def_cfa_offset 8
 1524              		.cfi_offset 3, -8
 1525              		.cfi_offset 14, -4
3518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1526              		.loc 1 3518 0
 1527 0002 836A     		ldr	r3, [r0, #40]
 1528              	.LVL121:
3521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1529              		.loc 1 3521 0
 1530 0004 0268     		ldr	r2, [r0]
 1531 0006 1268     		ldr	r2, [r2]
 1532 0008 12F0200F 		tst	r2, #32
 1533 000c 0DD1     		bne	.L128
3523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1534              		.loc 1 3523 0
 1535 000e 0022     		movs	r2, #0
 1536 0010 A3F85220 		strh	r2, [r3, #82]	@ movhi
3527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1537              		.loc 1 3527 0
 1538 0014 1968     		ldr	r1, [r3]
 1539 0016 8A68     		ldr	r2, [r1, #8]
 1540 0018 22F08002 		bic	r2, r2, #128
 1541 001c 8A60     		str	r2, [r1, #8]
3530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1542              		.loc 1 3530 0
 1543 001e 1A68     		ldr	r2, [r3]
 1544 0020 1368     		ldr	r3, [r2]
 1545              	.LVL122:
 1546 0022 43F04003 		orr	r3, r3, #64
 1547 0026 1360     		str	r3, [r2]
 1548 0028 08BD     		pop	{r3, pc}
 1549              	.LVL123:
 1550              	.L128:
3540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1551              		.loc 1 3540 0
 1552 002a 1846     		mov	r0, r3
 1553              	.LVL124:
 1554 002c FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1555              	.LVL125:
 1556 0030 08BD     		pop	{r3, pc}
 1557              		.cfi_endproc
 1558              	.LFE178:
 1560              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
ARM GAS  /tmp/cc3QCLpR.s 			page 101


 1561              		.align	1
 1562              		.syntax unified
 1563              		.thumb
 1564              		.thumb_func
 1565              		.fpu fpv4-sp-d16
 1567              	UART_EndTransmit_IT:
 1568              	.LFB190:
3919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
3923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  nb_tx_data;
3931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
3934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
3936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
3946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
3948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr++;
3951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
3952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Nothing to do */
3956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length and FIFO mode is enabled.
3963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
ARM GAS  /tmp/cc3QCLpR.s 			page 102


3969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
3971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  nb_tx_data;
3972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
3975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
3977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
3987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
3989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t *) huart->pTxBuffPtr;
3991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
3993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
3994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Nothing to do */
3998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
4002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
4006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
4007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
4008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
4011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1569              		.loc 1 4011 0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 0
 1572              		@ frame_needed = 0, uses_anonymous_args = 0
 1573              	.LVL126:
 1574 0000 08B5     		push	{r3, lr}
 1575              	.LCFI13:
 1576              		.cfi_def_cfa_offset 8
 1577              		.cfi_offset 3, -8
 1578              		.cfi_offset 14, -4
4012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
4013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1579              		.loc 1 4013 0
 1580 0002 0168     		ldr	r1, [r0]
ARM GAS  /tmp/cc3QCLpR.s 			page 103


 1581 0004 0A68     		ldr	r2, [r1]
 1582 0006 22F04002 		bic	r2, r2, #64
 1583 000a 0A60     		str	r2, [r1]
4014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
4016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1584              		.loc 1 4016 0
 1585 000c 2022     		movs	r2, #32
 1586 000e 4267     		str	r2, [r0, #116]
4017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Cleat TxISR function pointer */
4019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 1587              		.loc 1 4019 0
 1588 0010 0022     		movs	r2, #0
 1589 0012 4266     		str	r2, [r0, #100]
4020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
4023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
4024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
4026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 1590              		.loc 1 4026 0
 1591 0014 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1592              	.LVL127:
 1593 0018 08BD     		pop	{r3, pc}
 1594              		.cfi_endproc
 1595              	.LFE190:
 1597              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1598              		.align	1
 1599              		.weak	HAL_UART_TxHalfCpltCallback
 1600              		.syntax unified
 1601              		.thumb
 1602              		.thumb_func
 1603              		.fpu fpv4-sp-d16
 1605              	HAL_UART_TxHalfCpltCallback:
 1606              	.LFB154:
2544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1607              		.loc 1 2544 0
 1608              		.cfi_startproc
 1609              		@ args = 0, pretend = 0, frame = 0
 1610              		@ frame_needed = 0, uses_anonymous_args = 0
 1611              		@ link register save eliminated.
 1612              	.LVL128:
 1613 0000 7047     		bx	lr
 1614              		.cfi_endproc
 1615              	.LFE154:
 1617              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1618              		.align	1
 1619              		.syntax unified
 1620              		.thumb
 1621              		.thumb_func
 1622              		.fpu fpv4-sp-d16
 1624              	UART_DMATxHalfCplt:
 1625              	.LFB179:
3551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1626              		.loc 1 3551 0
ARM GAS  /tmp/cc3QCLpR.s 			page 104


 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 0
 1629              		@ frame_needed = 0, uses_anonymous_args = 0
 1630              	.LVL129:
3551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1631              		.loc 1 3551 0
 1632 0000 08B5     		push	{r3, lr}
 1633              	.LCFI14:
 1634              		.cfi_def_cfa_offset 8
 1635              		.cfi_offset 3, -8
 1636              		.cfi_offset 14, -4
 1637              	.LVL130:
3559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1638              		.loc 1 3559 0
 1639 0002 806A     		ldr	r0, [r0, #40]
 1640              	.LVL131:
 1641 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1642              	.LVL132:
 1643 0008 08BD     		pop	{r3, pc}
 1644              		.cfi_endproc
 1645              	.LFE179:
 1647              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1648              		.align	1
 1649              		.weak	HAL_UART_RxCpltCallback
 1650              		.syntax unified
 1651              		.thumb
 1652              		.thumb_func
 1653              		.fpu fpv4-sp-d16
 1655              	HAL_UART_RxCpltCallback:
 1656              	.LFB155:
2559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1657              		.loc 1 2559 0
 1658              		.cfi_startproc
 1659              		@ args = 0, pretend = 0, frame = 0
 1660              		@ frame_needed = 0, uses_anonymous_args = 0
 1661              		@ link register save eliminated.
 1662              	.LVL133:
 1663 0000 7047     		bx	lr
 1664              		.cfi_endproc
 1665              	.LFE155:
 1667              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 1668              		.align	1
 1669              		.syntax unified
 1670              		.thumb
 1671              		.thumb_func
 1672              		.fpu fpv4-sp-d16
 1674              	UART_RxISR_8BIT:
 1675              	.LFB191:
4027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
4029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
4032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
ARM GAS  /tmp/cc3QCLpR.s 			page 105


4036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1676              		.loc 1 4036 0
 1677              		.cfi_startproc
 1678              		@ args = 0, pretend = 0, frame = 0
 1679              		@ frame_needed = 0, uses_anonymous_args = 0
 1680              	.LVL134:
 1681              		.loc 1 4036 0
 1682 0000 08B5     		push	{r3, lr}
 1683              	.LCFI15:
 1684              		.cfi_def_cfa_offset 8
 1685              		.cfi_offset 3, -8
 1686              		.cfi_offset 14, -4
4037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1687              		.loc 1 4037 0
 1688 0002 B0F85C30 		ldrh	r3, [r0, #92]
 1689              	.LVL135:
4038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
4039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1690              		.loc 1 4041 0
 1691 0006 826F     		ldr	r2, [r0, #120]
 1692 0008 222A     		cmp	r2, #34
 1693 000a 06D0     		beq	.L141
4042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
4044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
4045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr++;
4046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
4047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
4049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
4051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
4053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
4055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
4059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
4062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
4064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
4065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
4068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
4069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
4071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
4072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/cc3QCLpR.s 			page 106


4075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
4076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1694              		.loc 1 4078 0
 1695 000c 0268     		ldr	r2, [r0]
 1696 000e 138B     		ldrh	r3, [r2, #24]
 1697              	.LVL136:
 1698 0010 9BB2     		uxth	r3, r3
 1699 0012 43F00803 		orr	r3, r3, #8
 1700 0016 1383     		strh	r3, [r2, #24]	@ movhi
 1701              	.LVL137:
 1702              	.L137:
 1703 0018 08BD     		pop	{r3, pc}
 1704              	.LVL138:
 1705              	.L141:
4043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 1706              		.loc 1 4043 0
 1707 001a 0268     		ldr	r2, [r0]
 1708 001c 918C     		ldrh	r1, [r2, #36]
 1709              	.LVL139:
4044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr++;
 1710              		.loc 1 4044 0
 1711 001e 426D     		ldr	r2, [r0, #84]
 1712 0020 DBB2     		uxtb	r3, r3
 1713              	.LVL140:
 1714 0022 0B40     		ands	r3, r3, r1
 1715 0024 1370     		strb	r3, [r2]
 1716              	.LVL141:
4045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
 1717              		.loc 1 4045 0
 1718 0026 436D     		ldr	r3, [r0, #84]
 1719 0028 0133     		adds	r3, r3, #1
 1720 002a 4365     		str	r3, [r0, #84]
4046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1721              		.loc 1 4046 0
 1722 002c B0F85A30 		ldrh	r3, [r0, #90]
 1723 0030 9BB2     		uxth	r3, r3
 1724 0032 013B     		subs	r3, r3, #1
 1725 0034 9BB2     		uxth	r3, r3
 1726 0036 A0F85A30 		strh	r3, [r0, #90]	@ movhi
4048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1727              		.loc 1 4048 0
 1728 003a B0F85A30 		ldrh	r3, [r0, #90]
 1729 003e 9BB2     		uxth	r3, r3
 1730 0040 002B     		cmp	r3, #0
 1731 0042 E9D1     		bne	.L137
4054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 1732              		.loc 1 4054 0
 1733 0044 0268     		ldr	r2, [r0]
 1734 0046 1368     		ldr	r3, [r2]
 1735 0048 23F49073 		bic	r3, r3, #288
 1736 004c 1360     		str	r3, [r2]
4058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1737              		.loc 1 4058 0
 1738 004e 0268     		ldr	r2, [r0]
 1739 0050 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/cc3QCLpR.s 			page 107


 1740 0052 23F00103 		bic	r3, r3, #1
 1741 0056 9360     		str	r3, [r2, #8]
4061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1742              		.loc 1 4061 0
 1743 0058 2023     		movs	r3, #32
 1744 005a 8367     		str	r3, [r0, #120]
4064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1745              		.loc 1 4064 0
 1746 005c 0023     		movs	r3, #0
 1747 005e 0366     		str	r3, [r0, #96]
4071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1748              		.loc 1 4071 0
 1749 0060 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1750              	.LVL142:
 1751 0064 08BD     		pop	{r3, pc}
 1752              		.cfi_endproc
 1753              	.LFE191:
 1755              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 1756              		.align	1
 1757              		.syntax unified
 1758              		.thumb
 1759              		.thumb_func
 1760              		.fpu fpv4-sp-d16
 1762              	UART_RxISR_16BIT:
 1763              	.LFB192:
4079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
4081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
4084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
4090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1764              		.loc 1 4090 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768              	.LVL143:
 1769 0000 08B5     		push	{r3, lr}
 1770              	.LCFI16:
 1771              		.cfi_def_cfa_offset 8
 1772              		.cfi_offset 3, -8
 1773              		.cfi_offset 14, -4
4091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
4092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1774              		.loc 1 4092 0
 1775 0002 B0F85C20 		ldrh	r2, [r0, #92]
 1776              	.LVL144:
4093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
4094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1777              		.loc 1 4096 0
ARM GAS  /tmp/cc3QCLpR.s 			page 108


 1778 0006 836F     		ldr	r3, [r0, #120]
 1779 0008 222B     		cmp	r3, #34
 1780 000a 06D0     		beq	.L146
4097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
4099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
4100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
4101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
4102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
4103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
4105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
4107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
4109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
4111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
4115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
4118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
4120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
4121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
4124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
4125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
4127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
4128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
4132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1781              		.loc 1 4134 0
 1782 000c 0268     		ldr	r2, [r0]
 1783              	.LVL145:
 1784 000e 138B     		ldrh	r3, [r2, #24]
 1785 0010 9BB2     		uxth	r3, r3
 1786 0012 43F00803 		orr	r3, r3, #8
 1787 0016 1383     		strh	r3, [r2, #24]	@ movhi
 1788              	.LVL146:
 1789              	.L142:
 1790 0018 08BD     		pop	{r3, pc}
 1791              	.LVL147:
 1792              	.L146:
4098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 1793              		.loc 1 4098 0
 1794 001a 0368     		ldr	r3, [r0]
 1795 001c 998C     		ldrh	r1, [r3, #36]
ARM GAS  /tmp/cc3QCLpR.s 			page 109


 1796              	.LVL148:
4099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 1797              		.loc 1 4099 0
 1798 001e 436D     		ldr	r3, [r0, #84]
 1799              	.LVL149:
4100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 1800              		.loc 1 4100 0
 1801 0020 0A40     		ands	r2, r2, r1
 1802              	.LVL150:
 1803 0022 1A80     		strh	r2, [r3]	@ movhi
 1804              	.LVL151:
4101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
 1805              		.loc 1 4101 0
 1806 0024 436D     		ldr	r3, [r0, #84]
 1807              	.LVL152:
 1808 0026 0233     		adds	r3, r3, #2
 1809 0028 4365     		str	r3, [r0, #84]
4102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1810              		.loc 1 4102 0
 1811 002a B0F85A30 		ldrh	r3, [r0, #90]
 1812 002e 9BB2     		uxth	r3, r3
 1813 0030 013B     		subs	r3, r3, #1
 1814 0032 9BB2     		uxth	r3, r3
 1815 0034 A0F85A30 		strh	r3, [r0, #90]	@ movhi
4104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1816              		.loc 1 4104 0
 1817 0038 B0F85A30 		ldrh	r3, [r0, #90]
 1818 003c 9BB2     		uxth	r3, r3
 1819 003e 002B     		cmp	r3, #0
 1820 0040 EAD1     		bne	.L142
4110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 1821              		.loc 1 4110 0
 1822 0042 0268     		ldr	r2, [r0]
 1823 0044 1368     		ldr	r3, [r2]
 1824 0046 23F49073 		bic	r3, r3, #288
 1825 004a 1360     		str	r3, [r2]
4114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1826              		.loc 1 4114 0
 1827 004c 0268     		ldr	r2, [r0]
 1828 004e 9368     		ldr	r3, [r2, #8]
 1829 0050 23F00103 		bic	r3, r3, #1
 1830 0054 9360     		str	r3, [r2, #8]
4117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1831              		.loc 1 4117 0
 1832 0056 2023     		movs	r3, #32
 1833 0058 8367     		str	r3, [r0, #120]
4120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1834              		.loc 1 4120 0
 1835 005a 0023     		movs	r3, #0
 1836 005c 0366     		str	r3, [r0, #96]
4127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1837              		.loc 1 4127 0
 1838 005e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1839              	.LVL153:
 1840 0062 08BD     		pop	{r3, pc}
 1841              		.cfi_endproc
 1842              	.LFE192:
ARM GAS  /tmp/cc3QCLpR.s 			page 110


 1844              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1845              		.align	1
 1846              		.syntax unified
 1847              		.thumb
 1848              		.thumb_func
 1849              		.fpu fpv4-sp-d16
 1851              	UART_DMAReceiveCplt:
 1852              	.LFB180:
3569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1853              		.loc 1 3569 0
 1854              		.cfi_startproc
 1855              		@ args = 0, pretend = 0, frame = 0
 1856              		@ frame_needed = 0, uses_anonymous_args = 0
 1857              	.LVL154:
 1858 0000 08B5     		push	{r3, lr}
 1859              	.LCFI17:
 1860              		.cfi_def_cfa_offset 8
 1861              		.cfi_offset 3, -8
 1862              		.cfi_offset 14, -4
3570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1863              		.loc 1 3570 0
 1864 0002 836A     		ldr	r3, [r0, #40]
 1865              	.LVL155:
3573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1866              		.loc 1 3573 0
 1867 0004 0268     		ldr	r2, [r0]
 1868 0006 1268     		ldr	r2, [r2]
 1869 0008 12F0200F 		tst	r2, #32
 1870 000c 13D1     		bne	.L148
3575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1871              		.loc 1 3575 0
 1872 000e 0022     		movs	r2, #0
 1873 0010 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1874              		.loc 1 3578 0
 1875 0014 1968     		ldr	r1, [r3]
 1876 0016 0A68     		ldr	r2, [r1]
 1877 0018 22F48072 		bic	r2, r2, #256
 1878 001c 0A60     		str	r2, [r1]
3579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1879              		.loc 1 3579 0
 1880 001e 1968     		ldr	r1, [r3]
 1881 0020 8A68     		ldr	r2, [r1, #8]
 1882 0022 22F00102 		bic	r2, r2, #1
 1883 0026 8A60     		str	r2, [r1, #8]
3583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1884              		.loc 1 3583 0
 1885 0028 1968     		ldr	r1, [r3]
 1886 002a 8A68     		ldr	r2, [r1, #8]
 1887 002c 22F04002 		bic	r2, r2, #64
 1888 0030 8A60     		str	r2, [r1, #8]
3586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1889              		.loc 1 3586 0
 1890 0032 2022     		movs	r2, #32
 1891 0034 9A67     		str	r2, [r3, #120]
 1892              	.L148:
3594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  /tmp/cc3QCLpR.s 			page 111


 1893              		.loc 1 3594 0
 1894 0036 1846     		mov	r0, r3
 1895              	.LVL156:
 1896 0038 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1897              	.LVL157:
 1898 003c 08BD     		pop	{r3, pc}
 1899              		.cfi_endproc
 1900              	.LFE180:
 1902              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1903              		.align	1
 1904              		.weak	HAL_UART_RxHalfCpltCallback
 1905              		.syntax unified
 1906              		.thumb
 1907              		.thumb_func
 1908              		.fpu fpv4-sp-d16
 1910              	HAL_UART_RxHalfCpltCallback:
 1911              	.LFB156:
2574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1912              		.loc 1 2574 0
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 0
 1915              		@ frame_needed = 0, uses_anonymous_args = 0
 1916              		@ link register save eliminated.
 1917              	.LVL158:
 1918 0000 7047     		bx	lr
 1919              		.cfi_endproc
 1920              	.LFE156:
 1922              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1923              		.align	1
 1924              		.syntax unified
 1925              		.thumb
 1926              		.thumb_func
 1927              		.fpu fpv4-sp-d16
 1929              	UART_DMARxHalfCplt:
 1930              	.LFB181:
3604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1931              		.loc 1 3604 0
 1932              		.cfi_startproc
 1933              		@ args = 0, pretend = 0, frame = 0
 1934              		@ frame_needed = 0, uses_anonymous_args = 0
 1935              	.LVL159:
3604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1936              		.loc 1 3604 0
 1937 0000 08B5     		push	{r3, lr}
 1938              	.LCFI18:
 1939              		.cfi_def_cfa_offset 8
 1940              		.cfi_offset 3, -8
 1941              		.cfi_offset 14, -4
 1942              	.LVL160:
3612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1943              		.loc 1 3612 0
 1944 0002 806A     		ldr	r0, [r0, #40]
 1945              	.LVL161:
 1946 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1947              	.LVL162:
 1948 0008 08BD     		pop	{r3, pc}
 1949              		.cfi_endproc
ARM GAS  /tmp/cc3QCLpR.s 			page 112


 1950              	.LFE181:
 1952              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1953              		.align	1
 1954              		.weak	HAL_UART_ErrorCallback
 1955              		.syntax unified
 1956              		.thumb
 1957              		.thumb_func
 1958              		.fpu fpv4-sp-d16
 1960              	HAL_UART_ErrorCallback:
 1961              	.LFB157:
2589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1962              		.loc 1 2589 0
 1963              		.cfi_startproc
 1964              		@ args = 0, pretend = 0, frame = 0
 1965              		@ frame_needed = 0, uses_anonymous_args = 0
 1966              		@ link register save eliminated.
 1967              	.LVL163:
 1968 0000 7047     		bx	lr
 1969              		.cfi_endproc
 1970              	.LFE157:
 1972              		.section	.text.UART_DMAError,"ax",%progbits
 1973              		.align	1
 1974              		.syntax unified
 1975              		.thumb
 1976              		.thumb_func
 1977              		.fpu fpv4-sp-d16
 1979              	UART_DMAError:
 1980              	.LFB182:
3622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1981              		.loc 1 3622 0
 1982              		.cfi_startproc
 1983              		@ args = 0, pretend = 0, frame = 0
 1984              		@ frame_needed = 0, uses_anonymous_args = 0
 1985              	.LVL164:
3622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1986              		.loc 1 3622 0
 1987 0000 38B5     		push	{r3, r4, r5, lr}
 1988              	.LCFI19:
 1989              		.cfi_def_cfa_offset 16
 1990              		.cfi_offset 3, -16
 1991              		.cfi_offset 4, -12
 1992              		.cfi_offset 5, -8
 1993              		.cfi_offset 14, -4
3623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1994              		.loc 1 3623 0
 1995 0002 846A     		ldr	r4, [r0, #40]
 1996              	.LVL165:
3625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1997              		.loc 1 3625 0
 1998 0004 626F     		ldr	r2, [r4, #116]
 1999              	.LVL166:
3626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2000              		.loc 1 3626 0
 2001 0006 A56F     		ldr	r5, [r4, #120]
 2002              	.LVL167:
3629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2003              		.loc 1 3629 0
ARM GAS  /tmp/cc3QCLpR.s 			page 113


 2004 0008 2368     		ldr	r3, [r4]
 2005 000a 9B68     		ldr	r3, [r3, #8]
 2006 000c 13F0800F 		tst	r3, #128
 2007 0010 01D0     		beq	.L155
3629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2008              		.loc 1 3629 0 is_stmt 0 discriminator 1
 2009 0012 212A     		cmp	r2, #33
 2010 0014 0ED0     		beq	.L158
 2011              	.LVL168:
 2012              	.L155:
3637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2013              		.loc 1 3637 0 is_stmt 1
 2014 0016 2368     		ldr	r3, [r4]
 2015 0018 9B68     		ldr	r3, [r3, #8]
 2016 001a 13F0400F 		tst	r3, #64
 2017 001e 01D0     		beq	.L156
3637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2018              		.loc 1 3637 0 is_stmt 0 discriminator 1
 2019 0020 222D     		cmp	r5, #34
 2020 0022 0ED0     		beq	.L159
 2021              	.L156:
3644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2022              		.loc 1 3644 0 is_stmt 1
 2023 0024 E36F     		ldr	r3, [r4, #124]
 2024 0026 43F01003 		orr	r3, r3, #16
 2025 002a E367     		str	r3, [r4, #124]
3651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2026              		.loc 1 3651 0
 2027 002c 2046     		mov	r0, r4
 2028 002e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2029              	.LVL169:
 2030 0032 38BD     		pop	{r3, r4, r5, pc}
 2031              	.LVL170:
 2032              	.L158:
3632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2033              		.loc 1 3632 0
 2034 0034 0023     		movs	r3, #0
 2035 0036 A4F85230 		strh	r3, [r4, #82]	@ movhi
3633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2036              		.loc 1 3633 0
 2037 003a 2046     		mov	r0, r4
 2038              	.LVL171:
 2039 003c FFF7FEFF 		bl	UART_EndTxTransfer
 2040              	.LVL172:
 2041 0040 E9E7     		b	.L155
 2042              	.L159:
3640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2043              		.loc 1 3640 0
 2044 0042 0023     		movs	r3, #0
 2045 0044 A4F85A30 		strh	r3, [r4, #90]	@ movhi
3641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2046              		.loc 1 3641 0
 2047 0048 2046     		mov	r0, r4
 2048 004a FFF7FEFF 		bl	UART_EndRxTransfer
 2049              	.LVL173:
 2050 004e E9E7     		b	.L156
 2051              		.cfi_endproc
ARM GAS  /tmp/cc3QCLpR.s 			page 114


 2052              	.LFE182:
 2054              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2055              		.align	1
 2056              		.global	HAL_UART_IRQHandler
 2057              		.syntax unified
 2058              		.thumb
 2059              		.thumb_func
 2060              		.fpu fpv4-sp-d16
 2062              	HAL_UART_IRQHandler:
 2063              	.LFB152:
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 2064              		.loc 1 2268 0
 2065              		.cfi_startproc
 2066              		@ args = 0, pretend = 0, frame = 0
 2067              		@ frame_needed = 0, uses_anonymous_args = 0
 2068              	.LVL174:
 2069 0000 38B5     		push	{r3, r4, r5, lr}
 2070              	.LCFI20:
 2071              		.cfi_def_cfa_offset 16
 2072              		.cfi_offset 3, -16
 2073              		.cfi_offset 4, -12
 2074              		.cfi_offset 5, -8
 2075              		.cfi_offset 14, -4
 2076 0002 0446     		mov	r4, r0
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2077              		.loc 1 2269 0
 2078 0004 0168     		ldr	r1, [r0]
 2079 0006 CB69     		ldr	r3, [r1, #28]
 2080              	.LVL175:
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2081              		.loc 1 2270 0
 2082 0008 0868     		ldr	r0, [r1]
 2083              	.LVL176:
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2084              		.loc 1 2271 0
 2085 000a 8D68     		ldr	r5, [r1, #8]
 2086              	.LVL177:
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (errorflags == 0U)
 2087              		.loc 1 2277 0
 2088 000c 40F60F02 		movw	r2, #2063
 2089              	.LVL178:
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2090              		.loc 1 2278 0
 2091 0010 1A40     		ands	r2, r3, r2
 2092              	.LVL179:
 2093 0012 0CD1     		bne	.L161
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
 2094              		.loc 1 2286 0
 2095 0014 13F0200F 		tst	r3, #32
 2096 0018 09D0     		beq	.L161
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2097              		.loc 1 2287 0
 2098 001a 10F0200F 		tst	r0, #32
 2099 001e 06D0     		beq	.L161
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2100              		.loc 1 2290 0
 2101 0020 236E     		ldr	r3, [r4, #96]
ARM GAS  /tmp/cc3QCLpR.s 			page 115


 2102              	.LVL180:
 2103 0022 002B     		cmp	r3, #0
 2104 0024 00F0A180 		beq	.L160
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2105              		.loc 1 2292 0
 2106 0028 2046     		mov	r0, r4
 2107              	.LVL181:
 2108 002a 9847     		blx	r3
 2109              	.LVL182:
 2110 002c 38BD     		pop	{r3, r4, r5, pc}
 2111              	.LVL183:
 2112              	.L161:
2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
 2113              		.loc 1 2304 0
 2114 002e 002A     		cmp	r2, #0
 2115 0030 7DD0     		beq	.L163
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
 2116              		.loc 1 2305 0
 2117 0032 15F00102 		ands	r2, r5, #1
 2118              	.LVL184:
 2119 0036 02D1     		bne	.L164
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2120              		.loc 1 2306 0
 2121 0038 10F4907F 		tst	r0, #288
 2122 003c 77D0     		beq	.L163
 2123              	.L164:
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2124              		.loc 1 2310 0
 2125 003e 13F0010F 		tst	r3, #1
 2126 0042 07D0     		beq	.L165
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2127              		.loc 1 2310 0 is_stmt 0 discriminator 1
 2128 0044 10F4807F 		tst	r0, #256
 2129 0048 04D0     		beq	.L165
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2130              		.loc 1 2312 0 is_stmt 1
 2131 004a 0125     		movs	r5, #1
 2132              	.LVL185:
 2133 004c 0D62     		str	r5, [r1, #32]
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2134              		.loc 1 2314 0
 2135 004e E16F     		ldr	r1, [r4, #124]
 2136 0050 2943     		orrs	r1, r1, r5
 2137 0052 E167     		str	r1, [r4, #124]
 2138              	.L165:
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2139              		.loc 1 2318 0
 2140 0054 13F0020F 		tst	r3, #2
 2141 0058 07D0     		beq	.L166
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2142              		.loc 1 2318 0 is_stmt 0 discriminator 1
 2143 005a 32B1     		cbz	r2, .L166
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2144              		.loc 1 2320 0 is_stmt 1
 2145 005c 2168     		ldr	r1, [r4]
 2146 005e 0225     		movs	r5, #2
 2147 0060 0D62     		str	r5, [r1, #32]
ARM GAS  /tmp/cc3QCLpR.s 			page 116


2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2148              		.loc 1 2322 0
 2149 0062 E16F     		ldr	r1, [r4, #124]
 2150 0064 41F00401 		orr	r1, r1, #4
 2151 0068 E167     		str	r1, [r4, #124]
 2152              	.L166:
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2153              		.loc 1 2326 0
 2154 006a 13F0040F 		tst	r3, #4
 2155 006e 07D0     		beq	.L167
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2156              		.loc 1 2326 0 is_stmt 0 discriminator 1
 2157 0070 32B1     		cbz	r2, .L167
2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2158              		.loc 1 2328 0 is_stmt 1
 2159 0072 2168     		ldr	r1, [r4]
 2160 0074 0425     		movs	r5, #4
 2161 0076 0D62     		str	r5, [r1, #32]
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2162              		.loc 1 2330 0
 2163 0078 E16F     		ldr	r1, [r4, #124]
 2164 007a 41F00201 		orr	r1, r1, #2
 2165 007e E167     		str	r1, [r4, #124]
 2166              	.L167:
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 2167              		.loc 1 2339 0
 2168 0080 13F0080F 		tst	r3, #8
 2169 0084 09D0     		beq	.L168
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 2170              		.loc 1 2340 0
 2171 0086 10F0200F 		tst	r0, #32
 2172 008a 00D1     		bne	.L169
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 2173              		.loc 1 2340 0 is_stmt 0 discriminator 1
 2174 008c 2AB1     		cbz	r2, .L168
 2175              	.L169:
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2176              		.loc 1 2344 0 is_stmt 1
 2177 008e 2268     		ldr	r2, [r4]
 2178 0090 0821     		movs	r1, #8
 2179 0092 1162     		str	r1, [r2, #32]
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2180              		.loc 1 2346 0
 2181 0094 E26F     		ldr	r2, [r4, #124]
 2182 0096 0A43     		orrs	r2, r2, r1
 2183 0098 E267     		str	r2, [r4, #124]
 2184              	.L168:
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2185              		.loc 1 2350 0
 2186 009a 13F4006F 		tst	r3, #2048
 2187 009e 0AD0     		beq	.L170
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2188              		.loc 1 2350 0 is_stmt 0 discriminator 1
 2189 00a0 10F0806F 		tst	r0, #67108864
 2190 00a4 07D0     		beq	.L170
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2191              		.loc 1 2352 0 is_stmt 1
ARM GAS  /tmp/cc3QCLpR.s 			page 117


 2192 00a6 2268     		ldr	r2, [r4]
 2193 00a8 4FF40061 		mov	r1, #2048
 2194 00ac 1162     		str	r1, [r2, #32]
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2195              		.loc 1 2354 0
 2196 00ae E26F     		ldr	r2, [r4, #124]
 2197 00b0 42F02002 		orr	r2, r2, #32
 2198 00b4 E267     		str	r2, [r4, #124]
 2199              	.L170:
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2200              		.loc 1 2358 0
 2201 00b6 E26F     		ldr	r2, [r4, #124]
 2202 00b8 002A     		cmp	r2, #0
 2203 00ba 56D0     		beq	.L160
2366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
 2204              		.loc 1 2366 0
 2205 00bc 13F0200F 		tst	r3, #32
 2206 00c0 06D0     		beq	.L171
2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2207              		.loc 1 2367 0
 2208 00c2 10F0200F 		tst	r0, #32
 2209 00c6 03D0     		beq	.L171
2370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 2210              		.loc 1 2370 0
 2211 00c8 236E     		ldr	r3, [r4, #96]
 2212              	.LVL186:
 2213 00ca 0BB1     		cbz	r3, .L171
2372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 2214              		.loc 1 2372 0
 2215 00cc 2046     		mov	r0, r4
 2216              	.LVL187:
 2217 00ce 9847     		blx	r3
 2218              	.LVL188:
 2219              	.L171:
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 2220              		.loc 1 2381 0
 2221 00d0 E26F     		ldr	r2, [r4, #124]
 2222              	.LVL189:
2382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2223              		.loc 1 2382 0
 2224 00d2 2368     		ldr	r3, [r4]
 2225 00d4 9B68     		ldr	r3, [r3, #8]
 2226 00d6 13F0400F 		tst	r3, #64
 2227 00da 02D1     		bne	.L172
2382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2228              		.loc 1 2382 0 is_stmt 0 discriminator 1
 2229 00dc 12F0280F 		tst	r2, #40
 2230 00e0 1FD0     		beq	.L173
 2231              	.L172:
2388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2232              		.loc 1 2388 0 is_stmt 1
 2233 00e2 2046     		mov	r0, r4
 2234 00e4 FFF7FEFF 		bl	UART_EndRxTransfer
 2235              	.LVL190:
2391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 2236              		.loc 1 2391 0
 2237 00e8 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc3QCLpR.s 			page 118


 2238 00ea 9A68     		ldr	r2, [r3, #8]
 2239 00ec 12F0400F 		tst	r2, #64
 2240 00f0 13D0     		beq	.L174
2393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2241              		.loc 1 2393 0
 2242 00f2 9A68     		ldr	r2, [r3, #8]
 2243 00f4 22F04002 		bic	r2, r2, #64
 2244 00f8 9A60     		str	r2, [r3, #8]
2396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
 2245              		.loc 1 2396 0
 2246 00fa E36E     		ldr	r3, [r4, #108]
 2247 00fc 4BB1     		cbz	r3, .L175
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2248              		.loc 1 2400 0
 2249 00fe 1D4A     		ldr	r2, .L181
 2250 0100 9A63     		str	r2, [r3, #56]
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             {
 2251              		.loc 1 2403 0
 2252 0102 E06E     		ldr	r0, [r4, #108]
 2253 0104 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2254              	.LVL191:
 2255 0108 78B3     		cbz	r0, .L160
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             }
 2256              		.loc 1 2406 0
 2257 010a E06E     		ldr	r0, [r4, #108]
 2258 010c 836B     		ldr	r3, [r0, #56]
 2259 010e 9847     		blx	r3
 2260              	.LVL192:
 2261 0110 38BD     		pop	{r3, r4, r5, pc}
 2262              	.LVL193:
 2263              	.L175:
2417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2264              		.loc 1 2417 0
 2265 0112 2046     		mov	r0, r4
 2266 0114 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2267              	.LVL194:
 2268 0118 38BD     		pop	{r3, r4, r5, pc}
 2269              	.LVL195:
 2270              	.L174:
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2271              		.loc 1 2430 0
 2272 011a 2046     		mov	r0, r4
 2273 011c FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2274              	.LVL196:
 2275 0120 38BD     		pop	{r3, r4, r5, pc}
 2276              	.LVL197:
 2277              	.L173:
2443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2278              		.loc 1 2443 0
 2279 0122 2046     		mov	r0, r4
 2280 0124 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2281              	.LVL198:
2445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2282              		.loc 1 2445 0
 2283 0128 0023     		movs	r3, #0
 2284 012a E367     		str	r3, [r4, #124]
 2285 012c 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/cc3QCLpR.s 			page 119


 2286              	.LVL199:
 2287              	.L163:
2453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2288              		.loc 1 2453 0
 2289 012e 13F4801F 		tst	r3, #1048576
 2290 0132 02D0     		beq	.L176
2453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2291              		.loc 1 2453 0 is_stmt 0 discriminator 1
 2292 0134 15F4800F 		tst	r5, #4194304
 2293 0138 0AD1     		bne	.L179
 2294              	.L176:
2476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
 2295              		.loc 1 2476 0 is_stmt 1
 2296 013a 13F0800F 		tst	r3, #128
 2297 013e 0ED0     		beq	.L177
2477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2298              		.loc 1 2477 0
 2299 0140 10F0800F 		tst	r0, #128
 2300 0144 0BD0     		beq	.L177
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2301              		.loc 1 2480 0
 2302 0146 636E     		ldr	r3, [r4, #100]
 2303              	.LVL200:
 2304 0148 7BB1     		cbz	r3, .L160
2482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2305              		.loc 1 2482 0
 2306 014a 2046     		mov	r0, r4
 2307              	.LVL201:
 2308 014c 9847     		blx	r3
 2309              	.LVL202:
 2310 014e 38BD     		pop	{r3, r4, r5, pc}
 2311              	.LVL203:
 2312              	.L179:
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2313              		.loc 1 2455 0
 2314 0150 4FF48013 		mov	r3, #1048576
 2315              	.LVL204:
 2316 0154 0B62     		str	r3, [r1, #32]
2465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2317              		.loc 1 2465 0
 2318 0156 2046     		mov	r0, r4
 2319              	.LVL205:
 2320 0158 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 2321              	.LVL206:
2467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2322              		.loc 1 2467 0
 2323 015c 38BD     		pop	{r3, r4, r5, pc}
 2324              	.LVL207:
 2325              	.L177:
2488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2326              		.loc 1 2488 0
 2327 015e 13F0400F 		tst	r3, #64
 2328 0162 02D0     		beq	.L160
2488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2329              		.loc 1 2488 0 is_stmt 0 discriminator 1
 2330 0164 10F0400F 		tst	r0, #64
 2331 0168 00D1     		bne	.L180
ARM GAS  /tmp/cc3QCLpR.s 			page 120


 2332              	.LVL208:
 2333              	.L160:
 2334 016a 38BD     		pop	{r3, r4, r5, pc}
 2335              	.LVL209:
 2336              	.L180:
2490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 2337              		.loc 1 2490 0 is_stmt 1
 2338 016c 2046     		mov	r0, r4
 2339              	.LVL210:
 2340 016e FFF7FEFF 		bl	UART_EndTransmit_IT
 2341              	.LVL211:
2491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2342              		.loc 1 2491 0
 2343 0172 FAE7     		b	.L160
 2344              	.L182:
 2345              		.align	2
 2346              	.L181:
 2347 0174 00000000 		.word	UART_DMAAbortOnError
 2348              		.cfi_endproc
 2349              	.LFE152:
 2351              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2352              		.align	1
 2353              		.syntax unified
 2354              		.thumb
 2355              		.thumb_func
 2356              		.fpu fpv4-sp-d16
 2358              	UART_DMAAbortOnError:
 2359              	.LFB183:
3662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2360              		.loc 1 3662 0
 2361              		.cfi_startproc
 2362              		@ args = 0, pretend = 0, frame = 0
 2363              		@ frame_needed = 0, uses_anonymous_args = 0
 2364              	.LVL212:
 2365 0000 08B5     		push	{r3, lr}
 2366              	.LCFI21:
 2367              		.cfi_def_cfa_offset 8
 2368              		.cfi_offset 3, -8
 2369              		.cfi_offset 14, -4
3663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2370              		.loc 1 3663 0
 2371 0002 806A     		ldr	r0, [r0, #40]
 2372              	.LVL213:
3664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2373              		.loc 1 3664 0
 2374 0004 0023     		movs	r3, #0
 2375 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2376              		.loc 1 3665 0
 2377 000a A0F85230 		strh	r3, [r0, #82]	@ movhi
3672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2378              		.loc 1 3672 0
 2379 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2380              	.LVL214:
 2381 0012 08BD     		pop	{r3, pc}
 2382              		.cfi_endproc
 2383              	.LFE183:
ARM GAS  /tmp/cc3QCLpR.s 			page 121


 2385              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2386              		.align	1
 2387              		.weak	HAL_UART_AbortCpltCallback
 2388              		.syntax unified
 2389              		.thumb
 2390              		.thumb_func
 2391              		.fpu fpv4-sp-d16
 2393              	HAL_UART_AbortCpltCallback:
 2394              	.LFB158:
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2395              		.loc 1 2604 0
 2396              		.cfi_startproc
 2397              		@ args = 0, pretend = 0, frame = 0
 2398              		@ frame_needed = 0, uses_anonymous_args = 0
 2399              		@ link register save eliminated.
 2400              	.LVL215:
 2401 0000 7047     		bx	lr
 2402              		.cfi_endproc
 2403              	.LFE158:
 2405              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2406              		.align	1
 2407              		.global	HAL_UART_Abort_IT
 2408              		.syntax unified
 2409              		.thumb
 2410              		.thumb_func
 2411              		.fpu fpv4-sp-d16
 2413              	HAL_UART_Abort_IT:
 2414              	.LFB149:
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2415              		.loc 1 1932 0
 2416              		.cfi_startproc
 2417              		@ args = 0, pretend = 0, frame = 0
 2418              		@ frame_needed = 0, uses_anonymous_args = 0
 2419              	.LVL216:
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2420              		.loc 1 1932 0
 2421 0000 10B5     		push	{r4, lr}
 2422              	.LCFI22:
 2423              		.cfi_def_cfa_offset 8
 2424              		.cfi_offset 4, -8
 2425              		.cfi_offset 14, -4
 2426 0002 0446     		mov	r4, r0
 2427              	.LVL217:
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2428              		.loc 1 1940 0
 2429 0004 0268     		ldr	r2, [r0]
 2430 0006 1368     		ldr	r3, [r2]
 2431 0008 23F4F073 		bic	r3, r3, #480
 2432 000c 1360     		str	r3, [r2]
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2433              		.loc 1 1941 0
 2434 000e 0268     		ldr	r2, [r0]
 2435 0010 9368     		ldr	r3, [r2, #8]
 2436 0012 23F00103 		bic	r3, r3, #1
 2437 0016 9360     		str	r3, [r2, #8]
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2438              		.loc 1 1947 0
ARM GAS  /tmp/cc3QCLpR.s 			page 122


 2439 0018 836E     		ldr	r3, [r0, #104]
 2440 001a 33B1     		cbz	r3, .L187
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2441              		.loc 1 1951 0
 2442 001c 0268     		ldr	r2, [r0]
 2443 001e 9268     		ldr	r2, [r2, #8]
 2444 0020 12F0800F 		tst	r2, #128
 2445 0024 1DD0     		beq	.L188
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2446              		.loc 1 1953 0
 2447 0026 2C4A     		ldr	r2, .L200
 2448 0028 9A63     		str	r2, [r3, #56]
 2449              	.L187:
1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2450              		.loc 1 1961 0
 2451 002a E36E     		ldr	r3, [r4, #108]
 2452 002c 33B1     		cbz	r3, .L189
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2453              		.loc 1 1965 0
 2454 002e 2268     		ldr	r2, [r4]
 2455 0030 9268     		ldr	r2, [r2, #8]
 2456 0032 12F0400F 		tst	r2, #64
 2457 0036 17D0     		beq	.L190
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2458              		.loc 1 1967 0
 2459 0038 284A     		ldr	r2, .L200+4
 2460 003a 9A63     		str	r2, [r3, #56]
 2461              	.L189:
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2462              		.loc 1 1976 0
 2463 003c 2368     		ldr	r3, [r4]
 2464 003e 9A68     		ldr	r2, [r3, #8]
 2465 0040 12F0800F 		tst	r2, #128
 2466 0044 13D0     		beq	.L194
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2467              		.loc 1 1979 0
 2468 0046 9A68     		ldr	r2, [r3, #8]
 2469 0048 22F08002 		bic	r2, r2, #128
 2470 004c 9A60     		str	r2, [r3, #8]
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2471              		.loc 1 1982 0
 2472 004e A06E     		ldr	r0, [r4, #104]
 2473              	.LVL218:
 2474 0050 18B3     		cbz	r0, .L195
1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2475              		.loc 1 1988 0
 2476 0052 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2477              	.LVL219:
 2478 0056 10B3     		cbz	r0, .L196
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2479              		.loc 1 1990 0
 2480 0058 A36E     		ldr	r3, [r4, #104]
 2481 005a 0022     		movs	r2, #0
 2482 005c 9A63     		str	r2, [r3, #56]
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2483              		.loc 1 1933 0
 2484 005e 0122     		movs	r2, #1
ARM GAS  /tmp/cc3QCLpR.s 			page 123


 2485 0060 06E0     		b	.L191
 2486              	.LVL220:
 2487              	.L188:
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2488              		.loc 1 1957 0
 2489 0062 0022     		movs	r2, #0
 2490 0064 9A63     		str	r2, [r3, #56]
 2491 0066 E0E7     		b	.L187
 2492              	.L190:
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2493              		.loc 1 1971 0
 2494 0068 0022     		movs	r2, #0
 2495 006a 9A63     		str	r2, [r3, #56]
 2496 006c E6E7     		b	.L189
 2497              	.L194:
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2498              		.loc 1 1933 0
 2499 006e 0122     		movs	r2, #1
 2500              	.LVL221:
 2501              	.L191:
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2502              		.loc 1 2000 0
 2503 0070 2368     		ldr	r3, [r4]
 2504 0072 9968     		ldr	r1, [r3, #8]
 2505 0074 11F0400F 		tst	r1, #64
 2506 0078 0CD0     		beq	.L192
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2507              		.loc 1 2002 0
 2508 007a 9968     		ldr	r1, [r3, #8]
 2509 007c 21F04001 		bic	r1, r1, #64
 2510 0080 9960     		str	r1, [r3, #8]
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2511              		.loc 1 2005 0
 2512 0082 E06E     		ldr	r0, [r4, #108]
 2513 0084 30B1     		cbz	r0, .L192
2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2514              		.loc 1 2011 0
 2515 0086 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2516              	.LVL222:
 2517 008a 50B1     		cbz	r0, .L197
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
 2518              		.loc 1 2013 0
 2519 008c E36E     		ldr	r3, [r4, #108]
 2520 008e 0022     		movs	r2, #0
 2521 0090 9A63     		str	r2, [r3, #56]
 2522              	.LVL223:
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2523              		.loc 1 2014 0
 2524 0092 0122     		movs	r2, #1
 2525              	.LVL224:
 2526              	.L192:
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2527              		.loc 1 2024 0
 2528 0094 3AB9     		cbnz	r2, .L199
 2529              	.LVL225:
 2530              	.L193:
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 124


 2531              		.loc 1 2066 0
 2532 0096 0020     		movs	r0, #0
 2533 0098 10BD     		pop	{r4, pc}
 2534              	.LVL226:
 2535              	.L195:
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2536              		.loc 1 1933 0
 2537 009a 0122     		movs	r2, #1
 2538 009c E8E7     		b	.L191
 2539              	.L196:
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2540              		.loc 1 1994 0
 2541 009e 0022     		movs	r2, #0
 2542 00a0 E6E7     		b	.L191
 2543              	.LVL227:
 2544              	.L197:
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2545              		.loc 1 2018 0
 2546 00a2 0022     		movs	r2, #0
 2547 00a4 F6E7     		b	.L192
 2548              	.LVL228:
 2549              	.L199:
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2550              		.loc 1 2027 0
 2551 00a6 0023     		movs	r3, #0
 2552 00a8 A4F85230 		strh	r3, [r4, #82]	@ movhi
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2553              		.loc 1 2028 0
 2554 00ac A4F85A30 		strh	r3, [r4, #90]	@ movhi
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
 2555              		.loc 1 2031 0
 2556 00b0 2366     		str	r3, [r4, #96]
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2557              		.loc 1 2032 0
 2558 00b2 6366     		str	r3, [r4, #100]
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2559              		.loc 1 2035 0
 2560 00b4 E367     		str	r3, [r4, #124]
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2561              		.loc 1 2038 0
 2562 00b6 2368     		ldr	r3, [r4]
 2563 00b8 0F22     		movs	r2, #15
 2564              	.LVL229:
 2565 00ba 1A62     		str	r2, [r3, #32]
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2566              		.loc 1 2049 0
 2567 00bc 2268     		ldr	r2, [r4]
 2568 00be 138B     		ldrh	r3, [r2, #24]
 2569 00c0 9BB2     		uxth	r3, r3
 2570 00c2 43F00803 		orr	r3, r3, #8
 2571 00c6 1383     		strh	r3, [r2, #24]	@ movhi
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2572              		.loc 1 2052 0
 2573 00c8 2023     		movs	r3, #32
 2574 00ca 6367     		str	r3, [r4, #116]
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2575              		.loc 1 2053 0
ARM GAS  /tmp/cc3QCLpR.s 			page 125


 2576 00cc A367     		str	r3, [r4, #120]
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2577              		.loc 1 2061 0
 2578 00ce 2046     		mov	r0, r4
 2579 00d0 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2580              	.LVL230:
 2581 00d4 DFE7     		b	.L193
 2582              	.L201:
 2583 00d6 00BF     		.align	2
 2584              	.L200:
 2585 00d8 00000000 		.word	UART_DMATxAbortCallback
 2586 00dc 00000000 		.word	UART_DMARxAbortCallback
 2587              		.cfi_endproc
 2588              	.LFE149:
 2590              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 2591              		.align	1
 2592              		.syntax unified
 2593              		.thumb
 2594              		.thumb_func
 2595              		.fpu fpv4-sp-d16
 2597              	UART_DMARxAbortCallback:
 2598              	.LFB185:
3741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2599              		.loc 1 3741 0
 2600              		.cfi_startproc
 2601              		@ args = 0, pretend = 0, frame = 0
 2602              		@ frame_needed = 0, uses_anonymous_args = 0
 2603              	.LVL231:
 2604 0000 08B5     		push	{r3, lr}
 2605              	.LCFI23:
 2606              		.cfi_def_cfa_offset 8
 2607              		.cfi_offset 3, -8
 2608              		.cfi_offset 14, -4
3742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2609              		.loc 1 3742 0
 2610 0002 806A     		ldr	r0, [r0, #40]
 2611              	.LVL232:
3744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2612              		.loc 1 3744 0
 2613 0004 C36E     		ldr	r3, [r0, #108]
 2614 0006 0022     		movs	r2, #0
 2615 0008 9A63     		str	r2, [r3, #56]
3747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2616              		.loc 1 3747 0
 2617 000a 836E     		ldr	r3, [r0, #104]
 2618 000c 13B1     		cbz	r3, .L203
3749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2619              		.loc 1 3749 0
 2620 000e 9B6B     		ldr	r3, [r3, #56]
 2621 0010 03B1     		cbz	r3, .L203
 2622              	.LVL233:
 2623              	.L202:
 2624 0012 08BD     		pop	{r3, pc}
 2625              	.LVL234:
 2626              	.L203:
3756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2627              		.loc 1 3756 0
ARM GAS  /tmp/cc3QCLpR.s 			page 126


 2628 0014 0023     		movs	r3, #0
 2629 0016 A0F85230 		strh	r3, [r0, #82]	@ movhi
3757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2630              		.loc 1 3757 0
 2631 001a A0F85A30 		strh	r3, [r0, #90]	@ movhi
3760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2632              		.loc 1 3760 0
 2633 001e C367     		str	r3, [r0, #124]
3763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2634              		.loc 1 3763 0
 2635 0020 0368     		ldr	r3, [r0]
 2636 0022 0F22     		movs	r2, #15
 2637 0024 1A62     		str	r2, [r3, #32]
3766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2638              		.loc 1 3766 0
 2639 0026 0268     		ldr	r2, [r0]
 2640 0028 138B     		ldrh	r3, [r2, #24]
 2641 002a 9BB2     		uxth	r3, r3
 2642 002c 43F00803 		orr	r3, r3, #8
 2643 0030 1383     		strh	r3, [r2, #24]	@ movhi
3769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2644              		.loc 1 3769 0
 2645 0032 2023     		movs	r3, #32
 2646 0034 4367     		str	r3, [r0, #116]
3770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2647              		.loc 1 3770 0
 2648 0036 8367     		str	r3, [r0, #120]
3778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2649              		.loc 1 3778 0
 2650 0038 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2651              	.LVL235:
 2652 003c E9E7     		b	.L202
 2653              		.cfi_endproc
 2654              	.LFE185:
 2656              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 2657              		.align	1
 2658              		.syntax unified
 2659              		.thumb
 2660              		.thumb_func
 2661              		.fpu fpv4-sp-d16
 2663              	UART_DMATxAbortCallback:
 2664              	.LFB184:
3685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2665              		.loc 1 3685 0
 2666              		.cfi_startproc
 2667              		@ args = 0, pretend = 0, frame = 0
 2668              		@ frame_needed = 0, uses_anonymous_args = 0
 2669              	.LVL236:
 2670 0000 08B5     		push	{r3, lr}
 2671              	.LCFI24:
 2672              		.cfi_def_cfa_offset 8
 2673              		.cfi_offset 3, -8
 2674              		.cfi_offset 14, -4
3686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2675              		.loc 1 3686 0
 2676 0002 806A     		ldr	r0, [r0, #40]
 2677              	.LVL237:
ARM GAS  /tmp/cc3QCLpR.s 			page 127


3688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2678              		.loc 1 3688 0
 2679 0004 836E     		ldr	r3, [r0, #104]
 2680 0006 0022     		movs	r2, #0
 2681 0008 9A63     		str	r2, [r3, #56]
3691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2682              		.loc 1 3691 0
 2683 000a C36E     		ldr	r3, [r0, #108]
 2684 000c 13B1     		cbz	r3, .L207
3693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2685              		.loc 1 3693 0
 2686 000e 9B6B     		ldr	r3, [r3, #56]
 2687 0010 03B1     		cbz	r3, .L207
 2688              	.LVL238:
 2689              	.L206:
 2690 0012 08BD     		pop	{r3, pc}
 2691              	.LVL239:
 2692              	.L207:
3700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2693              		.loc 1 3700 0
 2694 0014 0023     		movs	r3, #0
 2695 0016 A0F85230 		strh	r3, [r0, #82]	@ movhi
3701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2696              		.loc 1 3701 0
 2697 001a A0F85A30 		strh	r3, [r0, #90]	@ movhi
3704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2698              		.loc 1 3704 0
 2699 001e C367     		str	r3, [r0, #124]
3707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2700              		.loc 1 3707 0
 2701 0020 0368     		ldr	r3, [r0]
 2702 0022 0F22     		movs	r2, #15
 2703 0024 1A62     		str	r2, [r3, #32]
3718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2704              		.loc 1 3718 0
 2705 0026 2023     		movs	r3, #32
 2706 0028 4367     		str	r3, [r0, #116]
3719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2707              		.loc 1 3719 0
 2708 002a 8367     		str	r3, [r0, #120]
3727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2709              		.loc 1 3727 0
 2710 002c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2711              	.LVL240:
 2712 0030 EFE7     		b	.L206
 2713              		.cfi_endproc
 2714              	.LFE184:
 2716              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 2717              		.align	1
 2718              		.weak	HAL_UART_AbortTransmitCpltCallback
 2719              		.syntax unified
 2720              		.thumb
 2721              		.thumb_func
 2722              		.fpu fpv4-sp-d16
 2724              	HAL_UART_AbortTransmitCpltCallback:
 2725              	.LFB159:
2619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/cc3QCLpR.s 			page 128


 2726              		.loc 1 2619 0
 2727              		.cfi_startproc
 2728              		@ args = 0, pretend = 0, frame = 0
 2729              		@ frame_needed = 0, uses_anonymous_args = 0
 2730              		@ link register save eliminated.
 2731              	.LVL241:
 2732 0000 7047     		bx	lr
 2733              		.cfi_endproc
 2734              	.LFE159:
 2736              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2737              		.align	1
 2738              		.global	HAL_UART_AbortTransmit_IT
 2739              		.syntax unified
 2740              		.thumb
 2741              		.thumb_func
 2742              		.fpu fpv4-sp-d16
 2744              	HAL_UART_AbortTransmit_IT:
 2745              	.LFB150:
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
 2746              		.loc 1 2083 0
 2747              		.cfi_startproc
 2748              		@ args = 0, pretend = 0, frame = 0
 2749              		@ frame_needed = 0, uses_anonymous_args = 0
 2750              	.LVL242:
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
 2751              		.loc 1 2083 0
 2752 0000 10B5     		push	{r4, lr}
 2753              	.LCFI25:
 2754              		.cfi_def_cfa_offset 8
 2755              		.cfi_offset 4, -8
 2756              		.cfi_offset 14, -4
 2757 0002 0446     		mov	r4, r0
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2758              		.loc 1 2089 0
 2759 0004 0268     		ldr	r2, [r0]
 2760 0006 1368     		ldr	r3, [r2]
 2761 0008 23F0C003 		bic	r3, r3, #192
 2762 000c 1360     		str	r3, [r2]
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2763              		.loc 1 2093 0
 2764 000e 0368     		ldr	r3, [r0]
 2765 0010 9A68     		ldr	r2, [r3, #8]
 2766 0012 12F0800F 		tst	r2, #128
 2767 0016 1AD0     		beq	.L212
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2768              		.loc 1 2095 0
 2769 0018 9A68     		ldr	r2, [r3, #8]
 2770 001a 22F08002 		bic	r2, r2, #128
 2771 001e 9A60     		str	r2, [r3, #8]
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2772              		.loc 1 2098 0
 2773 0020 836E     		ldr	r3, [r0, #104]
 2774 0022 5BB1     		cbz	r3, .L213
2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2775              		.loc 1 2102 0
 2776 0024 0E4A     		ldr	r2, .L217
 2777 0026 9A63     		str	r2, [r3, #56]
ARM GAS  /tmp/cc3QCLpR.s 			page 129


2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2778              		.loc 1 2105 0
 2779 0028 806E     		ldr	r0, [r0, #104]
 2780              	.LVL243:
 2781 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2782              	.LVL244:
 2783 002e 08B9     		cbnz	r0, .L216
 2784              	.L214:
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2785              		.loc 1 2162 0
 2786 0030 0020     		movs	r0, #0
 2787 0032 10BD     		pop	{r4, pc}
 2788              	.LVL245:
 2789              	.L216:
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2790              		.loc 1 2108 0
 2791 0034 A06E     		ldr	r0, [r4, #104]
 2792 0036 836B     		ldr	r3, [r0, #56]
 2793 0038 9847     		blx	r3
 2794              	.LVL246:
 2795 003a F9E7     		b	.L214
 2796              	.LVL247:
 2797              	.L213:
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2798              		.loc 1 2114 0
 2799 003c 0023     		movs	r3, #0
 2800 003e A0F85230 		strh	r3, [r0, #82]	@ movhi
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2801              		.loc 1 2117 0
 2802 0042 4366     		str	r3, [r0, #100]
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2803              		.loc 1 2120 0
 2804 0044 2023     		movs	r3, #32
 2805 0046 4367     		str	r3, [r0, #116]
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2806              		.loc 1 2128 0
 2807 0048 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2808              	.LVL248:
 2809 004c F0E7     		b	.L214
 2810              	.LVL249:
 2811              	.L212:
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2812              		.loc 1 2135 0
 2813 004e 0023     		movs	r3, #0
 2814 0050 A0F85230 		strh	r3, [r0, #82]	@ movhi
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2815              		.loc 1 2138 0
 2816 0054 4366     		str	r3, [r0, #100]
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2817              		.loc 1 2149 0
 2818 0056 2023     		movs	r3, #32
 2819 0058 4367     		str	r3, [r0, #116]
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2820              		.loc 1 2157 0
 2821 005a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2822              	.LVL250:
 2823 005e E7E7     		b	.L214
ARM GAS  /tmp/cc3QCLpR.s 			page 130


 2824              	.L218:
 2825              		.align	2
 2826              	.L217:
 2827 0060 00000000 		.word	UART_DMATxOnlyAbortCallback
 2828              		.cfi_endproc
 2829              	.LFE150:
 2831              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 2832              		.align	1
 2833              		.syntax unified
 2834              		.thumb
 2835              		.thumb_func
 2836              		.fpu fpv4-sp-d16
 2838              	UART_DMATxOnlyAbortCallback:
 2839              	.LFB186:
3792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2840              		.loc 1 3792 0
 2841              		.cfi_startproc
 2842              		@ args = 0, pretend = 0, frame = 0
 2843              		@ frame_needed = 0, uses_anonymous_args = 0
 2844              	.LVL251:
 2845 0000 08B5     		push	{r3, lr}
 2846              	.LCFI26:
 2847              		.cfi_def_cfa_offset 8
 2848              		.cfi_offset 3, -8
 2849              		.cfi_offset 14, -4
3793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2850              		.loc 1 3793 0
 2851 0002 806A     		ldr	r0, [r0, #40]
 2852              	.LVL252:
3795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2853              		.loc 1 3795 0
 2854 0004 0023     		movs	r3, #0
 2855 0006 A0F85230 		strh	r3, [r0, #82]	@ movhi
3806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2856              		.loc 1 3806 0
 2857 000a 2023     		movs	r3, #32
 2858 000c 4367     		str	r3, [r0, #116]
3814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2859              		.loc 1 3814 0
 2860 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2861              	.LVL253:
 2862 0012 08BD     		pop	{r3, pc}
 2863              		.cfi_endproc
 2864              	.LFE186:
 2866              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 2867              		.align	1
 2868              		.weak	HAL_UART_AbortReceiveCpltCallback
 2869              		.syntax unified
 2870              		.thumb
 2871              		.thumb_func
 2872              		.fpu fpv4-sp-d16
 2874              	HAL_UART_AbortReceiveCpltCallback:
 2875              	.LFB160:
2634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2876              		.loc 1 2634 0
 2877              		.cfi_startproc
 2878              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc3QCLpR.s 			page 131


 2879              		@ frame_needed = 0, uses_anonymous_args = 0
 2880              		@ link register save eliminated.
 2881              	.LVL254:
 2882 0000 7047     		bx	lr
 2883              		.cfi_endproc
 2884              	.LFE160:
 2886              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2887              		.align	1
 2888              		.global	HAL_UART_AbortReceive_IT
 2889              		.syntax unified
 2890              		.thumb
 2891              		.thumb_func
 2892              		.fpu fpv4-sp-d16
 2894              	HAL_UART_AbortReceive_IT:
 2895              	.LFB151:
2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2896              		.loc 1 2179 0
 2897              		.cfi_startproc
 2898              		@ args = 0, pretend = 0, frame = 0
 2899              		@ frame_needed = 0, uses_anonymous_args = 0
 2900              	.LVL255:
2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2901              		.loc 1 2179 0
 2902 0000 10B5     		push	{r4, lr}
 2903              	.LCFI27:
 2904              		.cfi_def_cfa_offset 8
 2905              		.cfi_offset 4, -8
 2906              		.cfi_offset 14, -4
 2907 0002 0446     		mov	r4, r0
2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2908              		.loc 1 2185 0
 2909 0004 0268     		ldr	r2, [r0]
 2910 0006 1368     		ldr	r3, [r2]
 2911 0008 23F49073 		bic	r3, r3, #288
 2912 000c 1360     		str	r3, [r2]
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2913              		.loc 1 2186 0
 2914 000e 0268     		ldr	r2, [r0]
 2915 0010 9368     		ldr	r3, [r2, #8]
 2916 0012 23F00103 		bic	r3, r3, #1
 2917 0016 9360     		str	r3, [r2, #8]
2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2918              		.loc 1 2190 0
 2919 0018 0368     		ldr	r3, [r0]
 2920 001a 9A68     		ldr	r2, [r3, #8]
 2921 001c 12F0400F 		tst	r2, #64
 2922 0020 23D0     		beq	.L223
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2923              		.loc 1 2192 0
 2924 0022 9A68     		ldr	r2, [r3, #8]
 2925 0024 22F04002 		bic	r2, r2, #64
 2926 0028 9A60     		str	r2, [r3, #8]
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2927              		.loc 1 2195 0
 2928 002a C36E     		ldr	r3, [r0, #108]
 2929 002c 5BB1     		cbz	r3, .L224
2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 132


 2930              		.loc 1 2199 0
 2931 002e 144A     		ldr	r2, .L228
 2932 0030 9A63     		str	r2, [r3, #56]
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2933              		.loc 1 2202 0
 2934 0032 C06E     		ldr	r0, [r0, #108]
 2935              	.LVL256:
 2936 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2937              	.LVL257:
 2938 0038 08B9     		cbnz	r0, .L227
 2939              	.L225:
2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2940              		.loc 1 2260 0
 2941 003a 0020     		movs	r0, #0
 2942 003c 10BD     		pop	{r4, pc}
 2943              	.LVL258:
 2944              	.L227:
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2945              		.loc 1 2205 0
 2946 003e E06E     		ldr	r0, [r4, #108]
 2947 0040 836B     		ldr	r3, [r0, #56]
 2948 0042 9847     		blx	r3
 2949              	.LVL259:
 2950 0044 F9E7     		b	.L225
 2951              	.LVL260:
 2952              	.L224:
2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2953              		.loc 1 2211 0
 2954 0046 0023     		movs	r3, #0
 2955 0048 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2956              		.loc 1 2214 0
 2957 004c 4365     		str	r3, [r0, #84]
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2958              		.loc 1 2217 0
 2959 004e 0368     		ldr	r3, [r0]
 2960 0050 0F22     		movs	r2, #15
 2961 0052 1A62     		str	r2, [r3, #32]
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2962              		.loc 1 2220 0
 2963 0054 0268     		ldr	r2, [r0]
 2964 0056 138B     		ldrh	r3, [r2, #24]
 2965 0058 9BB2     		uxth	r3, r3
 2966 005a 43F00803 		orr	r3, r3, #8
 2967 005e 1383     		strh	r3, [r2, #24]	@ movhi
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2968              		.loc 1 2223 0
 2969 0060 2023     		movs	r3, #32
 2970 0062 8367     		str	r3, [r0, #120]
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2971              		.loc 1 2231 0
 2972 0064 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2973              	.LVL261:
 2974 0068 E7E7     		b	.L225
 2975              	.LVL262:
 2976              	.L223:
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 133


 2977              		.loc 1 2238 0
 2978 006a 0022     		movs	r2, #0
 2979 006c A0F85A20 		strh	r2, [r0, #90]	@ movhi
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2980              		.loc 1 2241 0
 2981 0070 4265     		str	r2, [r0, #84]
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2982              		.loc 1 2244 0
 2983 0072 0F22     		movs	r2, #15
 2984 0074 1A62     		str	r2, [r3, #32]
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2985              		.loc 1 2247 0
 2986 0076 2023     		movs	r3, #32
 2987 0078 8367     		str	r3, [r0, #120]
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2988              		.loc 1 2255 0
 2989 007a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2990              	.LVL263:
 2991 007e DCE7     		b	.L225
 2992              	.L229:
 2993              		.align	2
 2994              	.L228:
 2995 0080 00000000 		.word	UART_DMARxOnlyAbortCallback
 2996              		.cfi_endproc
 2997              	.LFE151:
 2999              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3000              		.align	1
 3001              		.syntax unified
 3002              		.thumb
 3003              		.thumb_func
 3004              		.fpu fpv4-sp-d16
 3006              	UART_DMARxOnlyAbortCallback:
 3007              	.LFB187:
3827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3008              		.loc 1 3827 0
 3009              		.cfi_startproc
 3010              		@ args = 0, pretend = 0, frame = 0
 3011              		@ frame_needed = 0, uses_anonymous_args = 0
 3012              	.LVL264:
 3013 0000 08B5     		push	{r3, lr}
 3014              	.LCFI28:
 3015              		.cfi_def_cfa_offset 8
 3016              		.cfi_offset 3, -8
 3017              		.cfi_offset 14, -4
3828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3018              		.loc 1 3828 0
 3019 0002 806A     		ldr	r0, [r0, #40]
 3020              	.LVL265:
3830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3021              		.loc 1 3830 0
 3022 0004 0023     		movs	r3, #0
 3023 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3024              		.loc 1 3833 0
 3025 000a 0368     		ldr	r3, [r0]
 3026 000c 0F22     		movs	r2, #15
 3027 000e 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/cc3QCLpR.s 			page 134


3836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3028              		.loc 1 3836 0
 3029 0010 0268     		ldr	r2, [r0]
 3030 0012 138B     		ldrh	r3, [r2, #24]
 3031 0014 9BB2     		uxth	r3, r3
 3032 0016 43F00803 		orr	r3, r3, #8
 3033 001a 1383     		strh	r3, [r2, #24]	@ movhi
3839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3034              		.loc 1 3839 0
 3035 001c 2023     		movs	r3, #32
 3036 001e 8367     		str	r3, [r0, #120]
3847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3037              		.loc 1 3847 0
 3038 0020 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3039              	.LVL266:
 3040 0024 08BD     		pop	{r3, pc}
 3041              		.cfi_endproc
 3042              	.LFE187:
 3044              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 3045              		.align	1
 3046              		.global	HAL_UART_ReceiverTimeout_Config
 3047              		.syntax unified
 3048              		.thumb
 3049              		.thumb_func
 3050              		.fpu fpv4-sp-d16
 3052              	HAL_UART_ReceiverTimeout_Config:
 3053              	.LFB161:
2681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3054              		.loc 1 2681 0
 3055              		.cfi_startproc
 3056              		@ args = 0, pretend = 0, frame = 0
 3057              		@ frame_needed = 0, uses_anonymous_args = 0
 3058              		@ link register save eliminated.
 3059              	.LVL267:
2682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3060              		.loc 1 2682 0
 3061 0000 0268     		ldr	r2, [r0]
 3062 0002 044B     		ldr	r3, .L234
 3063 0004 9A42     		cmp	r2, r3
 3064 0006 04D0     		beq	.L232
2685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3065              		.loc 1 2685 0
 3066 0008 5369     		ldr	r3, [r2, #20]
 3067 000a 03F07F43 		and	r3, r3, #-16777216
 3068 000e 1943     		orrs	r1, r1, r3
 3069              	.LVL268:
 3070 0010 5161     		str	r1, [r2, #20]
 3071              	.L232:
 3072 0012 7047     		bx	lr
 3073              	.L235:
 3074              		.align	2
 3075              	.L234:
 3076 0014 00800040 		.word	1073774592
 3077              		.cfi_endproc
 3078              	.LFE161:
 3080              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 3081              		.align	1
ARM GAS  /tmp/cc3QCLpR.s 			page 135


 3082              		.global	HAL_UART_EnableReceiverTimeout
 3083              		.syntax unified
 3084              		.thumb
 3085              		.thumb_func
 3086              		.fpu fpv4-sp-d16
 3088              	HAL_UART_EnableReceiverTimeout:
 3089              	.LFB162:
2696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3090              		.loc 1 2696 0
 3091              		.cfi_startproc
 3092              		@ args = 0, pretend = 0, frame = 0
 3093              		@ frame_needed = 0, uses_anonymous_args = 0
 3094              		@ link register save eliminated.
 3095              	.LVL269:
2697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3096              		.loc 1 2697 0
 3097 0000 0368     		ldr	r3, [r0]
 3098 0002 104A     		ldr	r2, .L242
 3099 0004 9342     		cmp	r3, r2
 3100 0006 18D0     		beq	.L238
2699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3101              		.loc 1 2699 0
 3102 0008 426F     		ldr	r2, [r0, #116]
 3103 000a 202A     		cmp	r2, #32
 3104 000c 01D0     		beq	.L241
2718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3105              		.loc 1 2718 0
 3106 000e 0220     		movs	r0, #2
 3107              	.LVL270:
 3108 0010 7047     		bx	lr
 3109              	.LVL271:
 3110              	.L241:
2702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3111              		.loc 1 2702 0
 3112 0012 90F87020 		ldrb	r2, [r0, #112]	@ zero_extendqisi2
 3113 0016 012A     		cmp	r2, #1
 3114 0018 11D0     		beq	.L240
2702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3115              		.loc 1 2702 0 is_stmt 0 discriminator 2
 3116 001a 0122     		movs	r2, #1
 3117 001c 80F87020 		strb	r2, [r0, #112]
2704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3118              		.loc 1 2704 0 is_stmt 1 discriminator 2
 3119 0020 2422     		movs	r2, #36
 3120 0022 4267     		str	r2, [r0, #116]
2707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3121              		.loc 1 2707 0 discriminator 2
 3122 0024 5A68     		ldr	r2, [r3, #4]
 3123 0026 42F40002 		orr	r2, r2, #8388608
 3124 002a 5A60     		str	r2, [r3, #4]
2709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3125              		.loc 1 2709 0 discriminator 2
 3126 002c 2023     		movs	r3, #32
 3127 002e 4367     		str	r3, [r0, #116]
2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3128              		.loc 1 2712 0 discriminator 2
 3129 0030 0023     		movs	r3, #0
ARM GAS  /tmp/cc3QCLpR.s 			page 136


 3130 0032 80F87030 		strb	r3, [r0, #112]
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3131              		.loc 1 2714 0 discriminator 2
 3132 0036 1846     		mov	r0, r3
 3133              	.LVL272:
 3134 0038 7047     		bx	lr
 3135              	.LVL273:
 3136              	.L238:
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3137              		.loc 1 2723 0
 3138 003a 0120     		movs	r0, #1
 3139              	.LVL274:
 3140 003c 7047     		bx	lr
 3141              	.LVL275:
 3142              	.L240:
2702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3143              		.loc 1 2702 0
 3144 003e 0220     		movs	r0, #2
 3145              	.LVL276:
2725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3146              		.loc 1 2725 0
 3147 0040 7047     		bx	lr
 3148              	.L243:
 3149 0042 00BF     		.align	2
 3150              	.L242:
 3151 0044 00800040 		.word	1073774592
 3152              		.cfi_endproc
 3153              	.LFE162:
 3155              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 3156              		.align	1
 3157              		.global	HAL_UART_DisableReceiverTimeout
 3158              		.syntax unified
 3159              		.thumb
 3160              		.thumb_func
 3161              		.fpu fpv4-sp-d16
 3163              	HAL_UART_DisableReceiverTimeout:
 3164              	.LFB163:
2734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3165              		.loc 1 2734 0
 3166              		.cfi_startproc
 3167              		@ args = 0, pretend = 0, frame = 0
 3168              		@ frame_needed = 0, uses_anonymous_args = 0
 3169              		@ link register save eliminated.
 3170              	.LVL277:
2735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3171              		.loc 1 2735 0
 3172 0000 0368     		ldr	r3, [r0]
 3173 0002 104A     		ldr	r2, .L250
 3174 0004 9342     		cmp	r3, r2
 3175 0006 18D0     		beq	.L246
2737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3176              		.loc 1 2737 0
 3177 0008 426F     		ldr	r2, [r0, #116]
 3178 000a 202A     		cmp	r2, #32
 3179 000c 01D0     		beq	.L249
2756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3180              		.loc 1 2756 0
ARM GAS  /tmp/cc3QCLpR.s 			page 137


 3181 000e 0220     		movs	r0, #2
 3182              	.LVL278:
 3183 0010 7047     		bx	lr
 3184              	.LVL279:
 3185              	.L249:
2740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3186              		.loc 1 2740 0
 3187 0012 90F87020 		ldrb	r2, [r0, #112]	@ zero_extendqisi2
 3188 0016 012A     		cmp	r2, #1
 3189 0018 11D0     		beq	.L248
2740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3190              		.loc 1 2740 0 is_stmt 0 discriminator 2
 3191 001a 0122     		movs	r2, #1
 3192 001c 80F87020 		strb	r2, [r0, #112]
2742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3193              		.loc 1 2742 0 is_stmt 1 discriminator 2
 3194 0020 2422     		movs	r2, #36
 3195 0022 4267     		str	r2, [r0, #116]
2745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3196              		.loc 1 2745 0 discriminator 2
 3197 0024 5A68     		ldr	r2, [r3, #4]
 3198 0026 22F40002 		bic	r2, r2, #8388608
 3199 002a 5A60     		str	r2, [r3, #4]
2747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3200              		.loc 1 2747 0 discriminator 2
 3201 002c 2023     		movs	r3, #32
 3202 002e 4367     		str	r3, [r0, #116]
2750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3203              		.loc 1 2750 0 discriminator 2
 3204 0030 0023     		movs	r3, #0
 3205 0032 80F87030 		strb	r3, [r0, #112]
2752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3206              		.loc 1 2752 0 discriminator 2
 3207 0036 1846     		mov	r0, r3
 3208              	.LVL280:
 3209 0038 7047     		bx	lr
 3210              	.LVL281:
 3211              	.L246:
2761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3212              		.loc 1 2761 0
 3213 003a 0120     		movs	r0, #1
 3214              	.LVL282:
 3215 003c 7047     		bx	lr
 3216              	.LVL283:
 3217              	.L248:
2740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3218              		.loc 1 2740 0
 3219 003e 0220     		movs	r0, #2
 3220              	.LVL284:
2763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3221              		.loc 1 2763 0
 3222 0040 7047     		bx	lr
 3223              	.L251:
 3224 0042 00BF     		.align	2
 3225              	.L250:
 3226 0044 00800040 		.word	1073774592
 3227              		.cfi_endproc
ARM GAS  /tmp/cc3QCLpR.s 			page 138


 3228              	.LFE163:
 3230              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3231              		.align	1
 3232              		.global	HAL_MultiProcessor_EnterMuteMode
 3233              		.syntax unified
 3234              		.thumb
 3235              		.thumb_func
 3236              		.fpu fpv4-sp-d16
 3238              	HAL_MultiProcessor_EnterMuteMode:
 3239              	.LFB166:
2812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 3240              		.loc 1 2812 0
 3241              		.cfi_startproc
 3242              		@ args = 0, pretend = 0, frame = 0
 3243              		@ frame_needed = 0, uses_anonymous_args = 0
 3244              		@ link register save eliminated.
 3245              	.LVL285:
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3246              		.loc 1 2813 0
 3247 0000 0268     		ldr	r2, [r0]
 3248 0002 138B     		ldrh	r3, [r2, #24]
 3249 0004 9BB2     		uxth	r3, r3
 3250 0006 43F00403 		orr	r3, r3, #4
 3251 000a 1383     		strh	r3, [r2, #24]	@ movhi
 3252 000c 7047     		bx	lr
 3253              		.cfi_endproc
 3254              	.LFE166:
 3256              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3257              		.align	1
 3258              		.global	HAL_HalfDuplex_EnableTransmitter
 3259              		.syntax unified
 3260              		.thumb
 3261              		.thumb_func
 3262              		.fpu fpv4-sp-d16
 3264              	HAL_HalfDuplex_EnableTransmitter:
 3265              	.LFB167:
2822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3266              		.loc 1 2822 0
 3267              		.cfi_startproc
 3268              		@ args = 0, pretend = 0, frame = 0
 3269              		@ frame_needed = 0, uses_anonymous_args = 0
 3270              		@ link register save eliminated.
 3271              	.LVL286:
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3272              		.loc 1 2823 0
 3273 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3274 0004 012B     		cmp	r3, #1
 3275 0006 15D0     		beq	.L255
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3276              		.loc 1 2823 0 is_stmt 0 discriminator 2
 3277 0008 0123     		movs	r3, #1
 3278 000a 80F87030 		strb	r3, [r0, #112]
2824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3279              		.loc 1 2824 0 is_stmt 1 discriminator 2
 3280 000e 2423     		movs	r3, #36
 3281 0010 4367     		str	r3, [r0, #116]
2827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 139


 3282              		.loc 1 2827 0 discriminator 2
 3283 0012 0268     		ldr	r2, [r0]
 3284 0014 1368     		ldr	r3, [r2]
 3285 0016 23F00C03 		bic	r3, r3, #12
 3286 001a 1360     		str	r3, [r2]
2830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3287              		.loc 1 2830 0 discriminator 2
 3288 001c 0268     		ldr	r2, [r0]
 3289 001e 1368     		ldr	r3, [r2]
 3290 0020 43F00803 		orr	r3, r3, #8
 3291 0024 1360     		str	r3, [r2]
2832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3292              		.loc 1 2832 0 discriminator 2
 3293 0026 2023     		movs	r3, #32
 3294 0028 4367     		str	r3, [r0, #116]
2834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3295              		.loc 1 2834 0 discriminator 2
 3296 002a 0023     		movs	r3, #0
 3297 002c 80F87030 		strb	r3, [r0, #112]
2836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3298              		.loc 1 2836 0 discriminator 2
 3299 0030 1846     		mov	r0, r3
 3300              	.LVL287:
 3301 0032 7047     		bx	lr
 3302              	.LVL288:
 3303              	.L255:
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3304              		.loc 1 2823 0
 3305 0034 0220     		movs	r0, #2
 3306              	.LVL289:
2837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3307              		.loc 1 2837 0
 3308 0036 7047     		bx	lr
 3309              		.cfi_endproc
 3310              	.LFE167:
 3312              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3313              		.align	1
 3314              		.global	HAL_HalfDuplex_EnableReceiver
 3315              		.syntax unified
 3316              		.thumb
 3317              		.thumb_func
 3318              		.fpu fpv4-sp-d16
 3320              	HAL_HalfDuplex_EnableReceiver:
 3321              	.LFB168:
2845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3322              		.loc 1 2845 0
 3323              		.cfi_startproc
 3324              		@ args = 0, pretend = 0, frame = 0
 3325              		@ frame_needed = 0, uses_anonymous_args = 0
 3326              		@ link register save eliminated.
 3327              	.LVL290:
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3328              		.loc 1 2846 0
 3329 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3330 0004 012B     		cmp	r3, #1
 3331 0006 15D0     		beq	.L258
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/cc3QCLpR.s 			page 140


 3332              		.loc 1 2846 0 is_stmt 0 discriminator 2
 3333 0008 0123     		movs	r3, #1
 3334 000a 80F87030 		strb	r3, [r0, #112]
2847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3335              		.loc 1 2847 0 is_stmt 1 discriminator 2
 3336 000e 2423     		movs	r3, #36
 3337 0010 4367     		str	r3, [r0, #116]
2850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3338              		.loc 1 2850 0 discriminator 2
 3339 0012 0268     		ldr	r2, [r0]
 3340 0014 1368     		ldr	r3, [r2]
 3341 0016 23F00C03 		bic	r3, r3, #12
 3342 001a 1360     		str	r3, [r2]
2853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3343              		.loc 1 2853 0 discriminator 2
 3344 001c 0268     		ldr	r2, [r0]
 3345 001e 1368     		ldr	r3, [r2]
 3346 0020 43F00403 		orr	r3, r3, #4
 3347 0024 1360     		str	r3, [r2]
2855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3348              		.loc 1 2855 0 discriminator 2
 3349 0026 2023     		movs	r3, #32
 3350 0028 4367     		str	r3, [r0, #116]
2857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3351              		.loc 1 2857 0 discriminator 2
 3352 002a 0023     		movs	r3, #0
 3353 002c 80F87030 		strb	r3, [r0, #112]
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3354              		.loc 1 2859 0 discriminator 2
 3355 0030 1846     		mov	r0, r3
 3356              	.LVL291:
 3357 0032 7047     		bx	lr
 3358              	.LVL292:
 3359              	.L258:
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3360              		.loc 1 2846 0
 3361 0034 0220     		movs	r0, #2
 3362              	.LVL293:
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3363              		.loc 1 2860 0
 3364 0036 7047     		bx	lr
 3365              		.cfi_endproc
 3366              	.LFE168:
 3368              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3369              		.align	1
 3370              		.global	HAL_LIN_SendBreak
 3371              		.syntax unified
 3372              		.thumb
 3373              		.thumb_func
 3374              		.fpu fpv4-sp-d16
 3376              	HAL_LIN_SendBreak:
 3377              	.LFB169:
2869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 3378              		.loc 1 2869 0
 3379              		.cfi_startproc
 3380              		@ args = 0, pretend = 0, frame = 0
 3381              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc3QCLpR.s 			page 141


 3382              		@ link register save eliminated.
 3383              	.LVL294:
2873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3384              		.loc 1 2873 0
 3385 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3386 0004 012B     		cmp	r3, #1
 3387 0006 11D0     		beq	.L261
2873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3388              		.loc 1 2873 0 is_stmt 0 discriminator 2
 3389 0008 0123     		movs	r3, #1
 3390 000a 80F87030 		strb	r3, [r0, #112]
2875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3391              		.loc 1 2875 0 is_stmt 1 discriminator 2
 3392 000e 2423     		movs	r3, #36
 3393 0010 4367     		str	r3, [r0, #116]
2878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3394              		.loc 1 2878 0 discriminator 2
 3395 0012 0268     		ldr	r2, [r0]
 3396 0014 138B     		ldrh	r3, [r2, #24]
 3397 0016 9BB2     		uxth	r3, r3
 3398 0018 43F00203 		orr	r3, r3, #2
 3399 001c 1383     		strh	r3, [r2, #24]	@ movhi
2880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3400              		.loc 1 2880 0 discriminator 2
 3401 001e 2023     		movs	r3, #32
 3402 0020 4367     		str	r3, [r0, #116]
2882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3403              		.loc 1 2882 0 discriminator 2
 3404 0022 0023     		movs	r3, #0
 3405 0024 80F87030 		strb	r3, [r0, #112]
2884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3406              		.loc 1 2884 0 discriminator 2
 3407 0028 1846     		mov	r0, r3
 3408              	.LVL295:
 3409 002a 7047     		bx	lr
 3410              	.LVL296:
 3411              	.L261:
2873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3412              		.loc 1 2873 0
 3413 002c 0220     		movs	r0, #2
 3414              	.LVL297:
2885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3415              		.loc 1 2885 0
 3416 002e 7047     		bx	lr
 3417              		.cfi_endproc
 3418              	.LFE169:
 3420              		.section	.text.HAL_UART_GetState,"ax",%progbits
 3421              		.align	1
 3422              		.global	HAL_UART_GetState
 3423              		.syntax unified
 3424              		.thumb
 3425              		.thumb_func
 3426              		.fpu fpv4-sp-d16
 3428              	HAL_UART_GetState:
 3429              	.LFB170:
2914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp1;
 3430              		.loc 1 2914 0
ARM GAS  /tmp/cc3QCLpR.s 			page 142


 3431              		.cfi_startproc
 3432              		@ args = 0, pretend = 0, frame = 0
 3433              		@ frame_needed = 0, uses_anonymous_args = 0
 3434              		@ link register save eliminated.
 3435              	.LVL298:
2917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
 3436              		.loc 1 2917 0
 3437 0000 426F     		ldr	r2, [r0, #116]
 3438              	.LVL299:
2918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3439              		.loc 1 2918 0
 3440 0002 806F     		ldr	r0, [r0, #120]
 3441              	.LVL300:
2921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3442              		.loc 1 2921 0
 3443 0004 1043     		orrs	r0, r0, r2
 3444              	.LVL301:
 3445 0006 7047     		bx	lr
 3446              		.cfi_endproc
 3447              	.LFE170:
 3449              		.section	.text.HAL_UART_GetError,"ax",%progbits
 3450              		.align	1
 3451              		.global	HAL_UART_GetError
 3452              		.syntax unified
 3453              		.thumb
 3454              		.thumb_func
 3455              		.fpu fpv4-sp-d16
 3457              	HAL_UART_GetError:
 3458              	.LFB171:
2930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
 3459              		.loc 1 2930 0
 3460              		.cfi_startproc
 3461              		@ args = 0, pretend = 0, frame = 0
 3462              		@ frame_needed = 0, uses_anonymous_args = 0
 3463              		@ link register save eliminated.
 3464              	.LVL302:
2931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3465              		.loc 1 2931 0
 3466 0000 C06F     		ldr	r0, [r0, #124]
 3467              	.LVL303:
2932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 3468              		.loc 1 2932 0
 3469 0002 7047     		bx	lr
 3470              		.cfi_endproc
 3471              	.LFE171:
 3473              		.global	__aeabi_uldivmod
 3474              		.section	.text.UART_SetConfig,"ax",%progbits
 3475              		.align	1
 3476              		.global	UART_SetConfig
 3477              		.syntax unified
 3478              		.thumb
 3479              		.thumb_func
 3480              		.fpu fpv4-sp-d16
 3482              	UART_SetConfig:
 3483              	.LFB172:
2977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg;
 3484              		.loc 1 2977 0
ARM GAS  /tmp/cc3QCLpR.s 			page 143


 3485              		.cfi_startproc
 3486              		@ args = 0, pretend = 0, frame = 0
 3487              		@ frame_needed = 0, uses_anonymous_args = 0
 3488              	.LVL304:
 3489 0000 2DE9784B 		push	{r3, r4, r5, r6, r8, r9, fp, lr}
 3490              	.LCFI29:
 3491              		.cfi_def_cfa_offset 32
 3492              		.cfi_offset 3, -32
 3493              		.cfi_offset 4, -28
 3494              		.cfi_offset 5, -24
 3495              		.cfi_offset 6, -20
 3496              		.cfi_offset 8, -16
 3497              		.cfi_offset 9, -12
 3498              		.cfi_offset 11, -8
 3499              		.cfi_offset 14, -4
 3500 0004 0446     		mov	r4, r0
 3501              	.LVL305:
2989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3502              		.loc 1 2989 0
 3503 0006 0168     		ldr	r1, [r0]
3014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 3504              		.loc 1 3014 0
 3505 0008 8368     		ldr	r3, [r0, #8]
 3506 000a 0269     		ldr	r2, [r0, #16]
 3507 000c 1343     		orrs	r3, r3, r2
 3508 000e 4269     		ldr	r2, [r0, #20]
 3509 0010 1343     		orrs	r3, r3, r2
 3510 0012 C269     		ldr	r2, [r0, #28]
 3511 0014 1343     		orrs	r3, r3, r2
 3512              	.LVL306:
3018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3513              		.loc 1 3018 0
 3514 0016 0868     		ldr	r0, [r1]
 3515              	.LVL307:
 3516 0018 9F4A     		ldr	r2, .L360
 3517 001a 0240     		ands	r2, r2, r0
 3518 001c 1343     		orrs	r3, r3, r2
 3519              	.LVL308:
 3520 001e 0B60     		str	r3, [r1]
 3521              	.LVL309:
3023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3522              		.loc 1 3023 0
 3523 0020 2268     		ldr	r2, [r4]
 3524 0022 5368     		ldr	r3, [r2, #4]
 3525 0024 23F44053 		bic	r3, r3, #12288
 3526 0028 E168     		ldr	r1, [r4, #12]
 3527 002a 0B43     		orrs	r3, r3, r1
 3528 002c 5360     		str	r3, [r2, #4]
3031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3529              		.loc 1 3031 0
 3530 002e A369     		ldr	r3, [r4, #24]
 3531              	.LVL310:
3033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3532              		.loc 1 3033 0
 3533 0030 2268     		ldr	r2, [r4]
 3534 0032 9A49     		ldr	r1, .L360+4
 3535 0034 8A42     		cmp	r2, r1
ARM GAS  /tmp/cc3QCLpR.s 			page 144


 3536 0036 01D0     		beq	.L265
3035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3537              		.loc 1 3035 0
 3538 0038 216A     		ldr	r1, [r4, #32]
 3539 003a 0B43     		orrs	r3, r3, r1
 3540              	.LVL311:
 3541              	.L265:
3037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3542              		.loc 1 3037 0
 3543 003c 9168     		ldr	r1, [r2, #8]
 3544 003e 21F43061 		bic	r1, r1, #2816
 3545 0042 0B43     		orrs	r3, r3, r1
 3546              	.LVL312:
 3547 0044 9360     		str	r3, [r2, #8]
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3548              		.loc 1 3047 0
 3549 0046 2368     		ldr	r3, [r4]
 3550 0048 954A     		ldr	r2, .L360+8
 3551 004a 9342     		cmp	r3, r2
 3552 004c 27D0     		beq	.L348
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3553              		.loc 1 3047 0 is_stmt 0 discriminator 2
 3554 004e 954A     		ldr	r2, .L360+12
 3555 0050 9342     		cmp	r3, r2
 3556 0052 38D0     		beq	.L349
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3557              		.loc 1 3047 0 discriminator 9
 3558 0054 944A     		ldr	r2, .L360+16
 3559 0056 9342     		cmp	r3, r2
 3560 0058 4ED0     		beq	.L350
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3561              		.loc 1 3047 0 discriminator 16
 3562 005a 944A     		ldr	r2, .L360+20
 3563 005c 9342     		cmp	r3, r2
 3564 005e 61D0     		beq	.L351
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3565              		.loc 1 3047 0 discriminator 23
 3566 0060 934A     		ldr	r2, .L360+24
 3567 0062 9342     		cmp	r3, r2
 3568 0064 74D0     		beq	.L352
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3569              		.loc 1 3047 0 discriminator 30
 3570 0066 8D4A     		ldr	r2, .L360+4
 3571 0068 9342     		cmp	r3, r2
 3572 006a 00F08A80 		beq	.L353
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3573              		.loc 1 3047 0
 3574 006e 1025     		movs	r5, #16
 3575              	.L271:
 3576              	.LVL313:
3050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3577              		.loc 1 3050 0 is_stmt 1
 3578 0070 8A4A     		ldr	r2, .L360+4
 3579 0072 9342     		cmp	r3, r2
 3580 0074 00F0AA80 		beq	.L354
3149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3581              		.loc 1 3149 0
ARM GAS  /tmp/cc3QCLpR.s 			page 145


 3582 0078 E369     		ldr	r3, [r4, #28]
 3583 007a B3F5004F 		cmp	r3, #32768
 3584 007e 00F02C81 		beq	.L355
3210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3585              		.loc 1 3210 0
 3586 0082 082D     		cmp	r5, #8
 3587 0084 00F2B781 		bhi	.L345
 3588 0088 DFE815F0 		tbh	[pc, r5, lsl #1]
 3589              	.L326:
 3590 008c 7601     		.2byte	(.L325-.L326)/2
 3591 008e 8D01     		.2byte	(.L327-.L326)/2
 3592 0090 9701     		.2byte	(.L328-.L326)/2
 3593 0092 B501     		.2byte	(.L345-.L326)/2
 3594 0094 A201     		.2byte	(.L329-.L326)/2
 3595 0096 B501     		.2byte	(.L345-.L326)/2
 3596 0098 B501     		.2byte	(.L345-.L326)/2
 3597 009a B501     		.2byte	(.L345-.L326)/2
 3598 009c AC01     		.2byte	(.L330-.L326)/2
 3599              	.LVL314:
 3600              		.p2align 1
 3601              	.L348:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3602              		.loc 1 3047 0 discriminator 1
 3603 009e 02F55842 		add	r2, r2, #55296
 3604 00a2 D2F88820 		ldr	r2, [r2, #136]
 3605 00a6 02F00302 		and	r2, r2, #3
 3606 00aa 032A     		cmp	r2, #3
 3607 00ac 09D8     		bhi	.L267
 3608 00ae DFE802F0 		tbb	[pc, r2]
 3609              	.L269:
 3610 00b2 02       		.byte	(.L268-.L269)/2
 3611 00b3 04       		.byte	(.L270-.L269)/2
 3612 00b4 81       		.byte	(.L331-.L269)/2
 3613 00b5 06       		.byte	(.L272-.L269)/2
 3614              		.p2align 1
 3615              	.L268:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3616              		.loc 1 3047 0 is_stmt 0
 3617 00b6 0125     		movs	r5, #1
 3618 00b8 DAE7     		b	.L271
 3619              	.L270:
 3620              	.LVL315:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3621              		.loc 1 3047 0 discriminator 5
 3622 00ba 0425     		movs	r5, #4
 3623 00bc D8E7     		b	.L271
 3624              	.LVL316:
 3625              	.L272:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3626              		.loc 1 3047 0 discriminator 7
 3627 00be 0825     		movs	r5, #8
 3628 00c0 D6E7     		b	.L271
 3629              	.LVL317:
 3630              	.L267:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3631              		.loc 1 3047 0 discriminator 3
 3632 00c2 1025     		movs	r5, #16
ARM GAS  /tmp/cc3QCLpR.s 			page 146


 3633 00c4 D4E7     		b	.L271
 3634              	.LVL318:
 3635              	.L349:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3636              		.loc 1 3047 0 discriminator 8
 3637 00c6 02F5E632 		add	r2, r2, #117760
 3638 00ca D2F88820 		ldr	r2, [r2, #136]
 3639 00ce 02F00C02 		and	r2, r2, #12
 3640 00d2 0C2A     		cmp	r2, #12
 3641 00d4 0ED8     		bhi	.L274
 3642 00d6 DFE802F0 		tbb	[pc, r2]
 3643              	.L276:
 3644 00da 07       		.byte	(.L275-.L276)/2
 3645 00db 0D       		.byte	(.L274-.L276)/2
 3646 00dc 0D       		.byte	(.L274-.L276)/2
 3647 00dd 0D       		.byte	(.L274-.L276)/2
 3648 00de 09       		.byte	(.L277-.L276)/2
 3649 00df 0D       		.byte	(.L274-.L276)/2
 3650 00e0 0D       		.byte	(.L274-.L276)/2
 3651 00e1 0D       		.byte	(.L274-.L276)/2
 3652 00e2 6F       		.byte	(.L332-.L276)/2
 3653 00e3 0D       		.byte	(.L274-.L276)/2
 3654 00e4 0D       		.byte	(.L274-.L276)/2
 3655 00e5 0D       		.byte	(.L274-.L276)/2
 3656 00e6 0B       		.byte	(.L278-.L276)/2
 3657 00e7 00       		.p2align 1
 3658              	.L275:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3659              		.loc 1 3047 0
 3660 00e8 0025     		movs	r5, #0
 3661 00ea C1E7     		b	.L271
 3662              	.L277:
 3663              	.LVL319:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3664              		.loc 1 3047 0 discriminator 12
 3665 00ec 0425     		movs	r5, #4
 3666 00ee BFE7     		b	.L271
 3667              	.LVL320:
 3668              	.L278:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3669              		.loc 1 3047 0 discriminator 14
 3670 00f0 0825     		movs	r5, #8
 3671 00f2 BDE7     		b	.L271
 3672              	.LVL321:
 3673              	.L274:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3674              		.loc 1 3047 0 discriminator 10
 3675 00f4 1025     		movs	r5, #16
 3676 00f6 BBE7     		b	.L271
 3677              	.LVL322:
 3678              	.L350:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3679              		.loc 1 3047 0 discriminator 15
 3680 00f8 02F5E432 		add	r2, r2, #116736
 3681 00fc D2F88820 		ldr	r2, [r2, #136]
 3682 0100 02F03002 		and	r2, r2, #48
 3683 0104 102A     		cmp	r2, #16
ARM GAS  /tmp/cc3QCLpR.s 			page 147


 3684 0106 09D0     		beq	.L281
 3685 0108 05D9     		bls	.L356
 3686 010a 202A     		cmp	r2, #32
 3687 010c 56D0     		beq	.L333
 3688 010e 302A     		cmp	r2, #48
 3689 0110 06D1     		bne	.L280
 3690              	.LVL323:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3691              		.loc 1 3047 0 discriminator 21
 3692 0112 0825     		movs	r5, #8
 3693 0114 ACE7     		b	.L271
 3694              	.LVL324:
 3695              	.L356:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3696              		.loc 1 3047 0 discriminator 15
 3697 0116 1AB9     		cbnz	r2, .L280
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3698              		.loc 1 3047 0
 3699 0118 0025     		movs	r5, #0
 3700 011a A9E7     		b	.L271
 3701              	.L281:
 3702              	.LVL325:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3703              		.loc 1 3047 0 discriminator 19
 3704 011c 0425     		movs	r5, #4
 3705 011e A7E7     		b	.L271
 3706              	.LVL326:
 3707              	.L280:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3708              		.loc 1 3047 0 discriminator 17
 3709 0120 1025     		movs	r5, #16
 3710 0122 A5E7     		b	.L271
 3711              	.LVL327:
 3712              	.L351:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3713              		.loc 1 3047 0 discriminator 22
 3714 0124 02F5E232 		add	r2, r2, #115712
 3715 0128 D2F88820 		ldr	r2, [r2, #136]
 3716 012c 02F0C002 		and	r2, r2, #192
 3717 0130 402A     		cmp	r2, #64
 3718 0132 09D0     		beq	.L287
 3719 0134 05D9     		bls	.L357
 3720 0136 802A     		cmp	r2, #128
 3721 0138 42D0     		beq	.L334
 3722 013a C02A     		cmp	r2, #192
 3723 013c 06D1     		bne	.L286
 3724              	.LVL328:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3725              		.loc 1 3047 0 discriminator 28
 3726 013e 0825     		movs	r5, #8
 3727 0140 96E7     		b	.L271
 3728              	.LVL329:
 3729              	.L357:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3730              		.loc 1 3047 0 discriminator 22
 3731 0142 1AB9     		cbnz	r2, .L286
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 148


 3732              		.loc 1 3047 0
 3733 0144 0025     		movs	r5, #0
 3734 0146 93E7     		b	.L271
 3735              	.L287:
 3736              	.LVL330:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3737              		.loc 1 3047 0 discriminator 26
 3738 0148 0425     		movs	r5, #4
 3739 014a 91E7     		b	.L271
 3740              	.LVL331:
 3741              	.L286:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3742              		.loc 1 3047 0 discriminator 24
 3743 014c 1025     		movs	r5, #16
 3744 014e 8FE7     		b	.L271
 3745              	.LVL332:
 3746              	.L352:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3747              		.loc 1 3047 0 discriminator 29
 3748 0150 02F5E032 		add	r2, r2, #114688
 3749 0154 D2F88820 		ldr	r2, [r2, #136]
 3750 0158 02F44072 		and	r2, r2, #768
 3751 015c B2F5807F 		cmp	r2, #256
 3752 0160 0BD0     		beq	.L293
 3753 0162 07D9     		bls	.L358
 3754 0164 B2F5007F 		cmp	r2, #512
 3755 0168 2CD0     		beq	.L335
 3756 016a B2F5407F 		cmp	r2, #768
 3757 016e 06D1     		bne	.L292
 3758              	.LVL333:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3759              		.loc 1 3047 0 discriminator 35
 3760 0170 0825     		movs	r5, #8
 3761 0172 7DE7     		b	.L271
 3762              	.LVL334:
 3763              	.L358:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3764              		.loc 1 3047 0 discriminator 29
 3765 0174 1AB9     		cbnz	r2, .L292
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3766              		.loc 1 3047 0
 3767 0176 0025     		movs	r5, #0
 3768 0178 7AE7     		b	.L271
 3769              	.L293:
 3770              	.LVL335:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3771              		.loc 1 3047 0 discriminator 33
 3772 017a 0425     		movs	r5, #4
 3773 017c 78E7     		b	.L271
 3774              	.LVL336:
 3775              	.L292:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3776              		.loc 1 3047 0 discriminator 31
 3777 017e 1025     		movs	r5, #16
 3778 0180 76E7     		b	.L271
 3779              	.LVL337:
 3780              	.L353:
ARM GAS  /tmp/cc3QCLpR.s 			page 149


3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3781              		.loc 1 3047 0 discriminator 36
 3782 0182 02F5C832 		add	r2, r2, #102400
 3783 0186 D2F88820 		ldr	r2, [r2, #136]
 3784 018a 02F44062 		and	r2, r2, #3072
 3785 018e B2F5806F 		cmp	r2, #1024
 3786 0192 0BD0     		beq	.L298
 3787 0194 07D9     		bls	.L359
 3788 0196 B2F5006F 		cmp	r2, #2048
 3789 019a 15D0     		beq	.L337
 3790 019c B2F5406F 		cmp	r2, #3072
 3791 01a0 06D1     		bne	.L297
 3792              	.LVL338:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3793              		.loc 1 3047 0 discriminator 42
 3794 01a2 0825     		movs	r5, #8
 3795 01a4 64E7     		b	.L271
 3796              	.LVL339:
 3797              	.L359:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3798              		.loc 1 3047 0 discriminator 36
 3799 01a6 1AB9     		cbnz	r2, .L297
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3800              		.loc 1 3047 0
 3801 01a8 0025     		movs	r5, #0
 3802 01aa 61E7     		b	.L271
 3803              	.L298:
 3804              	.LVL340:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3805              		.loc 1 3047 0 discriminator 40
 3806 01ac 0425     		movs	r5, #4
 3807 01ae 5FE7     		b	.L271
 3808              	.LVL341:
 3809              	.L297:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3810              		.loc 1 3047 0 discriminator 38
 3811 01b0 1025     		movs	r5, #16
 3812 01b2 5DE7     		b	.L271
 3813              	.LVL342:
 3814              	.L331:
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3815              		.loc 1 3047 0
 3816 01b4 0225     		movs	r5, #2
 3817 01b6 5BE7     		b	.L271
 3818              	.L332:
 3819 01b8 0225     		movs	r5, #2
 3820 01ba 59E7     		b	.L271
 3821              	.L333:
 3822 01bc 0225     		movs	r5, #2
 3823 01be 57E7     		b	.L271
 3824              	.L334:
 3825 01c0 0225     		movs	r5, #2
 3826 01c2 55E7     		b	.L271
 3827              	.L335:
 3828 01c4 0225     		movs	r5, #2
 3829 01c6 53E7     		b	.L271
 3830              	.L337:
ARM GAS  /tmp/cc3QCLpR.s 			page 150


 3831 01c8 0225     		movs	r5, #2
 3832 01ca 51E7     		b	.L271
 3833              	.LVL343:
 3834              	.L354:
3053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3835              		.loc 1 3053 0 is_stmt 1
 3836 01cc 082D     		cmp	r5, #8
 3837 01ce 11D8     		bhi	.L303
 3838 01d0 DFE805F0 		tbb	[pc, r5]
 3839              	.L305:
 3840 01d4 08       		.byte	(.L304-.L305)/2
 3841 01d5 10       		.byte	(.L303-.L305)/2
 3842 01d6 05       		.byte	(.L306-.L305)/2
 3843 01d7 10       		.byte	(.L303-.L305)/2
 3844 01d8 0C       		.byte	(.L307-.L305)/2
 3845 01d9 10       		.byte	(.L303-.L305)/2
 3846 01da 10       		.byte	(.L303-.L305)/2
 3847 01db 10       		.byte	(.L303-.L305)/2
 3848 01dc 13       		.byte	(.L338-.L305)/2
 3849 01dd 00       		.p2align 1
 3850              	.L306:
3066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 3851              		.loc 1 3066 0
 3852 01de 3548     		ldr	r0, .L360+28
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3853              		.loc 1 2982 0
 3854 01e0 0026     		movs	r6, #0
 3855 01e2 0DE0     		b	.L308
 3856              	.L304:
3059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 3857              		.loc 1 3059 0
 3858 01e4 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3859              	.LVL344:
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3860              		.loc 1 2982 0
 3861 01e8 0026     		movs	r6, #0
3061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3862              		.loc 1 3061 0
 3863 01ea 09E0     		b	.L308
 3864              	.LVL345:
 3865              	.L307:
3073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 3866              		.loc 1 3073 0
 3867 01ec FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3868              	.LVL346:
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3869              		.loc 1 2982 0
 3870 01f0 0026     		movs	r6, #0
3075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3871              		.loc 1 3075 0
 3872 01f2 05E0     		b	.L308
 3873              	.LVL347:
 3874              	.L303:
2983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t pclk;
 3875              		.loc 1 2983 0
 3876 01f4 0020     		movs	r0, #0
3084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
ARM GAS  /tmp/cc3QCLpR.s 			page 151


 3877              		.loc 1 3084 0
 3878 01f6 0126     		movs	r6, #1
3085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3879              		.loc 1 3085 0
 3880 01f8 02E0     		b	.L308
 3881              	.LVL348:
 3882              	.L338:
3080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 3883              		.loc 1 3080 0
 3884 01fa 4FF40040 		mov	r0, #32768
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3885              		.loc 1 2982 0
 3886 01fe 0026     		movs	r6, #0
 3887              	.LVL349:
 3888              	.L308:
3089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3889              		.loc 1 3089 0
 3890 0200 0028     		cmp	r0, #0
 3891 0202 00F0CA80 		beq	.L309
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 3892              		.loc 1 3092 0
 3893 0206 6268     		ldr	r2, [r4, #4]
 3894 0208 02EB4203 		add	r3, r2, r2, lsl #1
 3895 020c 9842     		cmp	r0, r3
 3896 020e C0F0F580 		bcc	.L339
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 3897              		.loc 1 3092 0 is_stmt 0 discriminator 1
 3898 0212 B0EB023F 		cmp	r0, r2, lsl #12
 3899 0216 00F2F380 		bhi	.L340
3099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3900              		.loc 1 3099 0 is_stmt 1
 3901 021a 082D     		cmp	r5, #8
 3902 021c 5AD8     		bhi	.L341
 3903 021e DFE805F0 		tbb	[pc, r5]
 3904              	.L312:
 3905 0222 05       		.byte	(.L311-.L312)/2
 3906 0223 59       		.byte	(.L341-.L312)/2
 3907 0224 1F       		.byte	(.L313-.L312)/2
 3908 0225 59       		.byte	(.L341-.L312)/2
 3909 0226 29       		.byte	(.L314-.L312)/2
 3910 0227 59       		.byte	(.L341-.L312)/2
 3911 0228 59       		.byte	(.L341-.L312)/2
 3912 0229 59       		.byte	(.L341-.L312)/2
 3913 022a 4F       		.byte	(.L315-.L312)/2
 3914 022b 00       		.p2align 1
 3915              	.L311:
3102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 3916              		.loc 1 3102 0
 3917 022c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3918              	.LVL350:
3106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 3919              		.loc 1 3106 0
 3920 0230 0023     		movs	r3, #0
 3921 0232 4FEA1069 		lsr	r9, r0, #24
 3922 0236 4FEA0028 		lsl	r8, r0, #8
 3923 023a 6268     		ldr	r2, [r4, #4]
 3924 023c 5008     		lsrs	r0, r2, #1
ARM GAS  /tmp/cc3QCLpR.s 			page 152


 3925              	.LVL351:
 3926 023e 18EB000B 		adds	fp, r8, r0
 3927 0242 49F1000C 		adc	ip, r9, #0
 3928 0246 5846     		mov	r0, fp
 3929 0248 6146     		mov	r1, ip
 3930 024a FFF7FEFF 		bl	__aeabi_uldivmod
 3931              	.LVL352:
 3932              	.L310:
3137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3933              		.loc 1 3137 0
 3934 024e A0F54072 		sub	r2, r0, #768
 3935 0252 194B     		ldr	r3, .L360+32
 3936 0254 9A42     		cmp	r2, r3
 3937 0256 00F2D580 		bhi	.L342
3139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 3938              		.loc 1 3139 0
 3939 025a 2368     		ldr	r3, [r4]
 3940 025c D860     		str	r0, [r3, #12]
 3941 025e 9CE0     		b	.L309
 3942              	.LVL353:
 3943              	.L313:
3113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 3944              		.loc 1 3113 0
 3945 0260 5508     		lsrs	r5, r2, #1
 3946              	.LVL354:
 3947 0262 0023     		movs	r3, #0
 3948 0264 1548     		ldr	r0, .L360+36
 3949              	.LVL355:
 3950 0266 0021     		movs	r1, #0
 3951 0268 4019     		adds	r0, r0, r5
 3952 026a 41F10001 		adc	r1, r1, #0
 3953 026e FFF7FEFF 		bl	__aeabi_uldivmod
 3954              	.LVL356:
3115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_SYSCLK:
 3955              		.loc 1 3115 0
 3956 0272 ECE7     		b	.L310
 3957              	.LVL357:
 3958              	.L314:
3117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 3959              		.loc 1 3117 0
 3960 0274 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3961              	.LVL358:
3121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 3962              		.loc 1 3121 0
 3963 0278 0023     		movs	r3, #0
 3964 027a 4FEA1069 		lsr	r9, r0, #24
 3965 027e 4FEA0028 		lsl	r8, r0, #8
 3966 0282 6268     		ldr	r2, [r4, #4]
 3967 0284 5008     		lsrs	r0, r2, #1
 3968              	.LVL359:
 3969 0286 18EB000B 		adds	fp, r8, r0
 3970 028a 49F1000C 		adc	ip, r9, #0
 3971 028e 5846     		mov	r0, fp
 3972 0290 6146     		mov	r1, ip
 3973 0292 FFF7FEFF 		bl	__aeabi_uldivmod
 3974              	.LVL360:
3123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_LSE:
ARM GAS  /tmp/cc3QCLpR.s 			page 153


 3975              		.loc 1 3123 0
 3976 0296 DAE7     		b	.L310
 3977              	.L361:
 3978              		.align	2
 3979              	.L360:
 3980 0298 F369FFEF 		.word	-268473869
 3981 029c 00800040 		.word	1073774592
 3982 02a0 00380140 		.word	1073821696
 3983 02a4 00440040 		.word	1073759232
 3984 02a8 00480040 		.word	1073760256
 3985 02ac 004C0040 		.word	1073761280
 3986 02b0 00500040 		.word	1073762304
 3987 02b4 0024F400 		.word	16000000
 3988 02b8 FFFC0F00 		.word	1047807
 3989 02bc 000024F4 		.word	-198967296
 3990              	.LVL361:
 3991              	.L315:
3128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 3992              		.loc 1 3128 0
 3993 02c0 5008     		lsrs	r0, r2, #1
 3994              	.LVL362:
 3995 02c2 0021     		movs	r1, #0
 3996 02c4 0023     		movs	r3, #0
 3997 02c6 10F50000 		adds	r0, r0, #8388608
 3998 02ca 41F10001 		adc	r1, r1, #0
 3999 02ce FFF7FEFF 		bl	__aeabi_uldivmod
 4000              	.LVL363:
3130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           default:
 4001              		.loc 1 3130 0
 4002 02d2 BCE7     		b	.L310
 4003              	.LVL364:
 4004              	.L341:
3132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
 4005              		.loc 1 3132 0
 4006 02d4 0126     		movs	r6, #1
 4007              	.LVL365:
2981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4008              		.loc 1 2981 0
 4009 02d6 0020     		movs	r0, #0
 4010              	.LVL366:
 4011 02d8 B9E7     		b	.L310
 4012              	.LVL367:
 4013              	.L355:
3151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4014              		.loc 1 3151 0
 4015 02da 082D     		cmp	r5, #8
 4016 02dc 49D8     		bhi	.L343
 4017 02de DFE805F0 		tbb	[pc, r5]
 4018              	.L319:
 4019 02e2 05       		.byte	(.L318-.L319)/2
 4020 02e3 1E       		.byte	(.L320-.L319)/2
 4021 02e4 29       		.byte	(.L321-.L319)/2
 4022 02e5 48       		.byte	(.L343-.L319)/2
 4023 02e6 34       		.byte	(.L322-.L319)/2
 4024 02e7 48       		.byte	(.L343-.L319)/2
 4025 02e8 48       		.byte	(.L343-.L319)/2
 4026 02e9 48       		.byte	(.L343-.L319)/2
ARM GAS  /tmp/cc3QCLpR.s 			page 154


 4027 02ea 3F       		.byte	(.L323-.L319)/2
 4028 02eb 00       		.p2align 1
 4029              	.L318:
3154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 4030              		.loc 1 3154 0
 4031 02ec FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4032              	.LVL368:
3158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 4033              		.loc 1 3158 0
 4034 02f0 6268     		ldr	r2, [r4, #4]
 4035 02f2 5308     		lsrs	r3, r2, #1
 4036 02f4 03EB4003 		add	r3, r3, r0, lsl #1
 4037 02f8 B3FBF2F3 		udiv	r3, r3, r2
 4038 02fc 9BB2     		uxth	r3, r3
 4039              	.LVL369:
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4040              		.loc 1 2982 0
 4041 02fe 0026     		movs	r6, #0
 4042              	.LVL370:
 4043              	.L317:
3197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4044              		.loc 1 3197 0
 4045 0300 A3F11001 		sub	r1, r3, #16
 4046 0304 4FF6EF72 		movw	r2, #65519
 4047 0308 9142     		cmp	r1, r2
 4048 030a 7DD8     		bhi	.L344
3199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 4049              		.loc 1 3199 0
 4050 030c 9AB2     		uxth	r2, r3
 4051 030e 22F00F02 		bic	r2, r2, #15
 4052              	.LVL371:
3200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 4053              		.loc 1 3200 0
 4054 0312 C3F34203 		ubfx	r3, r3, #1, #3
 4055              	.LVL372:
 4056 0316 1343     		orrs	r3, r3, r2
 4057              	.LVL373:
3201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4058              		.loc 1 3201 0
 4059 0318 2268     		ldr	r2, [r4]
 4060 031a D360     		str	r3, [r2, #12]
 4061 031c 3DE0     		b	.L309
 4062              	.LVL374:
 4063              	.L320:
3162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 4064              		.loc 1 3162 0
 4065 031e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4066              	.LVL375:
3166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 4067              		.loc 1 3166 0
 4068 0322 6268     		ldr	r2, [r4, #4]
 4069 0324 5308     		lsrs	r3, r2, #1
 4070 0326 03EB4003 		add	r3, r3, r0, lsl #1
 4071 032a B3FBF2F3 		udiv	r3, r3, r2
 4072 032e 9BB2     		uxth	r3, r3
 4073              	.LVL376:
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
ARM GAS  /tmp/cc3QCLpR.s 			page 155


 4074              		.loc 1 2982 0
 4075 0330 0026     		movs	r6, #0
3168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 4076              		.loc 1 3168 0
 4077 0332 E5E7     		b	.L317
 4078              	.LVL377:
 4079              	.L321:
3173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 4080              		.loc 1 3173 0
 4081 0334 6268     		ldr	r2, [r4, #4]
 4082 0336 5308     		lsrs	r3, r2, #1
 4083 0338 03F1F473 		add	r3, r3, #31981568
 4084 033c 03F59043 		add	r3, r3, #18432
 4085 0340 B3FBF2F3 		udiv	r3, r3, r2
 4086 0344 9BB2     		uxth	r3, r3
 4087              	.LVL378:
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4088              		.loc 1 2982 0
 4089 0346 0026     		movs	r6, #0
3175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 4090              		.loc 1 3175 0
 4091 0348 DAE7     		b	.L317
 4092              	.LVL379:
 4093              	.L322:
3177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 4094              		.loc 1 3177 0
 4095 034a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4096              	.LVL380:
3181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 4097              		.loc 1 3181 0
 4098 034e 6268     		ldr	r2, [r4, #4]
 4099 0350 5308     		lsrs	r3, r2, #1
 4100 0352 03EB4003 		add	r3, r3, r0, lsl #1
 4101 0356 B3FBF2F3 		udiv	r3, r3, r2
 4102 035a 9BB2     		uxth	r3, r3
 4103              	.LVL381:
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4104              		.loc 1 2982 0
 4105 035c 0026     		movs	r6, #0
3183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 4106              		.loc 1 3183 0
 4107 035e CFE7     		b	.L317
 4108              	.LVL382:
 4109              	.L323:
3188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 4110              		.loc 1 3188 0
 4111 0360 6268     		ldr	r2, [r4, #4]
 4112 0362 5308     		lsrs	r3, r2, #1
 4113 0364 03F58033 		add	r3, r3, #65536
 4114 0368 B3FBF2F3 		udiv	r3, r3, r2
 4115 036c 9BB2     		uxth	r3, r3
 4116              	.LVL383:
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4117              		.loc 1 2982 0
 4118 036e 0026     		movs	r6, #0
3190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
 4119              		.loc 1 3190 0
ARM GAS  /tmp/cc3QCLpR.s 			page 156


 4120 0370 C6E7     		b	.L317
 4121              	.LVL384:
 4122              	.L343:
3192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 4123              		.loc 1 3192 0
 4124 0372 0126     		movs	r6, #1
2981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4125              		.loc 1 2981 0
 4126 0374 0023     		movs	r3, #0
 4127 0376 C3E7     		b	.L317
 4128              	.L325:
3213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 4129              		.loc 1 3213 0
 4130 0378 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4131              	.LVL385:
3217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 4132              		.loc 1 3217 0
 4133 037c 6368     		ldr	r3, [r4, #4]
 4134 037e 00EB5300 		add	r0, r0, r3, lsr #1
 4135              	.LVL386:
 4136 0382 B0FBF3F0 		udiv	r0, r0, r3
 4137 0386 80B2     		uxth	r0, r0
 4138              	.LVL387:
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4139              		.loc 1 2982 0
 4140 0388 0026     		movs	r6, #0
 4141              	.LVL388:
 4142              	.L324:
3256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4143              		.loc 1 3256 0
 4144 038a A0F11002 		sub	r2, r0, #16
 4145 038e 4FF6EF73 		movw	r3, #65519
 4146 0392 9A42     		cmp	r2, r3
 4147 0394 3AD8     		bhi	.L346
3258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4148              		.loc 1 3258 0
 4149 0396 2368     		ldr	r3, [r4]
 4150 0398 D860     		str	r0, [r3, #12]
 4151              	.LVL389:
 4152              	.L309:
3273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 4153              		.loc 1 3273 0
 4154 039a 0023     		movs	r3, #0
 4155 039c 2366     		str	r3, [r4, #96]
3274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4156              		.loc 1 3274 0
 4157 039e 6366     		str	r3, [r4, #100]
3277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4158              		.loc 1 3277 0
 4159 03a0 3046     		mov	r0, r6
 4160 03a2 BDE8788B 		pop	{r3, r4, r5, r6, r8, r9, fp, pc}
 4161              	.LVL390:
 4162              	.L327:
3221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 4163              		.loc 1 3221 0
 4164 03a6 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4165              	.LVL391:
ARM GAS  /tmp/cc3QCLpR.s 			page 157


3225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 4166              		.loc 1 3225 0
 4167 03aa 6368     		ldr	r3, [r4, #4]
 4168 03ac 00EB5300 		add	r0, r0, r3, lsr #1
 4169              	.LVL392:
 4170 03b0 B0FBF3F0 		udiv	r0, r0, r3
 4171 03b4 80B2     		uxth	r0, r0
 4172              	.LVL393:
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4173              		.loc 1 2982 0
 4174 03b6 0026     		movs	r6, #0
3227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 4175              		.loc 1 3227 0
 4176 03b8 E7E7     		b	.L324
 4177              	.LVL394:
 4178              	.L328:
3232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 4179              		.loc 1 3232 0
 4180 03ba 6368     		ldr	r3, [r4, #4]
 4181 03bc 5808     		lsrs	r0, r3, #1
 4182 03be 00F57400 		add	r0, r0, #15990784
 4183 03c2 00F51050 		add	r0, r0, #9216
 4184 03c6 B0FBF3F0 		udiv	r0, r0, r3
 4185 03ca 80B2     		uxth	r0, r0
 4186              	.LVL395:
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4187              		.loc 1 2982 0
 4188 03cc 0026     		movs	r6, #0
3234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 4189              		.loc 1 3234 0
 4190 03ce DCE7     		b	.L324
 4191              	.LVL396:
 4192              	.L329:
3236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 4193              		.loc 1 3236 0
 4194 03d0 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4195              	.LVL397:
3240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 4196              		.loc 1 3240 0
 4197 03d4 6368     		ldr	r3, [r4, #4]
 4198 03d6 00EB5300 		add	r0, r0, r3, lsr #1
 4199              	.LVL398:
 4200 03da B0FBF3F0 		udiv	r0, r0, r3
 4201 03de 80B2     		uxth	r0, r0
 4202              	.LVL399:
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4203              		.loc 1 2982 0
 4204 03e0 0026     		movs	r6, #0
3242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 4205              		.loc 1 3242 0
 4206 03e2 D2E7     		b	.L324
 4207              	.LVL400:
 4208              	.L330:
3247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 4209              		.loc 1 3247 0
 4210 03e4 6368     		ldr	r3, [r4, #4]
 4211 03e6 5808     		lsrs	r0, r3, #1
ARM GAS  /tmp/cc3QCLpR.s 			page 158


 4212 03e8 00F50040 		add	r0, r0, #32768
 4213 03ec B0FBF3F0 		udiv	r0, r0, r3
 4214 03f0 80B2     		uxth	r0, r0
 4215              	.LVL401:
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4216              		.loc 1 2982 0
 4217 03f2 0026     		movs	r6, #0
3249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
 4218              		.loc 1 3249 0
 4219 03f4 C9E7     		b	.L324
 4220              	.LVL402:
 4221              	.L345:
3251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 4222              		.loc 1 3251 0
 4223 03f6 0126     		movs	r6, #1
2981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4224              		.loc 1 2981 0
 4225 03f8 0020     		movs	r0, #0
 4226 03fa C6E7     		b	.L324
 4227              	.LVL403:
 4228              	.L339:
3095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4229              		.loc 1 3095 0
 4230 03fc 0126     		movs	r6, #1
 4231              	.LVL404:
 4232 03fe CCE7     		b	.L309
 4233              	.LVL405:
 4234              	.L340:
 4235 0400 0126     		movs	r6, #1
 4236              	.LVL406:
 4237 0402 CAE7     		b	.L309
 4238              	.LVL407:
 4239              	.L342:
3143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 4240              		.loc 1 3143 0
 4241 0404 0126     		movs	r6, #1
 4242              	.LVL408:
 4243 0406 C8E7     		b	.L309
 4244              	.LVL409:
 4245              	.L344:
3205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4246              		.loc 1 3205 0
 4247 0408 0126     		movs	r6, #1
 4248              	.LVL410:
 4249 040a C6E7     		b	.L309
 4250              	.LVL411:
 4251              	.L346:
3262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4252              		.loc 1 3262 0
 4253 040c 0126     		movs	r6, #1
 4254              	.LVL412:
 4255 040e C4E7     		b	.L309
 4256              		.cfi_endproc
 4257              	.LFE172:
 4259              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 4260              		.align	1
 4261              		.global	UART_AdvFeatureConfig
ARM GAS  /tmp/cc3QCLpR.s 			page 159


 4262              		.syntax unified
 4263              		.thumb
 4264              		.thumb_func
 4265              		.fpu fpv4-sp-d16
 4267              	UART_AdvFeatureConfig:
 4268              	.LFB173:
3285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 4269              		.loc 1 3285 0
 4270              		.cfi_startproc
 4271              		@ args = 0, pretend = 0, frame = 0
 4272              		@ frame_needed = 0, uses_anonymous_args = 0
 4273              		@ link register save eliminated.
 4274              	.LVL413:
3290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4275              		.loc 1 3290 0
 4276 0000 436A     		ldr	r3, [r0, #36]
 4277 0002 13F0010F 		tst	r3, #1
 4278 0006 06D0     		beq	.L363
3293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4279              		.loc 1 3293 0
 4280 0008 0268     		ldr	r2, [r0]
 4281 000a 5368     		ldr	r3, [r2, #4]
 4282 000c 23F40033 		bic	r3, r3, #131072
 4283 0010 816A     		ldr	r1, [r0, #40]
 4284 0012 0B43     		orrs	r3, r3, r1
 4285 0014 5360     		str	r3, [r2, #4]
 4286              	.L363:
3297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4287              		.loc 1 3297 0
 4288 0016 436A     		ldr	r3, [r0, #36]
 4289 0018 13F0020F 		tst	r3, #2
 4290 001c 06D0     		beq	.L364
3300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4291              		.loc 1 3300 0
 4292 001e 0268     		ldr	r2, [r0]
 4293 0020 5368     		ldr	r3, [r2, #4]
 4294 0022 23F48033 		bic	r3, r3, #65536
 4295 0026 C16A     		ldr	r1, [r0, #44]
 4296 0028 0B43     		orrs	r3, r3, r1
 4297 002a 5360     		str	r3, [r2, #4]
 4298              	.L364:
3304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4299              		.loc 1 3304 0
 4300 002c 436A     		ldr	r3, [r0, #36]
 4301 002e 13F0040F 		tst	r3, #4
 4302 0032 06D0     		beq	.L365
3307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4303              		.loc 1 3307 0
 4304 0034 0268     		ldr	r2, [r0]
 4305 0036 5368     		ldr	r3, [r2, #4]
 4306 0038 23F48023 		bic	r3, r3, #262144
 4307 003c 016B     		ldr	r1, [r0, #48]
 4308 003e 0B43     		orrs	r3, r3, r1
 4309 0040 5360     		str	r3, [r2, #4]
 4310              	.L365:
3311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4311              		.loc 1 3311 0
ARM GAS  /tmp/cc3QCLpR.s 			page 160


 4312 0042 436A     		ldr	r3, [r0, #36]
 4313 0044 13F0080F 		tst	r3, #8
 4314 0048 06D0     		beq	.L366
3314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4315              		.loc 1 3314 0
 4316 004a 0268     		ldr	r2, [r0]
 4317 004c 5368     		ldr	r3, [r2, #4]
 4318 004e 23F40043 		bic	r3, r3, #32768
 4319 0052 416B     		ldr	r1, [r0, #52]
 4320 0054 0B43     		orrs	r3, r3, r1
 4321 0056 5360     		str	r3, [r2, #4]
 4322              	.L366:
3318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4323              		.loc 1 3318 0
 4324 0058 436A     		ldr	r3, [r0, #36]
 4325 005a 13F0100F 		tst	r3, #16
 4326 005e 06D0     		beq	.L367
3321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4327              		.loc 1 3321 0
 4328 0060 0268     		ldr	r2, [r0]
 4329 0062 9368     		ldr	r3, [r2, #8]
 4330 0064 23F48053 		bic	r3, r3, #4096
 4331 0068 816B     		ldr	r1, [r0, #56]
 4332 006a 0B43     		orrs	r3, r3, r1
 4333 006c 9360     		str	r3, [r2, #8]
 4334              	.L367:
3325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4335              		.loc 1 3325 0
 4336 006e 436A     		ldr	r3, [r0, #36]
 4337 0070 13F0200F 		tst	r3, #32
 4338 0074 06D0     		beq	.L368
3328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4339              		.loc 1 3328 0
 4340 0076 0268     		ldr	r2, [r0]
 4341 0078 9368     		ldr	r3, [r2, #8]
 4342 007a 23F40053 		bic	r3, r3, #8192
 4343 007e C16B     		ldr	r1, [r0, #60]
 4344 0080 0B43     		orrs	r3, r3, r1
 4345 0082 9360     		str	r3, [r2, #8]
 4346              	.L368:
3332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4347              		.loc 1 3332 0
 4348 0084 436A     		ldr	r3, [r0, #36]
 4349 0086 13F0400F 		tst	r3, #64
 4350 008a 0AD0     		beq	.L369
3336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 4351              		.loc 1 3336 0
 4352 008c 0268     		ldr	r2, [r0]
 4353 008e 5368     		ldr	r3, [r2, #4]
 4354 0090 23F48013 		bic	r3, r3, #1048576
 4355 0094 016C     		ldr	r1, [r0, #64]
 4356 0096 0B43     		orrs	r3, r3, r1
 4357 0098 5360     		str	r3, [r2, #4]
3338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4358              		.loc 1 3338 0
 4359 009a 036C     		ldr	r3, [r0, #64]
 4360 009c B3F5801F 		cmp	r3, #1048576
ARM GAS  /tmp/cc3QCLpR.s 			page 161


 4361 00a0 0BD0     		beq	.L371
 4362              	.L369:
3346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4363              		.loc 1 3346 0
 4364 00a2 436A     		ldr	r3, [r0, #36]
 4365 00a4 13F0800F 		tst	r3, #128
 4366 00a8 06D0     		beq	.L362
3349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4367              		.loc 1 3349 0
 4368 00aa 0268     		ldr	r2, [r0]
 4369 00ac 5368     		ldr	r3, [r2, #4]
 4370 00ae 23F40023 		bic	r3, r3, #524288
 4371 00b2 816C     		ldr	r1, [r0, #72]
 4372 00b4 0B43     		orrs	r3, r3, r1
 4373 00b6 5360     		str	r3, [r2, #4]
 4374              	.L362:
 4375 00b8 7047     		bx	lr
 4376              	.L371:
3341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4377              		.loc 1 3341 0
 4378 00ba 0268     		ldr	r2, [r0]
 4379 00bc 5368     		ldr	r3, [r2, #4]
 4380 00be 23F4C003 		bic	r3, r3, #6291456
 4381 00c2 416C     		ldr	r1, [r0, #68]
 4382 00c4 0B43     		orrs	r3, r3, r1
 4383 00c6 5360     		str	r3, [r2, #4]
 4384 00c8 EBE7     		b	.L369
 4385              		.cfi_endproc
 4386              	.LFE173:
 4388              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 4389              		.align	1
 4390              		.global	UART_WaitOnFlagUntilTimeout
 4391              		.syntax unified
 4392              		.thumb
 4393              		.thumb_func
 4394              		.fpu fpv4-sp-d16
 4396              	UART_WaitOnFlagUntilTimeout:
 4397              	.LFB175:
3410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
 4398              		.loc 1 3410 0
 4399              		.cfi_startproc
 4400              		@ args = 4, pretend = 0, frame = 0
 4401              		@ frame_needed = 0, uses_anonymous_args = 0
 4402              	.LVL414:
 4403 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4404              	.LCFI30:
 4405              		.cfi_def_cfa_offset 24
 4406              		.cfi_offset 4, -24
 4407              		.cfi_offset 5, -20
 4408              		.cfi_offset 6, -16
 4409              		.cfi_offset 7, -12
 4410              		.cfi_offset 8, -8
 4411              		.cfi_offset 14, -4
 4412 0004 0446     		mov	r4, r0
 4413 0006 0F46     		mov	r7, r1
 4414 0008 1646     		mov	r6, r2
 4415 000a 9846     		mov	r8, r3
ARM GAS  /tmp/cc3QCLpR.s 			page 162


 4416 000c 069D     		ldr	r5, [sp, #24]
 4417              	.LVL415:
 4418              	.L374:
3412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4419              		.loc 1 3412 0
 4420 000e 2368     		ldr	r3, [r4]
 4421 0010 DB69     		ldr	r3, [r3, #28]
 4422 0012 37EA0303 		bics	r3, r7, r3
 4423 0016 0CBF     		ite	eq
 4424 0018 0123     		moveq	r3, #1
 4425 001a 0023     		movne	r3, #0
 4426 001c B342     		cmp	r3, r6
 4427 001e 3CD1     		bne	.L380
3415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4428              		.loc 1 3415 0
 4429 0020 B5F1FF3F 		cmp	r5, #-1
 4430 0024 F3D0     		beq	.L374
3417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4431              		.loc 1 3417 0
 4432 0026 FFF7FEFF 		bl	HAL_GetTick
 4433              	.LVL416:
 4434 002a A0EB0800 		sub	r0, r0, r8
 4435 002e 8542     		cmp	r5, r0
 4436 0030 20D3     		bcc	.L375
3417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4437              		.loc 1 3417 0 is_stmt 0 discriminator 1
 4438 0032 FDB1     		cbz	r5, .L375
3435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4439              		.loc 1 3435 0 is_stmt 1
 4440 0034 2368     		ldr	r3, [r4]
 4441 0036 1A68     		ldr	r2, [r3]
 4442 0038 12F0040F 		tst	r2, #4
 4443 003c E7D0     		beq	.L374
3437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 4444              		.loc 1 3437 0
 4445 003e DA69     		ldr	r2, [r3, #28]
 4446 0040 12F4006F 		tst	r2, #2048
 4447 0044 E3D0     		beq	.L374
3440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           
 4448              		.loc 1 3440 0
 4449 0046 4FF40062 		mov	r2, #2048
 4450 004a 1A62     		str	r2, [r3, #32]
3446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 4451              		.loc 1 3446 0
 4452 004c 2268     		ldr	r2, [r4]
 4453 004e 1368     		ldr	r3, [r2]
 4454 0050 23F4D073 		bic	r3, r3, #416
 4455 0054 1360     		str	r3, [r2]
3448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4456              		.loc 1 3448 0
 4457 0056 2268     		ldr	r2, [r4]
 4458 0058 9368     		ldr	r3, [r2, #8]
 4459 005a 23F00103 		bic	r3, r3, #1
 4460 005e 9360     		str	r3, [r2, #8]
3450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 4461              		.loc 1 3450 0
 4462 0060 2023     		movs	r3, #32
ARM GAS  /tmp/cc3QCLpR.s 			page 163


 4463 0062 6367     		str	r3, [r4, #116]
3451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 4464              		.loc 1 3451 0
 4465 0064 A367     		str	r3, [r4, #120]
3452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           
 4466              		.loc 1 3452 0
 4467 0066 E367     		str	r3, [r4, #124]
3455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           
 4468              		.loc 1 3455 0
 4469 0068 0023     		movs	r3, #0
 4470 006a 84F87030 		strb	r3, [r4, #112]
3457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 4471              		.loc 1 3457 0
 4472 006e 0320     		movs	r0, #3
 4473 0070 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4474              	.LVL417:
 4475              	.L375:
3423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 4476              		.loc 1 3423 0
 4477 0074 2268     		ldr	r2, [r4]
 4478 0076 1368     		ldr	r3, [r2]
 4479 0078 23F4D073 		bic	r3, r3, #416
 4480 007c 1360     		str	r3, [r2]
3425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4481              		.loc 1 3425 0
 4482 007e 2268     		ldr	r2, [r4]
 4483 0080 9368     		ldr	r3, [r2, #8]
 4484 0082 23F00103 		bic	r3, r3, #1
 4485 0086 9360     		str	r3, [r2, #8]
3427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4486              		.loc 1 3427 0
 4487 0088 2023     		movs	r3, #32
 4488 008a 6367     		str	r3, [r4, #116]
3428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4489              		.loc 1 3428 0
 4490 008c A367     		str	r3, [r4, #120]
3430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4491              		.loc 1 3430 0
 4492 008e 0023     		movs	r3, #0
 4493 0090 84F87030 		strb	r3, [r4, #112]
3432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4494              		.loc 1 3432 0
 4495 0094 0320     		movs	r0, #3
 4496 0096 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4497              	.LVL418:
 4498              	.L380:
3462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4499              		.loc 1 3462 0
 4500 009a 0020     		movs	r0, #0
3463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4501              		.loc 1 3463 0
 4502 009c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4503              		.cfi_endproc
 4504              	.LFE175:
 4506              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 4507              		.align	1
 4508              		.global	HAL_UART_Transmit
ARM GAS  /tmp/cc3QCLpR.s 			page 164


 4509              		.syntax unified
 4510              		.thumb
 4511              		.thumb_func
 4512              		.fpu fpv4-sp-d16
 4514              	HAL_UART_Transmit:
 4515              	.LFB137:
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t  *pdata8bits;
 4516              		.loc 1 1049 0
 4517              		.cfi_startproc
 4518              		@ args = 0, pretend = 0, frame = 0
 4519              		@ frame_needed = 0, uses_anonymous_args = 0
 4520              	.LVL419:
 4521 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4522              	.LCFI31:
 4523              		.cfi_def_cfa_offset 24
 4524              		.cfi_offset 4, -24
 4525              		.cfi_offset 5, -20
 4526              		.cfi_offset 6, -16
 4527              		.cfi_offset 7, -12
 4528              		.cfi_offset 8, -8
 4529              		.cfi_offset 14, -4
 4530 0004 82B0     		sub	sp, sp, #8
 4531              	.LCFI32:
 4532              		.cfi_def_cfa_offset 32
 4533 0006 1E46     		mov	r6, r3
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4534              		.loc 1 1055 0
 4535 0008 436F     		ldr	r3, [r0, #116]
 4536              	.LVL420:
 4537 000a 202B     		cmp	r3, #32
 4538 000c 04D0     		beq	.L397
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4539              		.loc 1 1118 0
 4540 000e 0223     		movs	r3, #2
 4541              	.LVL421:
 4542              	.L382:
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4543              		.loc 1 1120 0
 4544 0010 1846     		mov	r0, r3
 4545 0012 02B0     		add	sp, sp, #8
 4546              	.LCFI33:
 4547              		.cfi_remember_state
 4548              		.cfi_def_cfa_offset 24
 4549              		@ sp needed
 4550 0014 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4551              	.LVL422:
 4552              	.L397:
 4553              	.LCFI34:
 4554              		.cfi_restore_state
 4555 0018 0446     		mov	r4, r0
 4556 001a 0D46     		mov	r5, r1
 4557 001c 9046     		mov	r8, r2
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4558              		.loc 1 1057 0
 4559 001e 0029     		cmp	r1, #0
 4560 0020 55D0     		beq	.L389
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/cc3QCLpR.s 			page 165


 4561              		.loc 1 1057 0 is_stmt 0 discriminator 1
 4562 0022 002A     		cmp	r2, #0
 4563 0024 55D0     		beq	.L390
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4564              		.loc 1 1062 0 is_stmt 1
 4565 0026 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 4566 002a 012B     		cmp	r3, #1
 4567 002c 01D1     		bne	.L398
 4568 002e 0223     		movs	r3, #2
 4569 0030 EEE7     		b	.L382
 4570              	.L398:
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4571              		.loc 1 1062 0 is_stmt 0 discriminator 2
 4572 0032 0123     		movs	r3, #1
 4573 0034 80F87030 		strb	r3, [r0, #112]
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 4574              		.loc 1 1064 0 is_stmt 1 discriminator 2
 4575 0038 0023     		movs	r3, #0
 4576 003a C367     		str	r3, [r0, #124]
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4577              		.loc 1 1065 0 discriminator 2
 4578 003c 2123     		movs	r3, #33
 4579 003e 4367     		str	r3, [r0, #116]
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4580              		.loc 1 1068 0 discriminator 2
 4581 0040 FFF7FEFF 		bl	HAL_GetTick
 4582              	.LVL423:
 4583 0044 0746     		mov	r7, r0
 4584              	.LVL424:
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 4585              		.loc 1 1070 0 discriminator 2
 4586 0046 A4F85080 		strh	r8, [r4, #80]	@ movhi
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4587              		.loc 1 1071 0 discriminator 2
 4588 004a A4F85280 		strh	r8, [r4, #82]	@ movhi
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4589              		.loc 1 1074 0 discriminator 2
 4590 004e A368     		ldr	r3, [r4, #8]
 4591 0050 B3F5805F 		cmp	r3, #4096
 4592 0054 05D0     		beq	.L399
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4593              		.loc 1 1082 0
 4594 0056 4FF00008 		mov	r8, #0
 4595              	.LVL425:
 4596              	.L383:
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4597              		.loc 1 1085 0
 4598 005a 0023     		movs	r3, #0
 4599 005c 84F87030 		strb	r3, [r4, #112]
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4600              		.loc 1 1087 0
 4601 0060 14E0     		b	.L384
 4602              	.LVL426:
 4603              	.L399:
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4604              		.loc 1 1074 0 discriminator 1
 4605 0062 2369     		ldr	r3, [r4, #16]
ARM GAS  /tmp/cc3QCLpR.s 			page 166


 4606 0064 13B1     		cbz	r3, .L393
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4607              		.loc 1 1082 0
 4608 0066 4FF00008 		mov	r8, #0
 4609 006a F6E7     		b	.L383
 4610              	.L393:
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4611              		.loc 1 1077 0
 4612 006c A846     		mov	r8, r5
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 4613              		.loc 1 1076 0
 4614 006e 0025     		movs	r5, #0
 4615              	.LVL427:
 4616 0070 F3E7     		b	.L383
 4617              	.LVL428:
 4618              	.L401:
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata16bits++;
 4619              		.loc 1 1095 0
 4620 0072 2268     		ldr	r2, [r4]
 4621 0074 38F8023B 		ldrh	r3, [r8], #2
 4622              	.LVL429:
 4623 0078 C3F30803 		ubfx	r3, r3, #0, #9
 4624 007c 1385     		strh	r3, [r2, #40]	@ movhi
 4625              	.LVL430:
 4626              	.L386:
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4627              		.loc 1 1103 0
 4628 007e B4F85230 		ldrh	r3, [r4, #82]
 4629 0082 9BB2     		uxth	r3, r3
 4630 0084 013B     		subs	r3, r3, #1
 4631 0086 9BB2     		uxth	r3, r3
 4632 0088 A4F85230 		strh	r3, [r4, #82]	@ movhi
 4633              	.L384:
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4634              		.loc 1 1087 0
 4635 008c B4F85230 		ldrh	r3, [r4, #82]
 4636 0090 9BB2     		uxth	r3, r3
 4637 0092 73B1     		cbz	r3, .L400
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4638              		.loc 1 1089 0
 4639 0094 0096     		str	r6, [sp]
 4640 0096 3B46     		mov	r3, r7
 4641 0098 0022     		movs	r2, #0
 4642 009a 8021     		movs	r1, #128
 4643 009c 2046     		mov	r0, r4
 4644 009e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4645              	.LVL431:
 4646 00a2 C0B9     		cbnz	r0, .L394
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4647              		.loc 1 1093 0
 4648 00a4 002D     		cmp	r5, #0
 4649 00a6 E4D0     		beq	.L401
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata8bits++;
 4650              		.loc 1 1100 0
 4651 00a8 2368     		ldr	r3, [r4]
 4652 00aa 15F8012B 		ldrb	r2, [r5], #1	@ zero_extendqisi2
 4653              	.LVL432:
ARM GAS  /tmp/cc3QCLpR.s 			page 167


 4654 00ae 1A85     		strh	r2, [r3, #40]	@ movhi
 4655              	.LVL433:
 4656 00b0 E5E7     		b	.L386
 4657              	.L400:
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4658              		.loc 1 1106 0
 4659 00b2 0096     		str	r6, [sp]
 4660 00b4 3B46     		mov	r3, r7
 4661 00b6 0022     		movs	r2, #0
 4662 00b8 4021     		movs	r1, #64
 4663 00ba 2046     		mov	r0, r4
 4664 00bc FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4665              	.LVL434:
 4666 00c0 0346     		mov	r3, r0
 4667 00c2 08B1     		cbz	r0, .L402
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4668              		.loc 1 1108 0
 4669 00c4 0323     		movs	r3, #3
 4670 00c6 A3E7     		b	.L382
 4671              	.L402:
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4672              		.loc 1 1112 0
 4673 00c8 2022     		movs	r2, #32
 4674 00ca 6267     		str	r2, [r4, #116]
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4675              		.loc 1 1114 0
 4676 00cc A0E7     		b	.L382
 4677              	.LVL435:
 4678              	.L389:
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4679              		.loc 1 1059 0
 4680 00ce 0123     		movs	r3, #1
 4681 00d0 9EE7     		b	.L382
 4682              	.L390:
 4683 00d2 0123     		movs	r3, #1
 4684 00d4 9CE7     		b	.L382
 4685              	.LVL436:
 4686              	.L394:
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4687              		.loc 1 1091 0
 4688 00d6 0323     		movs	r3, #3
 4689 00d8 9AE7     		b	.L382
 4690              		.cfi_endproc
 4691              	.LFE137:
 4693              		.section	.text.HAL_UART_Receive,"ax",%progbits
 4694              		.align	1
 4695              		.global	HAL_UART_Receive
 4696              		.syntax unified
 4697              		.thumb
 4698              		.thumb_func
 4699              		.fpu fpv4-sp-d16
 4701              	HAL_UART_Receive:
 4702              	.LFB138:
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t  *pdata8bits;
 4703              		.loc 1 1138 0
 4704              		.cfi_startproc
 4705              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc3QCLpR.s 			page 168


 4706              		@ frame_needed = 0, uses_anonymous_args = 0
 4707              	.LVL437:
 4708 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4709              	.LCFI35:
 4710              		.cfi_def_cfa_offset 28
 4711              		.cfi_offset 4, -28
 4712              		.cfi_offset 5, -24
 4713              		.cfi_offset 6, -20
 4714              		.cfi_offset 7, -16
 4715              		.cfi_offset 8, -12
 4716              		.cfi_offset 9, -8
 4717              		.cfi_offset 14, -4
 4718 0004 83B0     		sub	sp, sp, #12
 4719              	.LCFI36:
 4720              		.cfi_def_cfa_offset 40
 4721 0006 1E46     		mov	r6, r3
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4722              		.loc 1 1145 0
 4723 0008 836F     		ldr	r3, [r0, #120]
 4724              	.LVL438:
 4725 000a 202B     		cmp	r3, #32
 4726 000c 03D0     		beq	.L425
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4727              		.loc 1 1208 0
 4728 000e 0220     		movs	r0, #2
 4729              	.LVL439:
 4730              	.L404:
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4731              		.loc 1 1210 0
 4732 0010 03B0     		add	sp, sp, #12
 4733              	.LCFI37:
 4734              		.cfi_remember_state
 4735              		.cfi_def_cfa_offset 28
 4736              		@ sp needed
 4737 0012 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4738              	.LVL440:
 4739              	.L425:
 4740              	.LCFI38:
 4741              		.cfi_restore_state
 4742 0016 0446     		mov	r4, r0
 4743 0018 0D46     		mov	r5, r1
 4744 001a 9046     		mov	r8, r2
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4745              		.loc 1 1147 0
 4746 001c 0029     		cmp	r1, #0
 4747 001e 79D0     		beq	.L418
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4748              		.loc 1 1147 0 is_stmt 0 discriminator 1
 4749 0020 002A     		cmp	r2, #0
 4750 0022 79D0     		beq	.L419
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4751              		.loc 1 1152 0 is_stmt 1
 4752 0024 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 4753 0028 012B     		cmp	r3, #1
 4754 002a 01D1     		bne	.L426
 4755 002c 0220     		movs	r0, #2
 4756              	.LVL441:
ARM GAS  /tmp/cc3QCLpR.s 			page 169


 4757 002e EFE7     		b	.L404
 4758              	.LVL442:
 4759              	.L426:
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4760              		.loc 1 1152 0 is_stmt 0 discriminator 2
 4761 0030 0123     		movs	r3, #1
 4762 0032 80F87030 		strb	r3, [r0, #112]
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4763              		.loc 1 1154 0 is_stmt 1 discriminator 2
 4764 0036 0023     		movs	r3, #0
 4765 0038 C367     		str	r3, [r0, #124]
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4766              		.loc 1 1155 0 discriminator 2
 4767 003a 2223     		movs	r3, #34
 4768 003c 8367     		str	r3, [r0, #120]
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4769              		.loc 1 1158 0 discriminator 2
 4770 003e FFF7FEFF 		bl	HAL_GetTick
 4771              	.LVL443:
 4772 0042 0746     		mov	r7, r0
 4773              	.LVL444:
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 4774              		.loc 1 1160 0 discriminator 2
 4775 0044 A4F85880 		strh	r8, [r4, #88]	@ movhi
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4776              		.loc 1 1161 0 discriminator 2
 4777 0048 A4F85A80 		strh	r8, [r4, #90]	@ movhi
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4778              		.loc 1 1164 0 discriminator 2
 4779 004c A368     		ldr	r3, [r4, #8]
 4780 004e B3F5805F 		cmp	r3, #4096
 4781 0052 06D0     		beq	.L427
 4782 0054 A3B9     		cbnz	r3, .L408
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4783              		.loc 1 1164 0 is_stmt 0 discriminator 5
 4784 0056 2269     		ldr	r2, [r4, #16]
 4785 0058 72B9     		cbnz	r2, .L409
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4786              		.loc 1 1164 0 discriminator 7
 4787 005a FF22     		movs	r2, #255
 4788 005c A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4789 0060 14E0     		b	.L407
 4790              	.L427:
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4791              		.loc 1 1164 0 discriminator 1
 4792 0062 2269     		ldr	r2, [r4, #16]
 4793 0064 22B9     		cbnz	r2, .L406
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4794              		.loc 1 1164 0 discriminator 3
 4795 0066 40F2FF12 		movw	r2, #511
 4796 006a A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4797 006e 0DE0     		b	.L407
 4798              	.L406:
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4799              		.loc 1 1164 0 discriminator 4
 4800 0070 FF22     		movs	r2, #255
 4801 0072 A4F85C20 		strh	r2, [r4, #92]	@ movhi
ARM GAS  /tmp/cc3QCLpR.s 			page 170


 4802 0076 09E0     		b	.L407
 4803              	.L409:
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4804              		.loc 1 1164 0 discriminator 8
 4805 0078 7F22     		movs	r2, #127
 4806 007a A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4807 007e 05E0     		b	.L407
 4808              	.L408:
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4809              		.loc 1 1164 0 discriminator 6
 4810 0080 B3F1805F 		cmp	r3, #268435456
 4811 0084 0DD0     		beq	.L428
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4812              		.loc 1 1164 0 discriminator 10
 4813 0086 0022     		movs	r2, #0
 4814 0088 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4815              	.L407:
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4816              		.loc 1 1165 0 is_stmt 1
 4817 008c B4F85C80 		ldrh	r8, [r4, #92]
 4818              	.LVL445:
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4819              		.loc 1 1168 0
 4820 0090 B3F5805F 		cmp	r3, #4096
 4821 0094 0FD0     		beq	.L429
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4822              		.loc 1 1176 0
 4823 0096 4FF00009 		mov	r9, #0
 4824              	.LVL446:
 4825              	.L412:
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4826              		.loc 1 1179 0
 4827 009a 0023     		movs	r3, #0
 4828 009c 84F87030 		strb	r3, [r4, #112]
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4829              		.loc 1 1182 0
 4830 00a0 1EE0     		b	.L413
 4831              	.LVL447:
 4832              	.L428:
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4833              		.loc 1 1164 0 discriminator 9
 4834 00a2 2269     		ldr	r2, [r4, #16]
 4835 00a4 1AB9     		cbnz	r2, .L411
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4836              		.loc 1 1164 0 is_stmt 0 discriminator 11
 4837 00a6 7F22     		movs	r2, #127
 4838 00a8 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4839 00ac EEE7     		b	.L407
 4840              	.L411:
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4841              		.loc 1 1164 0 discriminator 12
 4842 00ae 3F22     		movs	r2, #63
 4843 00b0 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4844 00b4 EAE7     		b	.L407
 4845              	.LVL448:
 4846              	.L429:
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/cc3QCLpR.s 			page 171


 4847              		.loc 1 1168 0 is_stmt 1 discriminator 1
 4848 00b6 2369     		ldr	r3, [r4, #16]
 4849 00b8 13B1     		cbz	r3, .L422
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4850              		.loc 1 1176 0
 4851 00ba 4FF00009 		mov	r9, #0
 4852 00be ECE7     		b	.L412
 4853              	.L422:
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4854              		.loc 1 1171 0
 4855 00c0 A946     		mov	r9, r5
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 4856              		.loc 1 1170 0
 4857 00c2 0025     		movs	r5, #0
 4858              	.LVL449:
 4859 00c4 E9E7     		b	.L412
 4860              	.LVL450:
 4861              	.L431:
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata16bits++;
 4862              		.loc 1 1190 0
 4863 00c6 2368     		ldr	r3, [r4]
 4864 00c8 9B8C     		ldrh	r3, [r3, #36]
 4865 00ca 08EA0303 		and	r3, r8, r3
 4866 00ce 29F8023B 		strh	r3, [r9], #2	@ movhi
 4867              	.LVL451:
 4868              	.L415:
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4869              		.loc 1 1198 0
 4870 00d2 B4F85A30 		ldrh	r3, [r4, #90]
 4871 00d6 9BB2     		uxth	r3, r3
 4872 00d8 013B     		subs	r3, r3, #1
 4873 00da 9BB2     		uxth	r3, r3
 4874 00dc A4F85A30 		strh	r3, [r4, #90]	@ movhi
 4875              	.L413:
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4876              		.loc 1 1182 0
 4877 00e0 B4F85A30 		ldrh	r3, [r4, #90]
 4878 00e4 9BB2     		uxth	r3, r3
 4879 00e6 8BB1     		cbz	r3, .L430
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4880              		.loc 1 1184 0
 4881 00e8 0096     		str	r6, [sp]
 4882 00ea 3B46     		mov	r3, r7
 4883 00ec 0022     		movs	r2, #0
 4884 00ee 2021     		movs	r1, #32
 4885 00f0 2046     		mov	r0, r4
 4886 00f2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4887              	.LVL452:
 4888 00f6 88B9     		cbnz	r0, .L423
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4889              		.loc 1 1188 0
 4890 00f8 002D     		cmp	r5, #0
 4891 00fa E4D0     		beq	.L431
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata8bits++;
 4892              		.loc 1 1195 0
 4893 00fc 2368     		ldr	r3, [r4]
 4894 00fe 9A8C     		ldrh	r2, [r3, #36]
ARM GAS  /tmp/cc3QCLpR.s 			page 172


 4895 0100 5FFA88F3 		uxtb	r3, r8
 4896 0104 1340     		ands	r3, r3, r2
 4897 0106 05F8013B 		strb	r3, [r5], #1
 4898              	.LVL453:
 4899 010a E2E7     		b	.L415
 4900              	.L430:
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4901              		.loc 1 1202 0
 4902 010c 2023     		movs	r3, #32
 4903 010e A367     		str	r3, [r4, #120]
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4904              		.loc 1 1204 0
 4905 0110 0020     		movs	r0, #0
 4906 0112 7DE7     		b	.L404
 4907              	.LVL454:
 4908              	.L418:
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4909              		.loc 1 1149 0
 4910 0114 0120     		movs	r0, #1
 4911              	.LVL455:
 4912 0116 7BE7     		b	.L404
 4913              	.LVL456:
 4914              	.L419:
 4915 0118 0120     		movs	r0, #1
 4916              	.LVL457:
 4917 011a 79E7     		b	.L404
 4918              	.LVL458:
 4919              	.L423:
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4920              		.loc 1 1186 0
 4921 011c 0320     		movs	r0, #3
 4922 011e 77E7     		b	.L404
 4923              		.cfi_endproc
 4924              	.LFE138:
 4926              		.section	.text.UART_CheckIdleState,"ax",%progbits
 4927              		.align	1
 4928              		.global	UART_CheckIdleState
 4929              		.syntax unified
 4930              		.thumb
 4931              		.thumb_func
 4932              		.fpu fpv4-sp-d16
 4934              	UART_CheckIdleState:
 4935              	.LFB174:
3359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
 4936              		.loc 1 3359 0
 4937              		.cfi_startproc
 4938              		@ args = 0, pretend = 0, frame = 0
 4939              		@ frame_needed = 0, uses_anonymous_args = 0
 4940              	.LVL459:
 4941 0000 30B5     		push	{r4, r5, lr}
 4942              	.LCFI39:
 4943              		.cfi_def_cfa_offset 12
 4944              		.cfi_offset 4, -12
 4945              		.cfi_offset 5, -8
 4946              		.cfi_offset 14, -4
 4947 0002 83B0     		sub	sp, sp, #12
 4948              	.LCFI40:
ARM GAS  /tmp/cc3QCLpR.s 			page 173


 4949              		.cfi_def_cfa_offset 24
 4950 0004 0446     		mov	r4, r0
3363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4951              		.loc 1 3363 0
 4952 0006 0023     		movs	r3, #0
 4953 0008 C367     		str	r3, [r0, #124]
3366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4954              		.loc 1 3366 0
 4955 000a FFF7FEFF 		bl	HAL_GetTick
 4956              	.LVL460:
 4957 000e 0546     		mov	r5, r0
 4958              	.LVL461:
3369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4959              		.loc 1 3369 0
 4960 0010 2368     		ldr	r3, [r4]
 4961 0012 1B68     		ldr	r3, [r3]
 4962 0014 13F0080F 		tst	r3, #8
 4963 0018 0CD1     		bne	.L439
 4964              	.LVL462:
 4965              	.L433:
3380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4966              		.loc 1 3380 0
 4967 001a 2368     		ldr	r3, [r4]
 4968 001c 1B68     		ldr	r3, [r3]
 4969 001e 13F0040F 		tst	r3, #4
 4970 0022 15D1     		bne	.L440
 4971              	.L435:
3391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4972              		.loc 1 3391 0
 4973 0024 2023     		movs	r3, #32
 4974 0026 6367     		str	r3, [r4, #116]
3392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4975              		.loc 1 3392 0
 4976 0028 A367     		str	r3, [r4, #120]
3394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4977              		.loc 1 3394 0
 4978 002a 0020     		movs	r0, #0
 4979 002c 84F87000 		strb	r0, [r4, #112]
 4980              	.L434:
3397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4981              		.loc 1 3397 0
 4982 0030 03B0     		add	sp, sp, #12
 4983              	.LCFI41:
 4984              		.cfi_remember_state
 4985              		.cfi_def_cfa_offset 12
 4986              		@ sp needed
 4987 0032 30BD     		pop	{r4, r5, pc}
 4988              	.LVL463:
 4989              	.L439:
 4990              	.LCFI42:
 4991              		.cfi_restore_state
3372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4992              		.loc 1 3372 0
 4993 0034 6FF07E43 		mvn	r3, #-33554432
 4994 0038 0093     		str	r3, [sp]
 4995 003a 0346     		mov	r3, r0
 4996 003c 0022     		movs	r2, #0
ARM GAS  /tmp/cc3QCLpR.s 			page 174


 4997 003e 4FF40011 		mov	r1, #2097152
 4998 0042 2046     		mov	r0, r4
 4999              	.LVL464:
 5000 0044 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5001              	.LVL465:
 5002 0048 0028     		cmp	r0, #0
 5003 004a E6D0     		beq	.L433
3375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 5004              		.loc 1 3375 0
 5005 004c 0320     		movs	r0, #3
 5006 004e EFE7     		b	.L434
 5007              	.L440:
3383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 5008              		.loc 1 3383 0
 5009 0050 6FF07E43 		mvn	r3, #-33554432
 5010 0054 0093     		str	r3, [sp]
 5011 0056 2B46     		mov	r3, r5
 5012 0058 0022     		movs	r2, #0
 5013 005a 4FF48001 		mov	r1, #4194304
 5014 005e 2046     		mov	r0, r4
 5015 0060 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5016              	.LVL466:
 5017 0064 0028     		cmp	r0, #0
 5018 0066 DDD0     		beq	.L435
3386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 5019              		.loc 1 3386 0
 5020 0068 0320     		movs	r0, #3
 5021 006a E1E7     		b	.L434
 5022              		.cfi_endproc
 5023              	.LFE174:
 5025              		.section	.text.HAL_UART_Init,"ax",%progbits
 5026              		.align	1
 5027              		.global	HAL_UART_Init
 5028              		.syntax unified
 5029              		.thumb
 5030              		.thumb_func
 5031              		.fpu fpv4-sp-d16
 5033              	HAL_UART_Init:
 5034              	.LFB130:
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 5035              		.loc 1 309 0
 5036              		.cfi_startproc
 5037              		@ args = 0, pretend = 0, frame = 0
 5038              		@ frame_needed = 0, uses_anonymous_args = 0
 5039              	.LVL467:
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5040              		.loc 1 311 0
 5041 0000 68B3     		cbz	r0, .L445
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 5042              		.loc 1 309 0
 5043 0002 10B5     		push	{r4, lr}
 5044              	.LCFI43:
 5045              		.cfi_def_cfa_offset 8
 5046              		.cfi_offset 4, -8
 5047              		.cfi_offset 14, -4
 5048 0004 0446     		mov	r4, r0
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/cc3QCLpR.s 			page 175


 5049              		.loc 1 327 0
 5050 0006 436F     		ldr	r3, [r0, #116]
 5051 0008 03B3     		cbz	r3, .L450
 5052              	.LVL468:
 5053              	.L443:
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5054              		.loc 1 348 0
 5055 000a 2423     		movs	r3, #36
 5056 000c 6367     		str	r3, [r4, #116]
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5057              		.loc 1 350 0
 5058 000e 2268     		ldr	r2, [r4]
 5059 0010 1368     		ldr	r3, [r2]
 5060 0012 23F00103 		bic	r3, r3, #1
 5061 0016 1360     		str	r3, [r2]
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5062              		.loc 1 353 0
 5063 0018 2046     		mov	r0, r4
 5064 001a FFF7FEFF 		bl	UART_SetConfig
 5065              	.LVL469:
 5066 001e 0128     		cmp	r0, #1
 5067 0020 1FD0     		beq	.L442
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5068              		.loc 1 358 0
 5069 0022 636A     		ldr	r3, [r4, #36]
 5070 0024 BBB9     		cbnz	r3, .L451
 5071              	.L444:
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 5072              		.loc 1 366 0
 5073 0026 2268     		ldr	r2, [r4]
 5074 0028 5368     		ldr	r3, [r2, #4]
 5075 002a 23F49043 		bic	r3, r3, #18432
 5076 002e 5360     		str	r3, [r2, #4]
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5077              		.loc 1 367 0
 5078 0030 2268     		ldr	r2, [r4]
 5079 0032 9368     		ldr	r3, [r2, #8]
 5080 0034 23F02A03 		bic	r3, r3, #42
 5081 0038 9360     		str	r3, [r2, #8]
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5082              		.loc 1 369 0
 5083 003a 2268     		ldr	r2, [r4]
 5084 003c 1368     		ldr	r3, [r2]
 5085 003e 43F00103 		orr	r3, r3, #1
 5086 0042 1360     		str	r3, [r2]
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5087              		.loc 1 372 0
 5088 0044 2046     		mov	r0, r4
 5089 0046 FFF7FEFF 		bl	UART_CheckIdleState
 5090              	.LVL470:
 5091 004a 10BD     		pop	{r4, pc}
 5092              	.LVL471:
 5093              	.L450:
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5094              		.loc 1 330 0
 5095 004c 80F87030 		strb	r3, [r0, #112]
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
ARM GAS  /tmp/cc3QCLpR.s 			page 176


 5096              		.loc 1 344 0
 5097 0050 FFF7FEFF 		bl	HAL_UART_MspInit
 5098              	.LVL472:
 5099 0054 D9E7     		b	.L443
 5100              	.L451:
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5101              		.loc 1 360 0
 5102 0056 2046     		mov	r0, r4
 5103 0058 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5104              	.LVL473:
 5105 005c E3E7     		b	.L444
 5106              	.LVL474:
 5107              	.L445:
 5108              	.LCFI44:
 5109              		.cfi_def_cfa_offset 0
 5110              		.cfi_restore 4
 5111              		.cfi_restore 14
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5112              		.loc 1 313 0
 5113 005e 0120     		movs	r0, #1
 5114              	.LVL475:
 5115 0060 7047     		bx	lr
 5116              	.LVL476:
 5117              	.L442:
 5118              	.LCFI45:
 5119              		.cfi_def_cfa_offset 8
 5120              		.cfi_offset 4, -8
 5121              		.cfi_offset 14, -4
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5122              		.loc 1 373 0
 5123 0062 10BD     		pop	{r4, pc}
 5124              		.cfi_endproc
 5125              	.LFE130:
 5127              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 5128              		.align	1
 5129              		.global	HAL_HalfDuplex_Init
 5130              		.syntax unified
 5131              		.thumb
 5132              		.thumb_func
 5133              		.fpu fpv4-sp-d16
 5135              	HAL_HalfDuplex_Init:
 5136              	.LFB131:
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 5137              		.loc 1 382 0
 5138              		.cfi_startproc
 5139              		@ args = 0, pretend = 0, frame = 0
 5140              		@ frame_needed = 0, uses_anonymous_args = 0
 5141              	.LVL477:
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5142              		.loc 1 384 0
 5143 0000 0028     		cmp	r0, #0
 5144 0002 32D0     		beq	.L456
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 5145              		.loc 1 382 0
 5146 0004 10B5     		push	{r4, lr}
 5147              	.LCFI46:
 5148              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc3QCLpR.s 			page 177


 5149              		.cfi_offset 4, -8
 5150              		.cfi_offset 14, -4
 5151 0006 0446     		mov	r4, r0
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5152              		.loc 1 392 0
 5153 0008 436F     		ldr	r3, [r0, #116]
 5154 000a 2BB3     		cbz	r3, .L461
 5155              	.LVL478:
 5156              	.L454:
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5157              		.loc 1 413 0
 5158 000c 2423     		movs	r3, #36
 5159 000e 6367     		str	r3, [r4, #116]
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5160              		.loc 1 415 0
 5161 0010 2268     		ldr	r2, [r4]
 5162 0012 1368     		ldr	r3, [r2]
 5163 0014 23F00103 		bic	r3, r3, #1
 5164 0018 1360     		str	r3, [r2]
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5165              		.loc 1 418 0
 5166 001a 2046     		mov	r0, r4
 5167 001c FFF7FEFF 		bl	UART_SetConfig
 5168              	.LVL479:
 5169 0020 0128     		cmp	r0, #1
 5170 0022 24D0     		beq	.L453
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5171              		.loc 1 423 0
 5172 0024 636A     		ldr	r3, [r4, #36]
 5173 0026 E3B9     		cbnz	r3, .L462
 5174              	.L455:
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 5175              		.loc 1 431 0
 5176 0028 2268     		ldr	r2, [r4]
 5177 002a 5368     		ldr	r3, [r2, #4]
 5178 002c 23F49043 		bic	r3, r3, #18432
 5179 0030 5360     		str	r3, [r2, #4]
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5180              		.loc 1 432 0
 5181 0032 2268     		ldr	r2, [r4]
 5182 0034 9368     		ldr	r3, [r2, #8]
 5183 0036 23F02203 		bic	r3, r3, #34
 5184 003a 9360     		str	r3, [r2, #8]
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5185              		.loc 1 435 0
 5186 003c 2268     		ldr	r2, [r4]
 5187 003e 9368     		ldr	r3, [r2, #8]
 5188 0040 43F00803 		orr	r3, r3, #8
 5189 0044 9360     		str	r3, [r2, #8]
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5190              		.loc 1 437 0
 5191 0046 2268     		ldr	r2, [r4]
 5192 0048 1368     		ldr	r3, [r2]
 5193 004a 43F00103 		orr	r3, r3, #1
 5194 004e 1360     		str	r3, [r2]
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5195              		.loc 1 440 0
ARM GAS  /tmp/cc3QCLpR.s 			page 178


 5196 0050 2046     		mov	r0, r4
 5197 0052 FFF7FEFF 		bl	UART_CheckIdleState
 5198              	.LVL480:
 5199 0056 10BD     		pop	{r4, pc}
 5200              	.LVL481:
 5201              	.L461:
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5202              		.loc 1 395 0
 5203 0058 80F87030 		strb	r3, [r0, #112]
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5204              		.loc 1 409 0
 5205 005c FFF7FEFF 		bl	HAL_UART_MspInit
 5206              	.LVL482:
 5207 0060 D4E7     		b	.L454
 5208              	.L462:
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5209              		.loc 1 425 0
 5210 0062 2046     		mov	r0, r4
 5211 0064 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5212              	.LVL483:
 5213 0068 DEE7     		b	.L455
 5214              	.LVL484:
 5215              	.L456:
 5216              	.LCFI47:
 5217              		.cfi_def_cfa_offset 0
 5218              		.cfi_restore 4
 5219              		.cfi_restore 14
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5220              		.loc 1 386 0
 5221 006a 0120     		movs	r0, #1
 5222              	.LVL485:
 5223 006c 7047     		bx	lr
 5224              	.LVL486:
 5225              	.L453:
 5226              	.LCFI48:
 5227              		.cfi_def_cfa_offset 8
 5228              		.cfi_offset 4, -8
 5229              		.cfi_offset 14, -4
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5230              		.loc 1 441 0
 5231 006e 10BD     		pop	{r4, pc}
 5232              		.cfi_endproc
 5233              	.LFE131:
 5235              		.section	.text.HAL_LIN_Init,"ax",%progbits
 5236              		.align	1
 5237              		.global	HAL_LIN_Init
 5238              		.syntax unified
 5239              		.thumb
 5240              		.thumb_func
 5241              		.fpu fpv4-sp-d16
 5243              	HAL_LIN_Init:
 5244              	.LFB132:
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 5245              		.loc 1 455 0
 5246              		.cfi_startproc
 5247              		@ args = 0, pretend = 0, frame = 0
 5248              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc3QCLpR.s 			page 179


 5249              	.LVL487:
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5250              		.loc 1 457 0
 5251 0000 0028     		cmp	r0, #0
 5252 0002 41D0     		beq	.L467
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 5253              		.loc 1 455 0
 5254 0004 38B5     		push	{r3, r4, r5, lr}
 5255              	.LCFI49:
 5256              		.cfi_def_cfa_offset 16
 5257              		.cfi_offset 3, -16
 5258              		.cfi_offset 4, -12
 5259              		.cfi_offset 5, -8
 5260              		.cfi_offset 14, -4
 5261 0006 0446     		mov	r4, r0
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5262              		.loc 1 468 0
 5263 0008 C369     		ldr	r3, [r0, #28]
 5264 000a B3F5004F 		cmp	r3, #32768
 5265 000e 3DD0     		beq	.L468
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5266              		.loc 1 473 0
 5267 0010 8368     		ldr	r3, [r0, #8]
 5268 0012 002B     		cmp	r3, #0
 5269 0014 3CD1     		bne	.L469
 5270 0016 0D46     		mov	r5, r1
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5271              		.loc 1 478 0
 5272 0018 436F     		ldr	r3, [r0, #116]
 5273 001a 002B     		cmp	r3, #0
 5274 001c 2BD0     		beq	.L474
 5275              	.LVL488:
 5276              	.L465:
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5277              		.loc 1 499 0
 5278 001e 2423     		movs	r3, #36
 5279 0020 6367     		str	r3, [r4, #116]
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5280              		.loc 1 501 0
 5281 0022 2268     		ldr	r2, [r4]
 5282 0024 1368     		ldr	r3, [r2]
 5283 0026 23F00103 		bic	r3, r3, #1
 5284 002a 1360     		str	r3, [r2]
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5285              		.loc 1 504 0
 5286 002c 2046     		mov	r0, r4
 5287 002e FFF7FEFF 		bl	UART_SetConfig
 5288              	.LVL489:
 5289 0032 0128     		cmp	r0, #1
 5290 0034 2DD0     		beq	.L464
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5291              		.loc 1 509 0
 5292 0036 636A     		ldr	r3, [r4, #36]
 5293 0038 13BB     		cbnz	r3, .L475
 5294              	.L466:
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 5295              		.loc 1 517 0
ARM GAS  /tmp/cc3QCLpR.s 			page 180


 5296 003a 2268     		ldr	r2, [r4]
 5297 003c 5368     		ldr	r3, [r2, #4]
 5298 003e 23F40063 		bic	r3, r3, #2048
 5299 0042 5360     		str	r3, [r2, #4]
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5300              		.loc 1 518 0
 5301 0044 2268     		ldr	r2, [r4]
 5302 0046 9368     		ldr	r3, [r2, #8]
 5303 0048 23F02A03 		bic	r3, r3, #42
 5304 004c 9360     		str	r3, [r2, #8]
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5305              		.loc 1 521 0
 5306 004e 2268     		ldr	r2, [r4]
 5307 0050 5368     		ldr	r3, [r2, #4]
 5308 0052 43F48043 		orr	r3, r3, #16384
 5309 0056 5360     		str	r3, [r2, #4]
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5310              		.loc 1 524 0
 5311 0058 2268     		ldr	r2, [r4]
 5312 005a 5368     		ldr	r3, [r2, #4]
 5313 005c 23F02003 		bic	r3, r3, #32
 5314 0060 2B43     		orrs	r3, r3, r5
 5315 0062 5360     		str	r3, [r2, #4]
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5316              		.loc 1 526 0
 5317 0064 2268     		ldr	r2, [r4]
 5318 0066 1368     		ldr	r3, [r2]
 5319 0068 43F00103 		orr	r3, r3, #1
 5320 006c 1360     		str	r3, [r2]
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5321              		.loc 1 529 0
 5322 006e 2046     		mov	r0, r4
 5323 0070 FFF7FEFF 		bl	UART_CheckIdleState
 5324              	.LVL490:
 5325 0074 38BD     		pop	{r3, r4, r5, pc}
 5326              	.LVL491:
 5327              	.L474:
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5328              		.loc 1 481 0
 5329 0076 80F87030 		strb	r3, [r0, #112]
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5330              		.loc 1 495 0
 5331 007a FFF7FEFF 		bl	HAL_UART_MspInit
 5332              	.LVL492:
 5333 007e CEE7     		b	.L465
 5334              	.L475:
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5335              		.loc 1 511 0
 5336 0080 2046     		mov	r0, r4
 5337 0082 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5338              	.LVL493:
 5339 0086 D8E7     		b	.L466
 5340              	.LVL494:
 5341              	.L467:
 5342              	.LCFI50:
 5343              		.cfi_def_cfa_offset 0
 5344              		.cfi_restore 3
ARM GAS  /tmp/cc3QCLpR.s 			page 181


 5345              		.cfi_restore 4
 5346              		.cfi_restore 5
 5347              		.cfi_restore 14
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5348              		.loc 1 459 0
 5349 0088 0120     		movs	r0, #1
 5350              	.LVL495:
 5351 008a 7047     		bx	lr
 5352              	.LVL496:
 5353              	.L468:
 5354              	.LCFI51:
 5355              		.cfi_def_cfa_offset 16
 5356              		.cfi_offset 3, -16
 5357              		.cfi_offset 4, -12
 5358              		.cfi_offset 5, -8
 5359              		.cfi_offset 14, -4
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5360              		.loc 1 470 0
 5361 008c 0120     		movs	r0, #1
 5362              	.LVL497:
 5363 008e 38BD     		pop	{r3, r4, r5, pc}
 5364              	.LVL498:
 5365              	.L469:
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5366              		.loc 1 475 0
 5367 0090 0120     		movs	r0, #1
 5368              	.LVL499:
 5369              	.L464:
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5370              		.loc 1 530 0
 5371 0092 38BD     		pop	{r3, r4, r5, pc}
 5372              		.cfi_endproc
 5373              	.LFE132:
 5375              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 5376              		.align	1
 5377              		.global	HAL_MultiProcessor_Init
 5378              		.syntax unified
 5379              		.thumb
 5380              		.thumb_func
 5381              		.fpu fpv4-sp-d16
 5383              	HAL_MultiProcessor_Init:
 5384              	.LFB133:
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 5385              		.loc 1 552 0
 5386              		.cfi_startproc
 5387              		@ args = 0, pretend = 0, frame = 0
 5388              		@ frame_needed = 0, uses_anonymous_args = 0
 5389              	.LVL500:
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5390              		.loc 1 554 0
 5391 0000 0028     		cmp	r0, #0
 5392 0002 40D0     		beq	.L481
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 5393              		.loc 1 552 0
 5394 0004 70B5     		push	{r4, r5, r6, lr}
 5395              	.LCFI52:
 5396              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc3QCLpR.s 			page 182


 5397              		.cfi_offset 4, -16
 5398              		.cfi_offset 5, -12
 5399              		.cfi_offset 6, -8
 5400              		.cfi_offset 14, -4
 5401 0006 0446     		mov	r4, r0
 5402 0008 1546     		mov	r5, r2
 5403 000a 0E46     		mov	r6, r1
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5404              		.loc 1 562 0
 5405 000c 436F     		ldr	r3, [r0, #116]
 5406 000e 4BB3     		cbz	r3, .L486
 5407              	.LVL501:
 5408              	.L478:
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5409              		.loc 1 583 0
 5410 0010 2423     		movs	r3, #36
 5411 0012 6367     		str	r3, [r4, #116]
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5412              		.loc 1 585 0
 5413 0014 2268     		ldr	r2, [r4]
 5414 0016 1368     		ldr	r3, [r2]
 5415 0018 23F00103 		bic	r3, r3, #1
 5416 001c 1360     		str	r3, [r2]
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5417              		.loc 1 588 0
 5418 001e 2046     		mov	r0, r4
 5419 0020 FFF7FEFF 		bl	UART_SetConfig
 5420              	.LVL502:
 5421 0024 0128     		cmp	r0, #1
 5422 0026 30D0     		beq	.L477
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5423              		.loc 1 593 0
 5424 0028 636A     		ldr	r3, [r4, #36]
 5425 002a 03BB     		cbnz	r3, .L487
 5426              	.L479:
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 5427              		.loc 1 601 0
 5428 002c 2268     		ldr	r2, [r4]
 5429 002e 5368     		ldr	r3, [r2, #4]
 5430 0030 23F49043 		bic	r3, r3, #18432
 5431 0034 5360     		str	r3, [r2, #4]
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5432              		.loc 1 602 0
 5433 0036 2268     		ldr	r2, [r4]
 5434 0038 9368     		ldr	r3, [r2, #8]
 5435 003a 23F02A03 		bic	r3, r3, #42
 5436 003e 9360     		str	r3, [r2, #8]
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5437              		.loc 1 604 0
 5438 0040 B5F5006F 		cmp	r5, #2048
 5439 0044 17D0     		beq	.L488
 5440              	.L480:
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5441              		.loc 1 611 0
 5442 0046 2368     		ldr	r3, [r4]
 5443 0048 1A68     		ldr	r2, [r3]
 5444 004a 22F40062 		bic	r2, r2, #2048
ARM GAS  /tmp/cc3QCLpR.s 			page 183


 5445 004e 1543     		orrs	r5, r5, r2
 5446              	.LVL503:
 5447 0050 1D60     		str	r5, [r3]
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5448              		.loc 1 613 0
 5449 0052 2268     		ldr	r2, [r4]
 5450 0054 1368     		ldr	r3, [r2]
 5451 0056 43F00103 		orr	r3, r3, #1
 5452 005a 1360     		str	r3, [r2]
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5453              		.loc 1 616 0
 5454 005c 2046     		mov	r0, r4
 5455 005e FFF7FEFF 		bl	UART_CheckIdleState
 5456              	.LVL504:
 5457 0062 70BD     		pop	{r4, r5, r6, pc}
 5458              	.LVL505:
 5459              	.L486:
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5460              		.loc 1 565 0
 5461 0064 80F87030 		strb	r3, [r0, #112]
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5462              		.loc 1 579 0
 5463 0068 FFF7FEFF 		bl	HAL_UART_MspInit
 5464              	.LVL506:
 5465 006c D0E7     		b	.L478
 5466              	.L487:
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5467              		.loc 1 595 0
 5468 006e 2046     		mov	r0, r4
 5469 0070 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5470              	.LVL507:
 5471 0074 DAE7     		b	.L479
 5472              	.L488:
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5473              		.loc 1 607 0
 5474 0076 2368     		ldr	r3, [r4]
 5475 0078 5968     		ldr	r1, [r3, #4]
 5476 007a 21F07F41 		bic	r1, r1, #-16777216
 5477 007e 41EA0666 		orr	r6, r1, r6, lsl #24
 5478 0082 5E60     		str	r6, [r3, #4]
 5479 0084 DFE7     		b	.L480
 5480              	.LVL508:
 5481              	.L481:
 5482              	.LCFI53:
 5483              		.cfi_def_cfa_offset 0
 5484              		.cfi_restore 4
 5485              		.cfi_restore 5
 5486              		.cfi_restore 6
 5487              		.cfi_restore 14
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5488              		.loc 1 556 0
 5489 0086 0120     		movs	r0, #1
 5490              	.LVL509:
 5491 0088 7047     		bx	lr
 5492              	.LVL510:
 5493              	.L477:
 5494              	.LCFI54:
ARM GAS  /tmp/cc3QCLpR.s 			page 184


 5495              		.cfi_def_cfa_offset 16
 5496              		.cfi_offset 4, -16
 5497              		.cfi_offset 5, -12
 5498              		.cfi_offset 6, -8
 5499              		.cfi_offset 14, -4
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5500              		.loc 1 617 0
 5501 008a 70BD     		pop	{r4, r5, r6, pc}
 5502              		.cfi_endproc
 5503              	.LFE133:
 5505              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 5506              		.align	1
 5507              		.global	HAL_MultiProcessor_EnableMuteMode
 5508              		.syntax unified
 5509              		.thumb
 5510              		.thumb_func
 5511              		.fpu fpv4-sp-d16
 5513              	HAL_MultiProcessor_EnableMuteMode:
 5514              	.LFB164:
2772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 5515              		.loc 1 2772 0
 5516              		.cfi_startproc
 5517              		@ args = 0, pretend = 0, frame = 0
 5518              		@ frame_needed = 0, uses_anonymous_args = 0
 5519              	.LVL511:
 5520 0000 08B5     		push	{r3, lr}
 5521              	.LCFI55:
 5522              		.cfi_def_cfa_offset 8
 5523              		.cfi_offset 3, -8
 5524              		.cfi_offset 14, -4
2773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5525              		.loc 1 2773 0
 5526 0002 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 5527 0006 012B     		cmp	r3, #1
 5528 0008 01D1     		bne	.L493
 5529 000a 0220     		movs	r0, #2
 5530              	.LVL512:
2783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5531              		.loc 1 2783 0
 5532 000c 08BD     		pop	{r3, pc}
 5533              	.LVL513:
 5534              	.L493:
2773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5535              		.loc 1 2773 0 discriminator 2
 5536 000e 0123     		movs	r3, #1
 5537 0010 80F87030 		strb	r3, [r0, #112]
2775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5538              		.loc 1 2775 0 discriminator 2
 5539 0014 2423     		movs	r3, #36
 5540 0016 4367     		str	r3, [r0, #116]
2778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5541              		.loc 1 2778 0 discriminator 2
 5542 0018 0268     		ldr	r2, [r0]
 5543 001a 1368     		ldr	r3, [r2]
 5544 001c 43F40053 		orr	r3, r3, #8192
 5545 0020 1360     		str	r3, [r2]
2780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 185


 5546              		.loc 1 2780 0 discriminator 2
 5547 0022 2023     		movs	r3, #32
 5548 0024 4367     		str	r3, [r0, #116]
2782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5549              		.loc 1 2782 0 discriminator 2
 5550 0026 FFF7FEFF 		bl	UART_CheckIdleState
 5551              	.LVL514:
 5552 002a 08BD     		pop	{r3, pc}
 5553              		.cfi_endproc
 5554              	.LFE164:
 5556              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 5557              		.align	1
 5558              		.global	HAL_MultiProcessor_DisableMuteMode
 5559              		.syntax unified
 5560              		.thumb
 5561              		.thumb_func
 5562              		.fpu fpv4-sp-d16
 5564              	HAL_MultiProcessor_DisableMuteMode:
 5565              	.LFB165:
2792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 5566              		.loc 1 2792 0
 5567              		.cfi_startproc
 5568              		@ args = 0, pretend = 0, frame = 0
 5569              		@ frame_needed = 0, uses_anonymous_args = 0
 5570              	.LVL515:
 5571 0000 08B5     		push	{r3, lr}
 5572              	.LCFI56:
 5573              		.cfi_def_cfa_offset 8
 5574              		.cfi_offset 3, -8
 5575              		.cfi_offset 14, -4
2793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5576              		.loc 1 2793 0
 5577 0002 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 5578 0006 012B     		cmp	r3, #1
 5579 0008 01D1     		bne	.L498
 5580 000a 0220     		movs	r0, #2
 5581              	.LVL516:
2803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5582              		.loc 1 2803 0
 5583 000c 08BD     		pop	{r3, pc}
 5584              	.LVL517:
 5585              	.L498:
2793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5586              		.loc 1 2793 0 discriminator 2
 5587 000e 0123     		movs	r3, #1
 5588 0010 80F87030 		strb	r3, [r0, #112]
2795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5589              		.loc 1 2795 0 discriminator 2
 5590 0014 2423     		movs	r3, #36
 5591 0016 4367     		str	r3, [r0, #116]
2798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5592              		.loc 1 2798 0 discriminator 2
 5593 0018 0268     		ldr	r2, [r0]
 5594 001a 1368     		ldr	r3, [r2]
 5595 001c 23F40053 		bic	r3, r3, #8192
 5596 0020 1360     		str	r3, [r2]
2800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/cc3QCLpR.s 			page 186


 5597              		.loc 1 2800 0 discriminator 2
 5598 0022 2023     		movs	r3, #32
 5599 0024 4367     		str	r3, [r0, #116]
2802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5600              		.loc 1 2802 0 discriminator 2
 5601 0026 FFF7FEFF 		bl	UART_CheckIdleState
 5602              	.LVL518:
 5603 002a 08BD     		pop	{r3, pc}
 5604              		.cfi_endproc
 5605              	.LFE165:
 5607              		.text
 5608              	.Letext0:
 5609              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 5610              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 5611              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 5612              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 5613              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 5614              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 5615              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 5616              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 5617              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 5618              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 5619              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 5620              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 5621              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart_ex.h"
ARM GAS  /tmp/cc3QCLpR.s 			page 187


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_uart.c
     /tmp/cc3QCLpR.s:18     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/cc3QCLpR.s:24     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/cc3QCLpR.s:46     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/cc3QCLpR.s:52     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/cc3QCLpR.s:81     .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/cc3QCLpR.s:87     .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/cc3QCLpR.s:139    .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/cc3QCLpR.s:145    .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/cc3QCLpR.s:202    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cc3QCLpR.s:209    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cc3QCLpR.s:222    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cc3QCLpR.s:229    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cc3QCLpR.s:242    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/cc3QCLpR.s:249    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/cc3QCLpR.s:315    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/cc3QCLpR.s:322    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/cc3QCLpR.s:419    .text.HAL_UART_Transmit_IT:0000000000000068 $d
     /tmp/cc3QCLpR.s:425    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/cc3QCLpR.s:432    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/cc3QCLpR.s:590    .text.HAL_UART_Receive_IT:00000000000000cc $d
     /tmp/cc3QCLpR.s:1674   .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/cc3QCLpR.s:1762   .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/cc3QCLpR.s:596    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/cc3QCLpR.s:603    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/cc3QCLpR.s:732    .text.HAL_UART_Transmit_DMA:0000000000000098 $d
     /tmp/cc3QCLpR.s:1513   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/cc3QCLpR.s:1624   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/cc3QCLpR.s:1979   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/cc3QCLpR.s:739    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/cc3QCLpR.s:746    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/cc3QCLpR.s:879    .text.HAL_UART_Receive_DMA:00000000000000a0 $d
     /tmp/cc3QCLpR.s:1851   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/cc3QCLpR.s:1929   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/cc3QCLpR.s:886    .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/cc3QCLpR.s:893    .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/cc3QCLpR.s:992    .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/cc3QCLpR.s:999    .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/cc3QCLpR.s:1070   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/cc3QCLpR.s:1077   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/cc3QCLpR.s:1197   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/cc3QCLpR.s:1204   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/cc3QCLpR.s:1326   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/cc3QCLpR.s:1333   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/cc3QCLpR.s:1399   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/cc3QCLpR.s:1406   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/cc3QCLpR.s:1487   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/cc3QCLpR.s:1494   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/cc3QCLpR.s:1507   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/cc3QCLpR.s:1561   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/cc3QCLpR.s:1567   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/cc3QCLpR.s:1598   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cc3QCLpR.s:1605   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/cc3QCLpR.s:1618   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/cc3QCLpR.s:1648   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cc3QCLpR.s:1655   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
ARM GAS  /tmp/cc3QCLpR.s 			page 188


     /tmp/cc3QCLpR.s:1668   .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/cc3QCLpR.s:1756   .text.UART_RxISR_16BIT:0000000000000000 $t
     /tmp/cc3QCLpR.s:1845   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/cc3QCLpR.s:1903   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cc3QCLpR.s:1910   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/cc3QCLpR.s:1923   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/cc3QCLpR.s:1953   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/cc3QCLpR.s:1960   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/cc3QCLpR.s:1973   .text.UART_DMAError:0000000000000000 $t
     /tmp/cc3QCLpR.s:2055   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/cc3QCLpR.s:2062   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/cc3QCLpR.s:2347   .text.HAL_UART_IRQHandler:0000000000000174 $d
     /tmp/cc3QCLpR.s:2358   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/cc3QCLpR.s:2352   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/cc3QCLpR.s:2386   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/cc3QCLpR.s:2393   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/cc3QCLpR.s:2406   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/cc3QCLpR.s:2413   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/cc3QCLpR.s:2585   .text.HAL_UART_Abort_IT:00000000000000d8 $d
     /tmp/cc3QCLpR.s:2663   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/cc3QCLpR.s:2597   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/cc3QCLpR.s:2591   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/cc3QCLpR.s:2657   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/cc3QCLpR.s:2717   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/cc3QCLpR.s:2724   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/cc3QCLpR.s:2737   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/cc3QCLpR.s:2744   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/cc3QCLpR.s:2827   .text.HAL_UART_AbortTransmit_IT:0000000000000060 $d
     /tmp/cc3QCLpR.s:2838   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/cc3QCLpR.s:2832   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc3QCLpR.s:2867   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/cc3QCLpR.s:2874   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/cc3QCLpR.s:2887   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/cc3QCLpR.s:2894   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/cc3QCLpR.s:2995   .text.HAL_UART_AbortReceive_IT:0000000000000080 $d
     /tmp/cc3QCLpR.s:3006   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/cc3QCLpR.s:3000   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc3QCLpR.s:3045   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 $t
     /tmp/cc3QCLpR.s:3052   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 HAL_UART_ReceiverTimeout_Config
     /tmp/cc3QCLpR.s:3076   .text.HAL_UART_ReceiverTimeout_Config:0000000000000014 $d
     /tmp/cc3QCLpR.s:3081   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 $t
     /tmp/cc3QCLpR.s:3088   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 HAL_UART_EnableReceiverTimeout
     /tmp/cc3QCLpR.s:3151   .text.HAL_UART_EnableReceiverTimeout:0000000000000044 $d
     /tmp/cc3QCLpR.s:3156   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 $t
     /tmp/cc3QCLpR.s:3163   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 HAL_UART_DisableReceiverTimeout
     /tmp/cc3QCLpR.s:3226   .text.HAL_UART_DisableReceiverTimeout:0000000000000044 $d
     /tmp/cc3QCLpR.s:3231   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/cc3QCLpR.s:3238   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/cc3QCLpR.s:3257   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/cc3QCLpR.s:3264   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/cc3QCLpR.s:3313   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/cc3QCLpR.s:3320   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/cc3QCLpR.s:3369   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/cc3QCLpR.s:3376   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/cc3QCLpR.s:3421   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/cc3QCLpR.s:3428   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/cc3QCLpR.s:3450   .text.HAL_UART_GetError:0000000000000000 $t
ARM GAS  /tmp/cc3QCLpR.s 			page 189


     /tmp/cc3QCLpR.s:3457   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/cc3QCLpR.s:3475   .text.UART_SetConfig:0000000000000000 $t
     /tmp/cc3QCLpR.s:3482   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/cc3QCLpR.s:3590   .text.UART_SetConfig:000000000000008c $d
     /tmp/cc3QCLpR.s:3600   .text.UART_SetConfig:000000000000009e $t
     /tmp/cc3QCLpR.s:3610   .text.UART_SetConfig:00000000000000b2 $d
     /tmp/cc3QCLpR.s:3614   .text.UART_SetConfig:00000000000000b6 $t
     /tmp/cc3QCLpR.s:3644   .text.UART_SetConfig:00000000000000da $d
     /tmp/cc3QCLpR.s:3840   .text.UART_SetConfig:00000000000001d4 $d
     /tmp/cc3QCLpR.s:3905   .text.UART_SetConfig:0000000000000222 $d
     /tmp/cc3QCLpR.s:3980   .text.UART_SetConfig:0000000000000298 $d
     /tmp/cc3QCLpR.s:3993   .text.UART_SetConfig:00000000000002c0 $t
     /tmp/cc3QCLpR.s:4019   .text.UART_SetConfig:00000000000002e2 $d
     /tmp/cc3QCLpR.s:4260   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/cc3QCLpR.s:4267   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/cc3QCLpR.s:4389   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cc3QCLpR.s:4396   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/cc3QCLpR.s:4507   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/cc3QCLpR.s:4514   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/cc3QCLpR.s:4694   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/cc3QCLpR.s:4701   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/cc3QCLpR.s:4927   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/cc3QCLpR.s:4934   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/cc3QCLpR.s:5026   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/cc3QCLpR.s:5033   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/cc3QCLpR.s:5128   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/cc3QCLpR.s:5135   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/cc3QCLpR.s:5236   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/cc3QCLpR.s:5243   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/cc3QCLpR.s:5376   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/cc3QCLpR.s:5383   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/cc3QCLpR.s:5506   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/cc3QCLpR.s:5513   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/cc3QCLpR.s:5557   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/cc3QCLpR.s:5564   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
                     .debug_frame:0000000000000010 $d
     /tmp/cc3QCLpR.s:3657   .text.UART_SetConfig:00000000000000e7 $d
     /tmp/cc3QCLpR.s:3657   .text.UART_SetConfig:00000000000000e8 $t
     /tmp/cc3QCLpR.s:3849   .text.UART_SetConfig:00000000000001dd $d
     /tmp/cc3QCLpR.s:3849   .text.UART_SetConfig:00000000000001de $t
     /tmp/cc3QCLpR.s:3914   .text.UART_SetConfig:000000000000022b $d
     /tmp/cc3QCLpR.s:3914   .text.UART_SetConfig:000000000000022c $t
     /tmp/cc3QCLpR.s:4028   .text.UART_SetConfig:00000000000002eb $d
     /tmp/cc3QCLpR.s:4028   .text.UART_SetConfig:00000000000002ec $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uldivmod
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
